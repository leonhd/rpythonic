## generated by RPythonic 0.4.4
## http://code.google.com/p/rpythonic/
import os, sys, ctypes, inspect
__os = os
__sys = sys
__inspect = inspect

IS32BIT = (ctypes.sizeof(ctypes.c_void_p)==4)
PYTHON_RESERVED_KEYWORDS = 'for while in as global with try except lambda return raise if else elif eval exec and not or break continue finally print yield del def class assert from is pass'.split()

## try to load precompiled c-libraries from this directory, if the library is not there try to load from the system.
_clibs_dir = os.path.dirname(os.path.abspath(__file__))

def _load_ctypes_lib( name ):
	if __os.name == 'posix':
		if __sys.platform=='linux2':
			if not name.endswith('.so'): name += '.so'
			if not name.startswith('lib'): name = 'lib' + name

			if IS32BIT: 	path = __os.path.join(_clibs_dir,'linux32')
			else: 		path = __os.path.join(_clibs_dir,'linux64')
			url = __os.path.join( path, name )
			if __os.path.isfile( url ): return ctypes.CDLL(url)
			elif __os.path.isfile( '/usr/local/lib/%s'%name ): return ctypes.CDLL('/usr/local/lib/%s'%name)
			elif __os.path.isfile( '/usr/local/lib64/%s'%name ) and not IS32BIT: return ctypes.CDLL('/usr/local/lib64/%s'%name)
			elif __os.path.isfile( '/usr/lib/%s'%name ): return ctypes.CDLL('/usr/lib/%s'%name)
			elif __os.path.isfile( './%s'%name ): return ctypes.CDLL('./%s'%name)
			else:	# fallback
				try: return ctypes.CDLL(name)
				except: return ctypes.CDLL('')

		elif sys.platform == 'darwin':
			name += '.dylib'
			if IS32BIT: 	path = os.path.join(_clibs_dir,'osx32')
			else: 		path = os.path.join(_clibs_dir,'osx64')
			url = os.path.join( path, name )
			if os.path.isfile( url ): return ctypes.CDLL(url)
			else: return ctypes.CDLL(name) #fallback

	elif os.name == 'nt':
		name += '.dll'
		if IS32BIT: 	path = os.path.join(_clibs_dir,'win32')
		else: 		path = os.path.join(_clibs_dir,'win64')
		url = os.path.join( path, name )
		if os.path.isfile( url ): return ctypes.CDLL(url)
		else: return ctypes.CDLL(name) #fallback

RPYTHONIC_WRAPPER_FUNCTIONS = {}
RPYTHONIC_WRAPPER_FUNCTIONS_FAILURES = []
RPYTHONIC_AUTOPREFIX_IGNORE = []

## ctypes does not clearly expose these types ##
PyCFuncPtrType = type(ctypes.CFUNCTYPE(ctypes.c_void_p))
PyCArrayType = type( ctypes.c_int * 2 )
PyCPointerType = type( ctypes.POINTER(ctypes.c_int) )
PyCStructType = type( ctypes.Structure )
CArgObject = type( ctypes.byref(ctypes.c_int()) )

class _rpythonic_meta_(object):
	'''
	Reserved Attributes:
		POINTER
		CSTRUCT
		CAST
	'''
	_rpythonic_ = True		# workaround for now, must have a way to know if object is a meta from another module, isinstance(o,_rpythonic_meta_) will fail in those cases. another workaround could be check sys.modules for other rpythonic modules and fetch _rpythonic_meta_ from there.
	def __init__(self, *args, **kw ):							# cheap trick, abuse **kw, and look for "pointer", "cast"
		if kw and 'pointer' not in kw: raise SyntaxError	# sorry, you can not init with keywords
		elif kw and 'pointer' in kw:
			if 'cast' in kw and kw['cast']:
				self.POINTER = ctypes.cast( kw['pointer'], ctypes.POINTER(self.CSTRUCT) )
			else: self.POINTER = kw['pointer']
		else: self.POINTER = ctypes.pointer( self.CSTRUCT(*args) )
		self.POINTER.pyobject = self	# .pyobject is local to this pointer "object"

	def __getattr__(self,name):
		if hasattr( self.POINTER.contents, name ):
			return getattr( self.POINTER.contents, name )

		else:	# when rpythonic failed to generate good bindings - these lookups should be cached
			for parent in self._rpythonic_parent_classes_:
				if hasattr( parent, name ):
					method = getattr( parent, name )	# should check if it really is an unbound method
					func = parent._rpythonic_unbound_lookup_[ method ]
					n = func.name
					if len(func.argnames) > 1:
						argnames = func.argnames[ 1 : ]
						a = ',' + '=None,'.join( argnames ) + '=None'
						b = ','.join( argnames )
					else: a = b = ''
					lamb = eval( 'lambda self %s: %s( self.POINTER, %s )' %(a,n,b) )
					setattr( self.__class__, name, lamb )
					#return lamb	# this would return the unbound lambda, must call getattr again
					return getattr( self, name )

			## last resort, load from global name space ##
			G = globals()
			if name in G: return lambda *args: G[name](self.POINTER, *args)
			else:
				for prefix in self._autoprefix_:
					n = prefix + name
					if n in G: return lambda *args: G[n](self.POINTER, *args)
				print( 'possible auto-prefixes available', self._autoprefix_ )
				raise AttributeError

	def __call__(self, type=False):
		print('calling object is DEPRECATED - use ob.POINTER or ob.CSTRUCT')
		if type: return self.CSTRUCT
		else: return self.POINTER


def _rpythonic_generate_subclass_( name, struct, functions ):
	head = 'class %s( _rpythonic_meta_ ):' %name
	body = [ 
		'_rpythonic_parent_classes_ = []' ,
		'_rpythonic_unbound_lookup_ = {}' 
	]

	names = [ func.name for func in functions ]

	possibles = {}
	rank = []		# rank by longest name
	if len(names) > 3000: print('too many functions to use this hack')
	else:
		for n1 in names:
			prefix = ''
			for i,char in enumerate(n1):
				prefix += char
				if prefix not in possibles:
					possibles[ prefix ] = 0
					for n2 in names:
						if n2.startswith( prefix ):
							possibles[ prefix ] += 1

					if not rank or len(prefix) > len(rank[-1]) and possibles[prefix] > len(names)/4:
						rank.append( prefix )

	top = []
	while rank:
		best = rank.pop()
		if possibles[best] > len(functions)/2 and best not in names:
			if best.endswith('_set_') or best.endswith('_get_'): best = best[ : -4 ]
			elif best.endswith('Set') or best.endswith('Get'): best = best[ : -3 ]

			rem = []
			for other in rank:
				if best.startswith(other): rem.append( other )
			for r in rem: rank.remove( r )

			if best not in top: top.append( best )

		if len(top) > 3: break

	for n in names:		# find shortest prefixes #
		prefix = ''
		for i,char in enumerate(n):		# cammelCase
			if i==0: prefix += char; continue
			if char.isupper() and len(prefix) >= 2: break
			prefix += char
		if prefix and prefix != n and len(prefix) >= 2:
			hits = 0
			for other in names:
				if other.startswith( prefix ): hits += 1
			if hits >= 2 and prefix not in top:
				top.append( prefix )
				if len(top) >= 6: break

	## setup full names
	for func in functions:
		n = func.name
		if len(func.argnames) > 1:
			argnames = func.argnames[ 1 : ]
			a = ',' + '=None,'.join( argnames ) + '=None'
			b = ','.join( argnames )
		else: a = b = ''

		fhead = 'def %s( self %s ):' %(n,a)
		fbody = ['return %s(self.POINTER, %s)' %(func.name,b)]
		g = fhead + '\n\t\t' + '\n\t\t'.join( fbody )
		body.append( g )
		#body.append( '%s._rpythonic_function_ = %s' %(func.name, func.name) )

	## setup short names ##
	for n in names:
		for prefix in top:
			if n.startswith(prefix) and n[len(prefix):] not in names:
				alt = n[ len(prefix) : ]
				if alt and alt != n and alt not in PYTHON_RESERVED_KEYWORDS and not alt.isdigit() and not alt[0].isdigit():
					body.append( '%s = %s' %(alt,n) )
					names.append( alt )

	gen = head + '\n\t' + '\n\t'.join( body )
	try: exec( gen )
	except:
		print( gen )
		raise SyntaxError

	klass = locals()[name]
	klass.CSTRUCT = struct	# ctypes struct class

	klass._autoprefix_ = top
	for func in functions:
		unbound = getattr( klass, func.name )
		klass._rpythonic_unbound_lookup_[ unbound ] = func
		# klass.longname is klass.shortname = False
		# klass.longname == klass.shortname = True
	return klass

def _rpythonic_convert_structs_to_objects():
	G = globals()
	for klass in _OOAPI_:
		altname = name = klass.__name__
		prefix = ''
		for i,char in enumerate(name):
			if i==0: prefix += char; continue
			if char.isupper(): break
			prefix += char
		if prefix and prefix != name:
			hits = 0
			for other in _OOAPI_:
				if other is not klass:
					if other.__name__.startswith( prefix ): hits += 1
			if hits >= 2:
				altname = name[ len(prefix) : ]

		funcs = _OOAPI_[ klass ]
		newklass = _rpythonic_generate_subclass_( altname, klass, funcs )
		klass._rpythonic_wrapper_class_ = newklass
		G[ name ] = newklass	# replace struct with wrapper
		if altname not in G: G[ altname ] = newklass	# safely define with nicer name
		elif altname != name: # odd cases, maybe a function that returns the object, almost never happens.
			print('WARN - not replacing something with struct wrapper:', G[altname] )


def _rpythonic_setup_return_wrappers():
	R = _rpythonic_function_
	for klass in _OOAPI_:
		if klass in _OOAPI_RETURNS_OBJECT_:
			for f in _OOAPI_RETURNS_OBJECT_[klass]:
				f.object_oriented = True
				if not f.return_wrapper:	# just in case the ctypes footer defines it
					f.return_wrapper = klass._rpythonic_wrapper_class_

def _rpythonic_function_( name, result=ctypes.c_void_p, args=[]):
	mname = '_metafunc_%s' %name
	exec( 'class %s( _rpythonic_metafunc_ ): pass' %mname )
	k = locals()[mname]
	return k( name, result, args )

_OOAPI_ = {}
_OOAPI_RETURNS_OBJECT_ = {}

class _rpythonic_metafunc_(object):
	def __init__(self, name, result=ctypes.c_void_p, args=[]):
		self.name = name
		self.result = result
		self.argtypes = []		# can dynamically change CFUNCTYPE trick
		self.argnames = []
		self.argtypestypes = []
		for i,arg in enumerate(args):
			n,t = arg
			if n in PYTHON_RESERVED_KEYWORDS: n = 'C_'+n
			if n in self.argnames: n = '%s%s' %(n,i)
			self.argnames.append( n )
			self.argtypes.append( t )
			self.argtypestypes.append( type(t) )		# precomputed for speed

		self.argnames = tuple( self.argnames )				# should never change
		self.numargs = len( self.argtypes )
		self.callbacks = [None] * self.numargs
		self.return_wrapper = None
		self.object_oriented = False
		self.function = None
		try:
			func = self.function = getattr(CTYPES_DLL, self.name )
			RPYTHONIC_WRAPPER_FUNCTIONS[ name ] = self
		except:
			RPYTHONIC_WRAPPER_FUNCTIONS_FAILURES.append( name )
		if self.function: self.reset()

	def change_argument_type( self, name, t ):
		idx = self.argnames.index( name )
		self.argtypes[ idx ] = t
		self.argtypestypes[ idx ] = type(t)
		self.function.argtypes = self.argtypes

	def reset(self):
		if self.argnames:
			a = ',' + '=None,'.join( self.argnames ) + '=None'
			b = ','.join( self.argnames )
		else: a = b = ''

		callmeth = eval( 'lambda self %s: self._call_( %s )' %(a,b) )
		setattr( self.__class__, '__call__', callmeth )

		self.function.restype = self.result
		self.function.argtypes = self.argtypes

		if type( self.result ) is PyCPointerType and type(self.result._type_) is PyCStructType:
			klass = self.result._type_
			if klass not in _OOAPI_RETURNS_OBJECT_: _OOAPI_RETURNS_OBJECT_[klass] = []
			_OOAPI_RETURNS_OBJECT_[klass].append( self )

		self.defaults = []
		for i in range( self.numargs ):
			T = self.argtypes[ i ]
			if type(T) is PyCFuncPtrType:
				p = T()	# func pointers can not be None
				self.defaults.append( p )
				self.callbacks[ i ] = p					# save reference
			elif T in (ctypes.c_int, ctypes.c_uint, ctypes.c_long, ctypes.c_ulong):
				self.defaults.append( 0 )
			elif T in (ctypes.c_float, ctypes.c_double):
				self.defaults.append( .0 )
			else: self.defaults.append( None )	# None is allowed for all other types

			## generate OO API ##
			if i == 0 and type(T) is PyCPointerType and type(T._type_) is PyCStructType:
				klass = T._type_
				if klass not in _OOAPI_: _OOAPI_[ klass ] = []
				_OOAPI_[ klass ].append( self )

	def _call_( self, *args ):			# allow flexible calling types
		cargs = list( self.defaults )
		for i,arg in enumerate(args):
			if isinstance( arg, _rpythonic_meta_ ): arg = arg.POINTER
			elif hasattr( arg, '_rpythonic_' ): arg = arg.POINTER		# workaround - instance from another module

			t = type(arg)
			k = self.argtypes[ i ]
			kt = self.argtypestypes[ i ]
			if arg is None and cargs[i] is not None:	# use user defaults, very rare cases
				continue

			elif t is bool and k is ctypes.c_int:
				if arg: cargs[i] = 1	#ctypes.c_int(1)
				else: cargs[i] = 0	#ctypes.c_int(0)

			elif t in (list,tuple):				# convert lists and tuples into array
				if kt is PyCArrayType:
					cargs[ i ] = k(*arg)
				elif kt is PyCStructType:
					if k._array_wrapper_: cargs[ i ] = k(arg)	# allow easy array init
					else: cargs[ i ] = k(*arg)							# allow multiple args
				elif kt is PyCPointerType:
					cargs[ i ] = _convert_nested_list_to_pointer( k, arg )
				else: assert 0

			elif isinstance( arg, ctypes._Pointer ) and t is not k and kt is PyCPointerType:
				cargs[ i ] = ctypes.cast( arg, k )		# generic's that need to be cast

			elif kt is PyCStructType and isinstance( arg, ctypes._Pointer ):
				cargs[ i ] = arg.contents	# fixed may25

			elif kt is PyCPointerType and not isinstance( arg, (ctypes._Pointer,CArgObject) ):
				if t in (int,float,bool): ptr = k( k._type_(arg) )
				elif t is str:
					arg = arg.encode('utf-8')
					#ptr = k( k._type_() )								# not k() otherwise null pointer error
					#for j, char in enumerate(arg): ptr[ j ] = char		# not correct - missing null byte?
					ptr = ctypes.create_string_buffer(arg)				# correct and pypy compatible
				elif t in (PyCStructType, PyCArrayType):
					ptr = ctypes.cast( ctypes.pointer( arg ), k )
				else:
					ptr = arg	# TODO print warning?
				cargs[ i ] = ptr

			elif kt is PyCFuncPtrType:
				if t.__name__ == 'CFunctionType': cargs[ i ] = arg		# assume outside holds pointer
				else:													# this is not safe #
					cargs[ i ] = self.callbacks[ i ] = k( arg )				# assume arg is a callable
			else:
				cargs[ i ] = arg		# directly pass

		## if you define your own return_wrapper, it must take keyword "pointer"
		if self.return_wrapper: return self.return_wrapper( pointer=self.function( *cargs ) )
		else: return self.function( *cargs )



def _convert_nested_list_to_pointer( k, arg ):
	depth = 0; s = k
	while True:
		if type(s) is PyCPointerType:
			s = getattr( s, '_type_' )
			depth += 1
		else: break
	assert depth and depth <= 2
	if depth == 1:
		T = k._type_
		ptr = k( k._type_() )
		for i in range( len(arg) ):
			ptr[ i ] = T( *arg[i] )
	elif depth == 2:
		T = k._type_._type_
		_ptr = k._type_( k._type_._type_() )
		for i in range(len( arg )):
			for j in range( len(arg[i]) ):
				_ptr[ j ] = T( *arg[ i ][ j ] )
		ptr = k( _ptr )
	return ptr


def __freeze_rpythonic_struct( cls, fields ):
	if cls not in _OOAPI_: _OOAPI_[ cls ] = []	# wrap all structs
	try: setattr( cls, '_fields_', fields )
	except:
		print( 'WARN - bad order struct freeze', cls )
		#cls._fields_ = []

class _rpythonic_struct_( ctypes.Structure ):
	_array_wrapper_ = False
	_fields_ = []
	_methods_ = {}
	#def __call__(self): return self
	def __init__(self, *args, **kw ):
		cargs = []
		argtypes = []
		for a in self._fields_: argtypes.append( a[1] )
		if len(args) > len(argtypes): args = [args]	# allow both calling conventions
		for i,arg in enumerate( args ):
			if isinstance( arg, _rpythonic_meta_ ): arg = arg.POINTER

			t = type(arg)
			k = argtypes[ i ]
			if t in (list,tuple):
				if k.__class__.__name__	== 'PyCArrayType':
					cargs.append( k(*arg) )
				elif k.__class__.__name__ == 'PyCStructType':
					if k._array_wrapper_: cargs.append( k(arg) )	# allow easy array init
					else: cargs.append( k(*arg) )							# allow multiple args
			elif isinstance( arg, ctypes._Pointer ) and t is not k:
				cargs[ i ] = ctypes.cast( arg, k )	# generic's that need to be cast
			elif k.__class__.__name__ == 'PyCArrayType' and t in (float,int,bool):
				cargs.append( k(arg) )		# support init array from single value
			else:
				cargs.append( arg )		# directly pass

		ctypes.Structure.__init__(self, *cargs, **kw)


def _rpythonic_make_nice_global_enums_():
	G = globals()
	for name in RPYTHONIC_GLOBAL_ENUMS:
		if '_' in name and name.index('_') <= 4:
			altname = name[ name.index('_') + 1 : ]
			if altname not in G:
				G[altname] = RPYTHONIC_GLOBAL_ENUMS[ name ]

def _rpythonic_clean_up_missing_functions_():
	G = globals()
	for f in RPYTHONIC_WRAPPER_FUNCTIONS_FAILURES:
		G.pop( f )
	print( "C functions loaded: %s" %len(RPYTHONIC_WRAPPER_FUNCTIONS) )
	print( "C functions failed: %s" %len(RPYTHONIC_WRAPPER_FUNCTIONS_FAILURES) )



###### NEW API #########
CTYPES_DLL = None

class _VOID_POINTER_CONTAINER_(object):
	def __init__(self, ptr, name=None):
		self._pointer_ = ptr
		self.name = name
NULL = _VOID_POINTER_CONTAINER_(None,'<null pointer>')


class meta:	# NEW API - allow run time switch from ctypes to rffi
	'''
	Methods:
		RPython will not allow object wrapper around a method (__call__ not allowed)
		keep C function names in list "__cfunctions__"
		rpythonic.enable_rffi( classA, classB )	
		can take advantage of methods in object-method-wrapper,
		generate rffi wrapper and set method on classA, etc.
		replaces object-method-wrapper with rffi-method

	Properties:
		CPython: obj.x=1
		RPython: obj.set_x(1)	
	'''
	METAS = []
	def __init__(self, constructors=[], methods={}, properties={}):
		global CTYPES_DLL
		if not CTYPES_DLL:
			CTYPES_DLL = _load_ctypes_lib( _clib_name_ )

		self.constructors = constructors
		self.methods = methods
		self.properties = properties
		self.METAS.append( self )



	def __call__(self, cls ):
		print('@meta', cls )

		if not self.constructors:
			lamb = lambda s, _explicit_pointer_=None: setattr(s,'_pointer_',getattr(_explicit_pointer_,'_pointer_')) if hasattr(_explicit_pointer_,'_pointer_') else setattr(s,'_pointer_',_explicit_pointer_)
			lamb._debug = '(no constructor)'
			setattr( cls, '__init__', lamb )
		else:
			con = self._find_best_function( self.constructors )
			cfunc = self._build_cfunc( con )
			setattr( cls, '_%s'%con['name'], cfunc )
			g = self._gen_init( con )
			setattr( cls, '__init__', g )
		
		## set methods ##
		for name in self.methods:
			meth = self.methods[ name ]
			cfuncs = []
			for m in meth['functions']:
				cfunc = self._build_cfunc( m, method=True, static=meth['static'] )
				self._setup_return( cfunc, meth )
				setattr( cls, '_%s'%m['name'], cfunc )
				cfuncs.append( cfunc )

			f = self._find_best_function( meth['functions'] )
			g = self._gen_method( meth, f )
			g._cfuncs = cfuncs
			if meth['static']: g = classmethod( g )
			setattr( cls, name, g )

		for name in self.properties:
			print( 'property:', name )
			p = []
			for f in self.properties[name]:
				cfunc = self._build_cfunc( f )
				setattr( cls, '_%s'%f['name'], cfunc )
				g = self._gen_method( f, f )
				p.append( g )

			setattr( cls, name, property(*p) )

		return cls


	@staticmethod
	def _build_cfunc( info, method=False, static=False ):
		cfunc = getattr(CTYPES_DLL, info['name'])
		if method and not static: argtypes = [ ctypes.c_void_p ]
		else: argtypes = []
		for p in info['parameters']: argtypes.append( eval(p['ctypes_type']) )
		cfunc.argtypes = argtypes
		return cfunc

	@staticmethod
	def _setup_return( cfunc, info ):
		if not info['returns_fundamental']:
			cfunc.restype = ctypes.c_void_p
		elif info['returns_fundamental']:
			cfunc.restype = eval( info['returns_ctypes'] )
		else:
			cfunc.restype = ctypes.c_void_p

	@staticmethod
	def _gen_prepare_args( m ):
		a = []; b = []
		for i,p in enumerate(m['parameters']):
			if 'name' in p: n = p['name']
			else: n = '_unnamed_%s' %i
			if '<' in n: n = '_TODOfixme_%s' %i
			if n in PYTHON_RESERVED_KEYWORDS: n += str(i)
			if p['fundamental']:
				b.append( n )
				s = p['raw_type'].split()
				if 'default' in p:
					d = p['default']
					if p['raw_type'] in ('float', 'double'):
						if d.endswith('f'): d = d[:-1]
						d = d.replace(' ', '.')
						if 'e' in d: d = 0.0
						try: d = float(d)
						except: d = 0.0
					elif ('int' in s or 'size_t' in s) and not d.isdigit(): d = 0
					elif 'char' in s and '"' not in d: d = '""'
					elif d.lower() == 'false': d = False
					elif d.lower() == 'true': d = True
				elif 'char' in s: d = '""'
				elif 'float' in s or 'double' in s: d = 0.0
				elif 'size_t' in s or 'int' in s or 'long' in s or 'short' in s: d = 0
				elif p['raw_type'] == 'bool': d = False
				elif p['raw_type'] in ('void', '(template)'): d = 'NULL'
				else: print( p )
				a.append( n+'=%s' %d )

			else:
				b.append( '%s._pointer_'%n )
				a.append( n+'=NULL' )
		return a, b

	@staticmethod
	def _gen_init( m ):
		a, b = meta._gen_prepare_args( m )
		if a: e = 'lambda _py_self_, %s, _explicit_pointer_=None: ' %(','.join(a))
		else: e = 'lambda _py_self_, _explicit_pointer_=None: '
		e += 'setattr(_py_self_, "_pointer_", _py_self_._%s(%s))' %( m['name'], ','.join(b) )
		e += ' if not _explicit_pointer_ else '
		e += 'setattr(_py_self_, "_pointer_", _explicit_pointer_)'
		print( e )
		lamb = eval( e ); lamb._debug = e; lamb._introspect = m
		return lamb

	@staticmethod
	def _find_best_function( funcs ):
		best = funcs[0]
		score = -1
		if len(funcs) > 1:
			for f in funcs:
				hits = 0
				for p in f['parameters']:
					if p['fundamental']: hits += 1
				if hits and hits == len( f['parameters'] ):
					if hits > score:
						score = hits
						best = f
		return best

	@staticmethod
	def _gen_method( m, f ):
		a, b = meta._gen_prepare_args( f )
		if a: e = 'lambda _py_self_, %s: ' %(','.join(a))
		else: e = 'lambda _py_self_: '

		if 'static' in m and m['static']:	# static in c++ is like a classmethod
			c = '_py_self_._%s( %s )' %( f['name'], ','.join(b) )
		else:
			c = '_py_self_._%s( _py_self_._pointer_, %s )' %( f['name'], ','.join(b) )

		if not m['returns_fundamental']:
			if 'returns_unknown' in m or '<' in m['returns']: c = '_VOID_POINTER_CONTAINER_( %s, name="%s" )' %(c,m['returns'])
			else:
				something = m['returns'].replace('::', '.')
				c = '%s( _explicit_pointer_=%s )' %(something, c)

		e += c; lamb = eval( e )
		lamb._debug = e; lamb._introspect = f
		return lamb


	META_FUNCTIONS = []
	@classmethod
	def function( self, info ):
		print('@meta.function', info['name'] )
		global CTYPES_DLL
		if not CTYPES_DLL:
			CTYPES_DLL = _load_ctypes_lib( _clib_name_ )

		cfunc = self._build_cfunc( info, method=False, static=True )
		setattr( meta, '_%s'%info['name'], cfunc )
		self._setup_return( cfunc, info )
		a, b = meta._gen_prepare_args( info )
		e = 'lambda %s: ' %(','.join(a))
		c = 'meta._%s( %s )' %( info['name'], ','.join(b) )

		if not info['returns_fundamental']:
			if 'returns_unknown' in info or '<' in info['returns']:
				c = '_VOID_POINTER_CONTAINER_( %s, name="%s" )' %(c,info['returns'])
			else:
				something = info['returns'].replace('::', '.')
				c = '%s( _explicit_pointer_=%s )' %(something, c)
		e += c
		lamb = eval( e )
		lamb._debug = e
		lamb._introspect = info
		return lamb



def _rpythonic_strip_prefixes_( prefixes ):
	G = globals()
	names = list(G.keys())	# ensure list in py3
	for name in names:
		for prefix in prefixes:
			if name.startswith( prefix ):
				newname = name[ len(prefix) : ]
				if newname and newname not in G:
					G[ newname ] = G[ name ]






_clib_name_ = 'libglut'
print('loading lib', _clib_name_)
print( os.path.abspath( os.path.curdir ) )
CTYPES_DLL = _load_ctypes_lib( _clib_name_ )
assert CTYPES_DLL
print( CTYPES_DLL._name )

## macro globals ##
## enums ##

## simple enums ##
RPYTHONIC_GLOBAL_ENUMS = { 

}
class imaxdiv_t(_rpythonic_struct_): pass
class __GLsync(_rpythonic_struct_): pass
class _cl_context(_rpythonic_struct_): pass
class _cl_event(_rpythonic_struct_): pass
class GLUnurbs(_rpythonic_struct_): pass
class GLUquadric(_rpythonic_struct_): pass
class GLUtesselator(_rpythonic_struct_): pass
class wait(ctypes.Union): pass
class __wait_terminated(_rpythonic_struct_): pass
class __wait_stopped(_rpythonic_struct_): pass
class __WAIT_STATUS(ctypes.Union): pass
class div_t(_rpythonic_struct_): pass
class ldiv_t(_rpythonic_struct_): pass
class lldiv_t(_rpythonic_struct_): pass
class __fsid_t(_rpythonic_struct_): _array_wrapper_ = True
class __sigset_t(_rpythonic_struct_): _array_wrapper_ = True
class timespec(_rpythonic_struct_): pass
class timeval(_rpythonic_struct_): pass
class fd_set(_rpythonic_struct_): _array_wrapper_ = True
class pthread_attr_t(ctypes.Union): pass
class __pthread_internal_slist(_rpythonic_struct_): pass
class pthread_mutex_t(ctypes.Union): pass
class __pthread_mutex_s(_rpythonic_struct_): pass
class pthread_mutexattr_t(ctypes.Union): pass
class pthread_cond_t(ctypes.Union): pass
class pthread_condattr_t(ctypes.Union): pass
class pthread_rwlock_t(ctypes.Union): pass
class __data(_rpythonic_struct_): pass
class pthread_rwlockattr_t(ctypes.Union): pass
class pthread_barrier_t(ctypes.Union): pass
class pthread_barrierattr_t(ctypes.Union): pass
class random_data(_rpythonic_struct_): pass
class drand48_data(_rpythonic_struct_): _array_wrapper_ = True
## union and structures ##
__freeze_rpythonic_struct( imaxdiv_t, [
	( "quot", ctypes.c_longlong ),
	( "rem", ctypes.c_longlong ),
])

__freeze_rpythonic_struct( __GLsync, [
])

__freeze_rpythonic_struct( _cl_context, [
])

__freeze_rpythonic_struct( _cl_event, [
])

__freeze_rpythonic_struct( GLUnurbs, [
])

__freeze_rpythonic_struct( GLUquadric, [
])

__freeze_rpythonic_struct( GLUtesselator, [
])

__freeze_rpythonic_struct( __wait_terminated, [
	( "__w_termsig", ctypes.c_uint ),
	( "__w_coredump", ctypes.c_uint ),
	( "__w_retcode", ctypes.c_uint ),
	#opaque-warning# <rpythonic.rpythonic.SomeThing object at 0xc6b52cc>
])

__freeze_rpythonic_struct( __wait_stopped, [
	( "__w_stopval", ctypes.c_uint ),
	( "__w_stopsig", ctypes.c_uint ),
	#opaque-warning# <rpythonic.rpythonic.SomeThing object at 0xc6b540c>
])

__freeze_rpythonic_struct( wait, [
	( "w_status", ctypes.c_int ),
	( "__wait_terminated", __wait_terminated ),
	( "__wait_stopped", __wait_stopped ),
])

__freeze_rpythonic_struct( __WAIT_STATUS, [
	( "__uptr", ctypes.POINTER(wait) ),
	( "__iptr", ctypes.POINTER(ctypes.c_int) ),
])

__freeze_rpythonic_struct( div_t, [
	( "quot", ctypes.c_int ),
	( "rem", ctypes.c_int ),
])

__freeze_rpythonic_struct( ldiv_t, [
	( "quot", ctypes.c_int64 ),
	( "rem", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( lldiv_t, [
	( "quot", ctypes.c_longlong ),
	( "rem", ctypes.c_longlong ),
])

__freeze_rpythonic_struct( __fsid_t, [
	( "__val", ( ctypes.c_int * 2 ) ),
])

__freeze_rpythonic_struct( __sigset_t, [
	( "__val", ctypes.c_uint64 ),
])

__freeze_rpythonic_struct( timespec, [
	( "tv_sec", ctypes.c_int64 ),
	( "tv_nsec", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( timeval, [
	( "tv_sec", ctypes.c_int64 ),
	( "tv_usec", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( fd_set, [
	( "__fds_bits", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( pthread_attr_t, [
	( "__size", ( ctypes.c_char * 36 ) ),
	( "__align", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( __pthread_internal_slist, [
	( "__next", ctypes.POINTER(__pthread_internal_slist) ),
])

__freeze_rpythonic_struct( __pthread_mutex_s, [
	( "__lock", ctypes.c_int ),
	( "__count", ctypes.c_uint ),
	( "__owner", ctypes.c_int ),
	( "__kind", ctypes.c_int ),
	( "__nusers", ctypes.c_uint ),
	#opaque-warning# <rpythonic.rpythonic.SomeThing object at 0xc73542c>
])

__freeze_rpythonic_struct( pthread_mutex_t, [
	( "__data", __pthread_mutex_s ),
	( "__size", ( ctypes.c_char * 24 ) ),
	( "__align", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( pthread_mutexattr_t, [
	( "__size", ( ctypes.c_char * 4 ) ),
	( "__align", ctypes.c_int ),
])

__freeze_rpythonic_struct( __data, [
	( "__lock", ctypes.c_int ),
	( "__nr_readers", ctypes.c_uint ),
	( "__readers_wakeup", ctypes.c_uint ),
	( "__writer_wakeup", ctypes.c_uint ),
	( "__nr_readers_queued", ctypes.c_uint ),
	( "__nr_writers_queued", ctypes.c_uint ),
	( "__flags", ctypes.c_ubyte ),
	( "__shared", ctypes.c_ubyte ),
	( "__pad1", ctypes.c_ubyte ),
	( "__pad2", ctypes.c_ubyte ),
	( "__writer", ctypes.c_int ),
])

__freeze_rpythonic_struct( pthread_cond_t, [
	( "__data", __data ),
	( "__size", ( ctypes.c_char * 48 ) ),
	( "__align", ctypes.c_longlong ),
])

__freeze_rpythonic_struct( pthread_condattr_t, [
	( "__size", ( ctypes.c_char * 4 ) ),
	( "__align", ctypes.c_int ),
])

__freeze_rpythonic_struct( pthread_rwlock_t, [
	( "__data", __data ),
	( "__size", ( ctypes.c_char * 32 ) ),
	( "__align", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( pthread_rwlockattr_t, [
	( "__size", ( ctypes.c_char * 8 ) ),
	( "__align", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( pthread_barrier_t, [
	( "__size", ( ctypes.c_char * 20 ) ),
	( "__align", ctypes.c_int64 ),
])

__freeze_rpythonic_struct( pthread_barrierattr_t, [
	( "__size", ( ctypes.c_char * 4 ) ),
	( "__align", ctypes.c_int ),
])

__freeze_rpythonic_struct( random_data, [
	( "fptr", ctypes.POINTER(ctypes.c_int32) ),
	( "rptr", ctypes.POINTER(ctypes.c_int32) ),
	( "state", ctypes.POINTER(ctypes.c_int32) ),
	( "rand_type", ctypes.c_int ),
	( "rand_deg", ctypes.c_int ),
	( "rand_sep", ctypes.c_int ),
	( "end_ptr", ctypes.POINTER(ctypes.c_int32) ),
])

__freeze_rpythonic_struct( drand48_data, [
	( "__x", ( ctypes.c_uint16 * 3 ) ),
	( "__old_x", ( ctypes.c_uint16 * 3 ) ),
	( "__c", ctypes.c_uint16 ),
	( "__init", ctypes.c_uint16 ),
	( "__a", ctypes.c_ulonglong ),
])

## wrapper functions ##
PFNGLVERTEXATTRIBI3IPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3IPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI4IPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4IPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI1UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI2UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI3UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI4UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),
	("w",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI1IVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1IVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI2IVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2IVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI3IVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3IVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI4IVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4IVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI1UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI2UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI3UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI4UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI4BVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4BVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIBI4SVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4SVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIBI4UBVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4UBVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIBI4USVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4USVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLGETUNIFORMUIVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMUIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLBINDFRAGDATALOCATIONPROC = _rpythonic_function_(		"PFNGLBINDFRAGDATALOCATIONPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("color",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETFRAGDATALOCATIONPROC = _rpythonic_function_(		"PFNGLGETFRAGDATALOCATIONPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLUNIFORM1UIPROC = _rpythonic_function_(		"PFNGLUNIFORM1UIPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),] )

PFNGLUNIFORM2UIPROC = _rpythonic_function_(		"PFNGLUNIFORM2UIPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),] )

PFNGLUNIFORM3UIPROC = _rpythonic_function_(		"PFNGLUNIFORM3UIPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),] )

PFNGLUNIFORM4UIPROC = _rpythonic_function_(		"PFNGLUNIFORM4UIPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),
	("v3",		ctypes.c_uint),] )

PFNGLUNIFORM1UIVPROC = _rpythonic_function_(		"PFNGLUNIFORM1UIVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM2UIVPROC = _rpythonic_function_(		"PFNGLUNIFORM2UIVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM3UIVPROC = _rpythonic_function_(		"PFNGLUNIFORM3UIVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM4UIVPROC = _rpythonic_function_(		"PFNGLUNIFORM4UIVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTEXPARAMETERIIVPROC = _rpythonic_function_(		"PFNGLTEXPARAMETERIIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXPARAMETERIUIVPROC = _rpythonic_function_(		"PFNGLTEXPARAMETERIUIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETTEXPARAMETERIIVPROC = _rpythonic_function_(		"PFNGLGETTEXPARAMETERIIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETTEXPARAMETERIUIVPROC = _rpythonic_function_(		"PFNGLGETTEXPARAMETERIUIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCLEARBUFFERIVPROC = _rpythonic_function_(		"PFNGLCLEARBUFFERIVPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("drawbuffer",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCLEARBUFFERUIVPROC = _rpythonic_function_(		"PFNGLCLEARBUFFERUIVPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("drawbuffer",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCLEARBUFFERFVPROC = _rpythonic_function_(		"PFNGLCLEARBUFFERFVPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("drawbuffer",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCLEARBUFFERFIPROC = _rpythonic_function_(		"PFNGLCLEARBUFFERFIPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("drawbuffer",		ctypes.c_int),
	("depth",		ctypes.c_float),
	("stencil",		ctypes.c_int),] )

PFNGLGETSTRINGIPROC = _rpythonic_function_(		"PFNGLGETSTRINGIPROC", ctypes.POINTER(ctypes.c_ubyte), [
	("name",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLDRAWARRAYSINSTANCEDPROC = _rpythonic_function_(		"PFNGLDRAWARRAYSINSTANCEDPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),
	("primcount",		ctypes.c_int),] )

PFNGLDRAWELEMENTSINSTANCEDPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTSINSTANCEDPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),
	("primcount",		ctypes.c_int),] )

PFNGLTEXBUFFERPROC = _rpythonic_function_(		"PFNGLTEXBUFFERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLPRIMITIVERESTARTINDEXPROC = _rpythonic_function_(		"PFNGLPRIMITIVERESTARTINDEXPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),] )

PFNGLGETINTEGER64I_VPROC = _rpythonic_function_(		"PFNGLGETINTEGER64I_VPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLGETBUFFERPARAMETERI64VPROC = _rpythonic_function_(		"PFNGLGETBUFFERPARAMETERI64VPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLFRAMEBUFFERTEXTUREPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTUREPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLVERTEXATTRIBDIVISORPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBDIVISORPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("divisor",		ctypes.c_uint),] )

PFNGLMINSAMPLESHADINGPROC = _rpythonic_function_(		"PFNGLMINSAMPLESHADINGPROC", ctypes.c_void_p, [
	("value",		ctypes.c_float),] )

PFNGLBLENDEQUATIONIPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONIPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLBLENDEQUATIONSEPARATEIPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONSEPARATEIPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("modeRGB",		ctypes.c_uint),
	("modeAlpha",		ctypes.c_uint),] )

PFNGLBLENDFUNCIPROC = _rpythonic_function_(		"PFNGLBLENDFUNCIPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("src",		ctypes.c_uint),
	("dst",		ctypes.c_uint),] )

PFNGLBLENDFUNCSEPARATEIPROC = _rpythonic_function_(		"PFNGLBLENDFUNCSEPARATEIPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("srcRGB",		ctypes.c_uint),
	("dstRGB",		ctypes.c_uint),
	("srcAlpha",		ctypes.c_uint),
	("dstAlpha",		ctypes.c_uint),] )

PFNGLLOADTRANSPOSEMATRIXFARBPROC = _rpythonic_function_(		"PFNGLLOADTRANSPOSEMATRIXFARBPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLLOADTRANSPOSEMATRIXDARBPROC = _rpythonic_function_(		"PFNGLLOADTRANSPOSEMATRIXDARBPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTTRANSPOSEMATRIXFARBPROC = _rpythonic_function_(		"PFNGLMULTTRANSPOSEMATRIXFARBPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTTRANSPOSEMATRIXDARBPROC = _rpythonic_function_(		"PFNGLMULTTRANSPOSEMATRIXDARBPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLSAMPLECOVERAGEARBPROC = _rpythonic_function_(		"PFNGLSAMPLECOVERAGEARBPROC", ctypes.c_void_p, [
	("value",		ctypes.c_float),
	("invert",		ctypes.c_ubyte),] )

PFNGLCOMPRESSEDTEXIMAGE3DARBPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXIMAGE3DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXIMAGE2DARBPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXIMAGE2DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXIMAGE1DARBPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXIMAGE1DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOMPRESSEDTEXIMAGEARBPROC = _rpythonic_function_(		"PFNGLGETCOMPRESSEDTEXIMAGEARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLPOINTPARAMETERFARBPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFARBPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLPOINTPARAMETERFVARBPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFVARBPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWEIGHTBVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTBVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLWEIGHTSVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTSVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLWEIGHTIVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTIVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWEIGHTFVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTFVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWEIGHTDVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTDVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWEIGHTUBVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTUBVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLWEIGHTUSVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTUSVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLWEIGHTUIVARBPROC = _rpythonic_function_(		"PFNGLWEIGHTUIVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLWEIGHTPOINTERARBPROC = _rpythonic_function_(		"PFNGLWEIGHTPOINTERARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLVERTEXBLENDARBPROC = _rpythonic_function_(		"PFNGLVERTEXBLENDARBPROC", ctypes.c_void_p, [
	("count",		ctypes.c_int),] )

PFNGLCURRENTPALETTEMATRIXARBPROC = _rpythonic_function_(		"PFNGLCURRENTPALETTEMATRIXARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_int),] )

PFNGLMATRIXINDEXUBVARBPROC = _rpythonic_function_(		"PFNGLMATRIXINDEXUBVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("indices",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLMATRIXINDEXUSVARBPROC = _rpythonic_function_(		"PFNGLMATRIXINDEXUSVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("indices",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLMATRIXINDEXUIVARBPROC = _rpythonic_function_(		"PFNGLMATRIXINDEXUIVARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("indices",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLMATRIXINDEXPOINTERARBPROC = _rpythonic_function_(		"PFNGLMATRIXINDEXPOINTERARBPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLWINDOWPOS2DARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2DARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLWINDOWPOS2DVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2DVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS2FARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2FARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLWINDOWPOS2FVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2FVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS2IARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2IARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

PFNGLWINDOWPOS2IVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2IVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS2SVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2SVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLWINDOWPOS3DARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3DARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLWINDOWPOS3DVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3DVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS3FARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3FARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLWINDOWPOS3FVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3FVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS3IARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3IARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

PFNGLWINDOWPOS3IVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3IVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS3SARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3SARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLWINDOWPOS3SVARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3SVARBPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glClearIndex = _rpythonic_function_(		"glClearIndex", ctypes.c_void_p, [
	("c",		ctypes.c_float),] )

glClearColor = _rpythonic_function_(		"glClearColor", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),
	("alpha",		ctypes.c_float),] )

glClear = _rpythonic_function_(		"glClear", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

glIndexMask = _rpythonic_function_(		"glIndexMask", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

glColorMask = _rpythonic_function_(		"glColorMask", ctypes.c_void_p, [
	("red",		ctypes.c_ubyte),
	("green",		ctypes.c_ubyte),
	("blue",		ctypes.c_ubyte),
	("alpha",		ctypes.c_ubyte),] )

glAlphaFunc = _rpythonic_function_(		"glAlphaFunc", ctypes.c_void_p, [
	("func",		ctypes.c_uint),
	("ref",		ctypes.c_float),] )

glBlendFunc = _rpythonic_function_(		"glBlendFunc", ctypes.c_void_p, [
	("sfactor",		ctypes.c_uint),
	("dfactor",		ctypes.c_uint),] )

glLogicOp = _rpythonic_function_(		"glLogicOp", ctypes.c_void_p, [
	("opcode",		ctypes.c_uint),] )

glCullFace = _rpythonic_function_(		"glCullFace", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glFrontFace = _rpythonic_function_(		"glFrontFace", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glPointSize = _rpythonic_function_(		"glPointSize", ctypes.c_void_p, [
	("size",		ctypes.c_float),] )

glLineWidth = _rpythonic_function_(		"glLineWidth", ctypes.c_void_p, [
	("width",		ctypes.c_float),] )

glLineStipple = _rpythonic_function_(		"glLineStipple", ctypes.c_void_p, [
	("factor",		ctypes.c_int),
	("pattern",		ctypes.c_ushort),] )

glPolygonMode = _rpythonic_function_(		"glPolygonMode", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

glPolygonOffset = _rpythonic_function_(		"glPolygonOffset", ctypes.c_void_p, [
	("factor",		ctypes.c_float),
	("units",		ctypes.c_float),] )

glPolygonStipple = _rpythonic_function_(		"glPolygonStipple", ctypes.c_void_p, [
	("mask",		ctypes.POINTER(ctypes.c_ubyte)),] )

glPushName = _rpythonic_function_(		"glPushName", ctypes.c_void_p, [
	("name",		ctypes.c_uint),] )

glPopName = _rpythonic_function_(		"glPopName", ctypes.c_void_p, [] )

glDrawRangeElements = _rpythonic_function_(		"glDrawRangeElements", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),] )

glTexImage3D = _rpythonic_function_(		"glTexImage3D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glTexSubImage3D = _rpythonic_function_(		"glTexSubImage3D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glCopyTexSubImage3D = _rpythonic_function_(		"glCopyTexSubImage3D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLDRAWRANGEELEMENTSPROC = _rpythonic_function_(		"PFNGLDRAWRANGEELEMENTSPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXIMAGE3DPROC = _rpythonic_function_(		"PFNGLTEXIMAGE3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXSUBIMAGE3DPROC = _rpythonic_function_(		"PFNGLTEXSUBIMAGE3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYTEXSUBIMAGE3DPROC = _rpythonic_function_(		"PFNGLCOPYTEXSUBIMAGE3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glColorTable = _rpythonic_function_(		"glColorTable", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

glColorSubTable = _rpythonic_function_(		"glColorSubTable", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("count",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glColorTableParameteriv = _rpythonic_function_(		"glColorTableParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glColorTableParameterfv = _rpythonic_function_(		"glColorTableParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glCopyColorSubTable = _rpythonic_function_(		"glCopyColorSubTable", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

glCopyColorTable = _rpythonic_function_(		"glCopyColorTable", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

glGetColorTable = _rpythonic_function_(		"glGetColorTable", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetColorTableParameterfv = _rpythonic_function_(		"glGetColorTableParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetColorTableParameteriv = _rpythonic_function_(		"glGetColorTableParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glBlendEquation = _rpythonic_function_(		"glBlendEquation", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glBlendColor = _rpythonic_function_(		"glBlendColor", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),
	("alpha",		ctypes.c_float),] )

glHistogram = _rpythonic_function_(		"glHistogram", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("sink",		ctypes.c_ubyte),] )

glResetHistogram = _rpythonic_function_(		"glResetHistogram", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

glGetHistogram = _rpythonic_function_(		"glGetHistogram", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetHistogramParameterfv = _rpythonic_function_(		"glGetHistogramParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetHistogramParameteriv = _rpythonic_function_(		"glGetHistogramParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glMinmax = _rpythonic_function_(		"glMinmax", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("sink",		ctypes.c_ubyte),] )

glResetMinmax = _rpythonic_function_(		"glResetMinmax", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

glGetMinmax = _rpythonic_function_(		"glGetMinmax", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("types",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetMinmaxParameterfv = _rpythonic_function_(		"glGetMinmaxParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetMinmaxParameteriv = _rpythonic_function_(		"glGetMinmaxParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glConvolutionFilter1D = _rpythonic_function_(		"glConvolutionFilter1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

glConvolutionFilter2D = _rpythonic_function_(		"glConvolutionFilter2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

glConvolutionParameterf = _rpythonic_function_(		"glConvolutionParameterf", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.c_float),] )

glConvolutionParameterfv = _rpythonic_function_(		"glConvolutionParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glConvolutionParameteri = _rpythonic_function_(		"glConvolutionParameteri", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.c_int),] )

glConvolutionParameteriv = _rpythonic_function_(		"glConvolutionParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glCopyConvolutionFilter1D = _rpythonic_function_(		"glCopyConvolutionFilter1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

glCopyConvolutionFilter2D = _rpythonic_function_(		"glCopyConvolutionFilter2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glGetConvolutionFilter = _rpythonic_function_(		"glGetConvolutionFilter", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetConvolutionParameterfv = _rpythonic_function_(		"glGetConvolutionParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetConvolutionParameteriv = _rpythonic_function_(		"glGetConvolutionParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glSeparableFilter2D = _rpythonic_function_(		"glSeparableFilter2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("column",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetSeparableFilter = _rpythonic_function_(		"glGetSeparableFilter", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("column",		ctypes.POINTER(ctypes.c_void_p)),
	("span",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLBLENDCOLORPROC = _rpythonic_function_(		"PFNGLBLENDCOLORPROC", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),
	("alpha",		ctypes.c_float),] )

PFNGLBLENDEQUATIONPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glActiveTexture = _rpythonic_function_(		"glActiveTexture", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

glClientActiveTexture = _rpythonic_function_(		"glClientActiveTexture", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

glCompressedTexImage1D = _rpythonic_function_(		"glCompressedTexImage1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glCompressedTexImage2D = _rpythonic_function_(		"glCompressedTexImage2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glCompressedTexImage3D = _rpythonic_function_(		"glCompressedTexImage3D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glCompressedTexSubImage1D = _rpythonic_function_(		"glCompressedTexSubImage1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glCompressedTexSubImage2D = _rpythonic_function_(		"glCompressedTexSubImage2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glCompressedTexSubImage3D = _rpythonic_function_(		"glCompressedTexSubImage3D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetCompressedTexImage = _rpythonic_function_(		"glGetCompressedTexImage", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("lod",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

glMultiTexCoord1d = _rpythonic_function_(		"glMultiTexCoord1d", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),] )

glMultiTexCoord1dv = _rpythonic_function_(		"glMultiTexCoord1dv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord1f = _rpythonic_function_(		"glMultiTexCoord1f", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),] )

glMultiTexCoord1fv = _rpythonic_function_(		"glMultiTexCoord1fv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord1i = _rpythonic_function_(		"glMultiTexCoord1i", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),] )

glMultiTexCoord1iv = _rpythonic_function_(		"glMultiTexCoord1iv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord1s = _rpythonic_function_(		"glMultiTexCoord1s", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),] )

glMultiTexCoord1sv = _rpythonic_function_(		"glMultiTexCoord1sv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glMultiTexCoord2d = _rpythonic_function_(		"glMultiTexCoord2d", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),] )

glMultiTexCoord2dv = _rpythonic_function_(		"glMultiTexCoord2dv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord2f = _rpythonic_function_(		"glMultiTexCoord2f", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),] )

glMultiTexCoord2fv = _rpythonic_function_(		"glMultiTexCoord2fv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord2i = _rpythonic_function_(		"glMultiTexCoord2i", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),] )

glMultiTexCoord2iv = _rpythonic_function_(		"glMultiTexCoord2iv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord2s = _rpythonic_function_(		"glMultiTexCoord2s", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),] )

glMultiTexCoord2sv = _rpythonic_function_(		"glMultiTexCoord2sv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glMultiTexCoord3d = _rpythonic_function_(		"glMultiTexCoord3d", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),] )

glMultiTexCoord3dv = _rpythonic_function_(		"glMultiTexCoord3dv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord3f = _rpythonic_function_(		"glMultiTexCoord3f", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),] )

glMultiTexCoord3fv = _rpythonic_function_(		"glMultiTexCoord3fv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLISPROGRAMPROC = _rpythonic_function_(		"PFNGLISPROGRAMPROC", ctypes.c_ubyte, [
	("program",		ctypes.c_uint),] )

PFNGLISSHADERPROC = _rpythonic_function_(		"PFNGLISSHADERPROC", ctypes.c_ubyte, [
	("shader",		ctypes.c_uint),] )

PFNGLLINKPROGRAMPROC = _rpythonic_function_(		"PFNGLLINKPROGRAMPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),] )

PFNGLSHADERSOURCEPROC = _rpythonic_function_(		"PFNGLSHADERSOURCEPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("string",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("length",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUSEPROGRAMPROC = _rpythonic_function_(		"PFNGLUSEPROGRAMPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),] )

PFNGLUNIFORM1FPROC = _rpythonic_function_(		"PFNGLUNIFORM1FPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),] )

PFNGLUNIFORM2FPROC = _rpythonic_function_(		"PFNGLUNIFORM2FPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),] )

PFNGLUNIFORM3FPROC = _rpythonic_function_(		"PFNGLUNIFORM3FPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),] )

PFNGLUNIFORM4FPROC = _rpythonic_function_(		"PFNGLUNIFORM4FPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("v3",		ctypes.c_float),] )

PFNGLUNIFORM1IPROC = _rpythonic_function_(		"PFNGLUNIFORM1IPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),] )

PFNGLUNIFORM2IPROC = _rpythonic_function_(		"PFNGLUNIFORM2IPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),] )

PFNGLUNIFORM3IPROC = _rpythonic_function_(		"PFNGLUNIFORM3IPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),] )

PFNGLUNIFORM4IPROC = _rpythonic_function_(		"PFNGLUNIFORM4IPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),
	("v3",		ctypes.c_int),] )

PFNGLUNIFORM1FVPROC = _rpythonic_function_(		"PFNGLUNIFORM1FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM2FVPROC = _rpythonic_function_(		"PFNGLUNIFORM2FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM3FVPROC = _rpythonic_function_(		"PFNGLUNIFORM3FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM4FVPROC = _rpythonic_function_(		"PFNGLUNIFORM4FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM1IVPROC = _rpythonic_function_(		"PFNGLUNIFORM1IVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORM2IVPROC = _rpythonic_function_(		"PFNGLUNIFORM2IVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORM3IVPROC = _rpythonic_function_(		"PFNGLUNIFORM3IVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORM4IVPROC = _rpythonic_function_(		"PFNGLUNIFORM4IVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORMMATRIX2FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX3FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX4FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVALIDATEPROGRAMPROC = _rpythonic_function_(		"PFNGLVALIDATEPROGRAMPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),] )

PFNGLVERTEXATTRIB1DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),] )

PFNGLVERTEXATTRIB1DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB1FPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1FPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),] )

PFNGLVERTEXATTRIB1FVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1FVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB1SPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1SPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),] )

PFNGLVERTEXATTRIB1SVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1SVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB2DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLVERTEXATTRIB2DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB2FPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2FPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLVERTEXATTRIB2FVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2FVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB2SPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2SPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLVERTEXATTRIB2SVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2SVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB3DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLVERTEXATTRIB3DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB3FPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3FPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLVERTEXATTRIB3FVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3FVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB3SPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3SPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLVERTEXATTRIB3SVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3SVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4NBVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NBVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIB4NIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIB4NSVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NSVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4NUBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ubyte),
	("y",		ctypes.c_ubyte),
	("z",		ctypes.c_ubyte),
	("w",		ctypes.c_ubyte),] )

PFNGLVERTEXATTRIB4NUBVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUBVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIB4NUIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIB4NUSVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUSVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIB4BVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4BVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIB4DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLVERTEXATTRIB4DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB4FPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4FPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLVERTEXATTRIB4FVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4FVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB4IVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4IVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIB4SPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4SPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

PFNGLVERTEXATTRIB4SVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4SVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4UBVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4UBVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIB4UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIB4USVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4USVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBPOINTERPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBPOINTERPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLUNIFORMMATRIX2X3FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2X3FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX3X2FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3X2FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX2X4FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2X4FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX4X2FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4X2FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX3X4FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3X4FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX4X3FVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4X3FVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLORMASKIPROC = _rpythonic_function_(		"PFNGLCOLORMASKIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("r",		ctypes.c_ubyte),
	("g",		ctypes.c_ubyte),
	("b",		ctypes.c_ubyte),
	("a",		ctypes.c_ubyte),] )

PFNGLGETBOOLEANI_VPROC = _rpythonic_function_(		"PFNGLGETBOOLEANI_VPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETINTEGERI_VPROC = _rpythonic_function_(		"PFNGLGETINTEGERI_VPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLENABLEIPROC = _rpythonic_function_(		"PFNGLENABLEIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLDISABLEIPROC = _rpythonic_function_(		"PFNGLDISABLEIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLISENABLEDIPROC = _rpythonic_function_(		"PFNGLISENABLEDIPROC", ctypes.c_ubyte, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLBEGINTRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLBEGINTRANSFORMFEEDBACKPROC", ctypes.c_void_p, [
	("primitiveMode",		ctypes.c_uint),] )

PFNGLENDTRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLENDTRANSFORMFEEDBACKPROC", ctypes.c_void_p, [] )

PFNGLBINDBUFFERRANGEPROC = _rpythonic_function_(		"PFNGLBINDBUFFERRANGEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),] )

PFNGLBINDBUFFERBASEPROC = _rpythonic_function_(		"PFNGLBINDBUFFERBASEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLTRANSFORMFEEDBACKVARYINGSPROC = _rpythonic_function_(		"PFNGLTRANSFORMFEEDBACKVARYINGSPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("varyings",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("bufferMode",		ctypes.c_uint),] )

PFNGLGETTRANSFORMFEEDBACKVARYINGPROC = _rpythonic_function_(		"PFNGLGETTRANSFORMFEEDBACKVARYINGPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLCLAMPCOLORPROC = _rpythonic_function_(		"PFNGLCLAMPCOLORPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("clamp",		ctypes.c_uint),] )

PFNGLBEGINCONDITIONALRENDERPROC = _rpythonic_function_(		"PFNGLBEGINCONDITIONALRENDERPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLENDCONDITIONALRENDERPROC = _rpythonic_function_(		"PFNGLENDCONDITIONALRENDERPROC", ctypes.c_void_p, [] )

PFNGLVERTEXATTRIBIPOINTERPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBIPOINTERPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETVERTEXATTRIBIIVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBIUIVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIUIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI1IPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1IPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI2IPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2IPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORMMATRIX4DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVALIDATEPROGRAMPIPELINEPROC = _rpythonic_function_(		"PFNGLVALIDATEPROGRAMPIPELINEPROC", ctypes.c_void_p, [
	("pipeline",		ctypes.c_uint),] )

PFNGLGETPROGRAMPIPELINEINFOLOGPROC = _rpythonic_function_(		"PFNGLGETPROGRAMPIPELINEINFOLOGPROC", ctypes.c_void_p, [
	("pipeline",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("infoLog",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIBL1DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL2DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL3DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL4DPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4DPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL1DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBL2DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBL3DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBL4DVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4DVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBLPOINTERPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBLPOINTERPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETVERTEXATTRIBLDVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBLDVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVIEWPORTARRAYVPROC = _rpythonic_function_(		"PFNGLVIEWPORTARRAYVPROC", ctypes.c_void_p, [
	("first",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVIEWPORTINDEXEDFPROC = _rpythonic_function_(		"PFNGLVIEWPORTINDEXEDFPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("w",		ctypes.c_float),
	("h",		ctypes.c_float),] )

PFNGLVIEWPORTINDEXEDFVPROC = _rpythonic_function_(		"PFNGLVIEWPORTINDEXEDFVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSCISSORARRAYVPROC = _rpythonic_function_(		"PFNGLSCISSORARRAYVPROC", ctypes.c_void_p, [
	("first",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLSCISSORINDEXEDPROC = _rpythonic_function_(		"PFNGLSCISSORINDEXEDPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("left",		ctypes.c_int),
	("bottom",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLSCISSORINDEXEDVPROC = _rpythonic_function_(		"PFNGLSCISSORINDEXEDVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLDEPTHRANGEARRAYVPROC = _rpythonic_function_(		"PFNGLDEPTHRANGEARRAYVPROC", ctypes.c_void_p, [
	("first",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLDEPTHRANGEINDEXEDPROC = _rpythonic_function_(		"PFNGLDEPTHRANGEINDEXEDPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("n",		ctypes.c_double),
	("f",		ctypes.c_double),] )

PFNGLGETFLOATI_VPROC = _rpythonic_function_(		"PFNGLGETFLOATI_VPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETDOUBLEI_VPROC = _rpythonic_function_(		"PFNGLGETDOUBLEI_VPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLCREATESYNCFROMCLEVENTARBPROC = _rpythonic_function_(		"PFNGLCREATESYNCFROMCLEVENTARBPROC", ctypes.POINTER(__GLsync), [
	("context",		ctypes.POINTER(_cl_context)),
	("event",		ctypes.POINTER(_cl_event)),
	("flags",		ctypes.c_uint),] )

PFNGLDEBUGMESSAGECONTROLARBPROC = _rpythonic_function_(		"PFNGLDEBUGMESSAGECONTROLARBPROC", ctypes.c_void_p, [
	("source",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("severity",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),
	("enabled",		ctypes.c_ubyte),] )

PFNGLDEBUGMESSAGEINSERTARBPROC = _rpythonic_function_(		"PFNGLDEBUGMESSAGEINSERTARBPROC", ctypes.c_void_p, [
	("source",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),
	("severity",		ctypes.c_uint),
	("length",		ctypes.c_int),
	("buf",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLDEBUGMESSAGECALLBACKARBPROC = _rpythonic_function_(		"PFNGLDEBUGMESSAGECALLBACKARBPROC", ctypes.c_void_p, [
	("callback",		ctypes.CFUNCTYPE(ctypes.c_void_p, ctypes.c_uint,ctypes.c_uint,ctypes.c_uint,ctypes.c_uint,ctypes.c_int,ctypes.POINTER(ctypes.c_char),ctypes.POINTER(ctypes.c_void_p),)),
	("userParam",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETDEBUGMESSAGELOGARBPROC = _rpythonic_function_(		"PFNGLGETDEBUGMESSAGELOGARBPROC", ctypes.c_uint, [
	("count",		ctypes.c_uint),
	("bufsize",		ctypes.c_int),
	("sources",		ctypes.POINTER(ctypes.c_uint)),
	("types",		ctypes.POINTER(ctypes.c_uint)),
	("ids",		ctypes.POINTER(ctypes.c_uint)),
	("severities",		ctypes.POINTER(ctypes.c_uint)),
	("lengths",		ctypes.POINTER(ctypes.c_int)),
	("messageLog",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETGRAPHICSRESETSTATUSARBPROC = _rpythonic_function_(		"PFNGLGETGRAPHICSRESETSTATUSARBPROC", ctypes.c_uint, [] )

PFNGLGETNMAPDVARBPROC = _rpythonic_function_(		"PFNGLGETNMAPDVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("query",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETNMAPFVARBPROC = _rpythonic_function_(		"PFNGLGETNMAPFVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("query",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETNMAPIVARBPROC = _rpythonic_function_(		"PFNGLGETNMAPIVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("query",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETNPIXELMAPFVARBPROC = _rpythonic_function_(		"PFNGLGETNPIXELMAPFVARBPROC", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETNPIXELMAPUIVARBPROC = _rpythonic_function_(		"PFNGLGETNPIXELMAPUIVARBPROC", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETNPIXELMAPUSVARBPROC = _rpythonic_function_(		"PFNGLGETNPIXELMAPUSVARBPROC", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLGETNPOLYGONSTIPPLEARBPROC = _rpythonic_function_(		"PFNGLGETNPOLYGONSTIPPLEARBPROC", ctypes.c_void_p, [
	("bufSize",		ctypes.c_int),
	("pattern",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETNCOLORTABLEARBPROC = _rpythonic_function_(		"PFNGLGETNCOLORTABLEARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNCONVOLUTIONFILTERARBPROC = _rpythonic_function_(		"PFNGLGETNCONVOLUTIONFILTERARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNSEPARABLEFILTERARBPROC = _rpythonic_function_(		"PFNGLGETNSEPARABLEFILTERARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("rowBufSize",		ctypes.c_int),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("columnBufSize",		ctypes.c_int),
	("column",		ctypes.POINTER(ctypes.c_void_p)),
	("span",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNHISTOGRAMARBPROC = _rpythonic_function_(		"PFNGLGETNHISTOGRAMARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNMINMAXARBPROC = _rpythonic_function_(		"PFNGLGETNMINMAXARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNTEXIMAGEARBPROC = _rpythonic_function_(		"PFNGLGETNTEXIMAGEARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLREADNPIXELSARBPROC = _rpythonic_function_(		"PFNGLREADNPIXELSARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC = _rpythonic_function_(		"PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("lod",		ctypes.c_int),
	("bufSize",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETNUNIFORMFVARBPROC = _rpythonic_function_(		"PFNGLGETNUNIFORMFVARBPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("bufSize",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETNUNIFORMIVARBPROC = _rpythonic_function_(		"PFNGLGETNUNIFORMIVARBPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("bufSize",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETNUNIFORMUIVARBPROC = _rpythonic_function_(		"PFNGLGETNUNIFORMUIVARBPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("bufSize",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETNUNIFORMDVARBPROC = _rpythonic_function_(		"PFNGLGETNUNIFORMDVARBPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("bufSize",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLBLENDCOLOREXTPROC = _rpythonic_function_(		"PFNGLBLENDCOLOREXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),
	("alpha",		ctypes.c_float),] )

PFNGLPOLYGONOFFSETEXTPROC = _rpythonic_function_(		"PFNGLPOLYGONOFFSETEXTPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_float),
	("bias",		ctypes.c_float),] )

PFNGLTEXIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLTEXIMAGE3DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXSUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLTEXSUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETTEXFILTERFUNCSGISPROC = _rpythonic_function_(		"PFNGLGETTEXFILTERFUNCSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("filter",		ctypes.c_uint),
	("weights",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXFILTERFUNCSGISPROC = _rpythonic_function_(		"PFNGLTEXFILTERFUNCSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("filter",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("weights",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXSUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLTEXSUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXSUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLTEXSUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYTEXIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXIMAGE1DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),] )

PFNGLBINDFRAMEBUFFEREXTPROC = _rpythonic_function_(		"PFNGLBINDFRAMEBUFFEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("framebuffer",		ctypes.c_uint),] )

PFNGLDELETEFRAMEBUFFERSEXTPROC = _rpythonic_function_(		"PFNGLDELETEFRAMEBUFFERSEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("framebuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENFRAMEBUFFERSEXTPROC = _rpythonic_function_(		"PFNGLGENFRAMEBUFFERSEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("framebuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC = _rpythonic_function_(		"PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC", ctypes.c_uint, [
	("target",		ctypes.c_uint),] )

PFNGLFRAMEBUFFERTEXTURE1DEXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURE1DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURE2DEXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURE2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURE3DEXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURE3DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("zoffset",		ctypes.c_int),] )

PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("renderbuffertarget",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGENERATEMIPMAPEXTPROC = _rpythonic_function_(		"PFNGLGENERATEMIPMAPEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLSTRINGMARKERGREMEDYPROC = _rpythonic_function_(		"PFNGLSTRINGMARKERGREMEDYPROC", ctypes.c_void_p, [
	("C_len",		ctypes.c_int),
	("string",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLSTENCILCLEARTAGEXTPROC = _rpythonic_function_(		"PFNGLSTENCILCLEARTAGEXTPROC", ctypes.c_void_p, [
	("stencilTagBits",		ctypes.c_int),
	("stencilClearTag",		ctypes.c_uint),] )

PFNGLBLITFRAMEBUFFEREXTPROC = _rpythonic_function_(		"PFNGLBLITFRAMEBUFFEREXTPROC", ctypes.c_void_p, [
	("srcX0",		ctypes.c_int),
	("srcY0",		ctypes.c_int),
	("srcX1",		ctypes.c_int),
	("srcY1",		ctypes.c_int),
	("dstX0",		ctypes.c_int),
	("dstY0",		ctypes.c_int),
	("dstX1",		ctypes.c_int),
	("dstY1",		ctypes.c_int),
	("mask",		ctypes.c_uint),
	("filter",		ctypes.c_uint),] )

PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = _rpythonic_function_(		"PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("samples",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETQUERYOBJECTI64VEXTPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTI64VEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLGETQUERYOBJECTUI64VEXTPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTUI64VEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLPROGRAMENVPARAMETERS4FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERS4FVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLBUFFERPARAMETERIAPPLEPROC = _rpythonic_function_(		"PFNGLBUFFERPARAMETERIAPPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC = _rpythonic_function_(		"PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),] )

PFNGLPROGRAMLOCALPARAMETERI4INVPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERI4INVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMLOCALPARAMETERI4UINVPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERI4UINVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),
	("w",		ctypes.c_uint),] )

PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMENVPARAMETERI4INVPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERI4INVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLPROGRAMENVPARAMETERI4IVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERI4IVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMENVPARAMETERSI4IVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERSI4IVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMENVPARAMETERI4UINVPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERI4UINVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),
	("w",		ctypes.c_uint),] )

PFNGLPROGRAMENVPARAMETERI4UIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERI4UIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPROGRAMENVPARAMETERIIVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMENVPARAMETERIIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMVERTEXLIMITNVPROC = _rpythonic_function_(		"PFNGLPROGRAMVERTEXLIMITNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("limit",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTUREEXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTUREEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("layer",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("face",		ctypes.c_uint),] )

PFNGLPROGRAMPARAMETERIEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETERIEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("value",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI1IEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1IEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI2IEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2IEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI3IEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3IEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI4IEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4IEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLVERTEXATTRIBI1UIEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1UIEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI2UIEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2UIEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI3UIEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3UIEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI4UIEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4UIEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),
	("w",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBI1IVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1IVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI2IVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2IVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI3IVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3IVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI4IVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4IVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIBI1UIVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI1UIVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI2UIVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI2UIVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI3UIVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI3UIVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI4UIVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4UIVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBI4BVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4BVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIBI4SVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4SVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIBI4UBVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4UBVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIBI4USVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBI4USVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBIPOINTEREXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBIPOINTEREXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETVERTEXATTRIBIIVEXTPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIIVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBIUIVEXTPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIUIVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETUNIFORMUIVEXTPROC = _rpythonic_function_(		"PFNGLGETUNIFORMUIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLBINDFRAGDATALOCATIONEXTPROC = _rpythonic_function_(		"PFNGLBINDFRAGDATALOCATIONEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("color",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETFRAGDATALOCATIONEXTPROC = _rpythonic_function_(		"PFNGLGETFRAGDATALOCATIONEXTPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLUNIFORM1UIEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM1UIEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),] )

PFNGLUNIFORM2UIEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM2UIEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),] )

PFNGLUNIFORM3UIEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM3UIEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),] )

PFNGLUNIFORM4UIEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM4UIEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),
	("v3",		ctypes.c_uint),] )

PFNGLUNIFORM1UIVEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM1UIVEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM2UIVEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM2UIVEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM3UIVEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM3UIVEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM4UIVEXTPROC = _rpythonic_function_(		"PFNGLUNIFORM4UIVEXTPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDRAWARRAYSINSTANCEDEXTPROC = _rpythonic_function_(		"PFNGLDRAWARRAYSINSTANCEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("count",		ctypes.c_int),
	("primcount",		ctypes.c_int),] )

PFNGLDRAWELEMENTSINSTANCEDEXTPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTSINSTANCEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),
	("primcount",		ctypes.c_int),] )

PFNGLTEXBUFFEREXTPROC = _rpythonic_function_(		"PFNGLTEXBUFFEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLDEPTHRANGEDNVPROC = _rpythonic_function_(		"PFNGLDEPTHRANGEDNVPROC", ctypes.c_void_p, [
	("zNear",		ctypes.c_double),
	("zFar",		ctypes.c_double),] )

PFNGLCLEARDEPTHDNVPROC = _rpythonic_function_(		"PFNGLCLEARDEPTHDNVPROC", ctypes.c_void_p, [
	("depth",		ctypes.c_double),] )

PFNGLDEPTHBOUNDSDNVPROC = _rpythonic_function_(		"PFNGLDEPTHBOUNDSDNVPROC", ctypes.c_void_p, [
	("zmin",		ctypes.c_double),
	("zmax",		ctypes.c_double),] )

PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC = _rpythonic_function_(		"PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("coverageSamples",		ctypes.c_int),
	("colorSamples",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETVERTEXATTRIBFVNVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBFVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVERTEXATTRIBIVNVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBPOINTERVNVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBPOINTERVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLISPROGRAMNVPROC = _rpythonic_function_(		"PFNGLISPROGRAMNVPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),] )

PFNGLLOADPROGRAMNVPROC = _rpythonic_function_(		"PFNGLLOADPROGRAMNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("program",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLPROGRAMPARAMETER4DNVPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETER4DNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLPROGRAMPARAMETER4DVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETER4DVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMPARAMETER4FNVPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETER4FNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLPROGRAMPARAMETER4FVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETER4FVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMPARAMETERS4DVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETERS4DVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMPARAMETERS4FVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETERS4FVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREQUESTRESIDENTPROGRAMSNVPROC = _rpythonic_function_(		"PFNGLREQUESTRESIDENTPROGRAMSNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("programs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTRACKMATRIXNVPROC = _rpythonic_function_(		"PFNGLTRACKMATRIXNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("address",		ctypes.c_uint),
	("matrix",		ctypes.c_uint),
	("transform",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBPOINTERNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBPOINTERNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("fsize",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLVERTEXATTRIB1DNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1DNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),] )

PFNGLVERTEXATTRIB1DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB1FNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1FNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),] )

PFNGLVERTEXATTRIB1FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB1SNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1SNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),] )

PFNGLVERTEXATTRIB1SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB2DNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2DNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLVERTEXATTRIB2DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB2FNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2FNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLVERTEXATTRIB2FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB2SNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2SNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLVERTEXATTRIB2SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB3DNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3DNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLVERTEXATTRIB3DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB3FNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3FNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLVERTEXATTRIB3FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB3SNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3SNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLVERTEXATTRIB3SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4DNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4DNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLVERTEXATTRIB4DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB4FNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4FNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLVERTEXATTRIB4FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB4SNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4SNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

PFNGLVERTEXATTRIB4SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4UBNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4UBNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ubyte),
	("y",		ctypes.c_ubyte),
	("z",		ctypes.c_ubyte),
	("w",		ctypes.c_ubyte),] )

PFNGLVERTEXATTRIB4UBVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4UBVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIBS1DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS1DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBS1FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS1FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIBS1SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS1SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIBS2DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS2DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBS2FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS2FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIBS2SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS2SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIBS3DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS3DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBS3FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS3FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIBS3SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS3SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIBS4DVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS4DVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBS4FVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS4FVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIBS4SVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS4SVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIBS4UBVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS4UBVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLTEXBUMPPARAMETERIVATIPROC = _rpythonic_function_(		"PFNGLTEXBUMPPARAMETERIVATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXBUMPPARAMETERFVATIPROC = _rpythonic_function_(		"PFNGLTEXBUMPPARAMETERFVATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETTEXBUMPPARAMETERIVATIPROC = _rpythonic_function_(		"PFNGLGETTEXBUMPPARAMETERIVATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETTEXBUMPPARAMETERFVATIPROC = _rpythonic_function_(		"PFNGLGETTEXBUMPPARAMETERFVATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGENFRAGMENTSHADERSATIPROC = _rpythonic_function_(		"PFNGLGENFRAGMENTSHADERSATIPROC", ctypes.c_uint, [
	("C_range",		ctypes.c_uint),] )

PFNGLBINDFRAGMENTSHADERATIPROC = _rpythonic_function_(		"PFNGLBINDFRAGMENTSHADERATIPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLDELETEFRAGMENTSHADERATIPROC = _rpythonic_function_(		"PFNGLDELETEFRAGMENTSHADERATIPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLBEGINFRAGMENTSHADERATIPROC = _rpythonic_function_(		"PFNGLBEGINFRAGMENTSHADERATIPROC", ctypes.c_void_p, [] )

PFNGLENDFRAGMENTSHADERATIPROC = _rpythonic_function_(		"PFNGLENDFRAGMENTSHADERATIPROC", ctypes.c_void_p, [] )

PFNGLPASSTEXCOORDATIPROC = _rpythonic_function_(		"PFNGLPASSTEXCOORDATIPROC", ctypes.c_void_p, [
	("dst",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("swizzle",		ctypes.c_uint),] )

PFNGLSAMPLEMAPATIPROC = _rpythonic_function_(		"PFNGLSAMPLEMAPATIPROC", ctypes.c_void_p, [
	("dst",		ctypes.c_uint),
	("interp",		ctypes.c_uint),
	("swizzle",		ctypes.c_uint),] )

PFNGLCOLORFRAGMENTOP1ATIPROC = _rpythonic_function_(		"PFNGLCOLORFRAGMENTOP1ATIPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("dst",		ctypes.c_uint),
	("dstMask",		ctypes.c_uint),
	("dstMod",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg1Rep",		ctypes.c_uint),
	("arg1Mod",		ctypes.c_uint),] )

PFNGLCOLORFRAGMENTOP2ATIPROC = _rpythonic_function_(		"PFNGLCOLORFRAGMENTOP2ATIPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("dst",		ctypes.c_uint),
	("dstMask",		ctypes.c_uint),
	("dstMod",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg1Rep",		ctypes.c_uint),
	("arg1Mod",		ctypes.c_uint),
	("arg2",		ctypes.c_uint),
	("arg2Rep",		ctypes.c_uint),
	("arg2Mod",		ctypes.c_uint),] )

PFNGLCOLORFRAGMENTOP3ATIPROC = _rpythonic_function_(		"PFNGLCOLORFRAGMENTOP3ATIPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("dst",		ctypes.c_uint),
	("dstMask",		ctypes.c_uint),
	("dstMod",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg1Rep",		ctypes.c_uint),
	("arg1Mod",		ctypes.c_uint),
	("arg2",		ctypes.c_uint),
	("arg2Rep",		ctypes.c_uint),
	("arg2Mod",		ctypes.c_uint),
	("arg3",		ctypes.c_uint),
	("arg3Rep",		ctypes.c_uint),
	("arg3Mod",		ctypes.c_uint),] )

PFNGLALPHAFRAGMENTOP1ATIPROC = _rpythonic_function_(		"PFNGLALPHAFRAGMENTOP1ATIPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("dst",		ctypes.c_uint),
	("dstMod",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg1Rep",		ctypes.c_uint),
	("arg1Mod",		ctypes.c_uint),] )

PFNGLALPHAFRAGMENTOP2ATIPROC = _rpythonic_function_(		"PFNGLALPHAFRAGMENTOP2ATIPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("dst",		ctypes.c_uint),
	("dstMod",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg1Rep",		ctypes.c_uint),
	("arg1Mod",		ctypes.c_uint),
	("arg2",		ctypes.c_uint),
	("arg2Rep",		ctypes.c_uint),
	("arg2Mod",		ctypes.c_uint),] )

PFNGLALPHAFRAGMENTOP3ATIPROC = _rpythonic_function_(		"PFNGLALPHAFRAGMENTOP3ATIPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("dst",		ctypes.c_uint),
	("dstMod",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg1Rep",		ctypes.c_uint),
	("arg1Mod",		ctypes.c_uint),
	("arg2",		ctypes.c_uint),
	("arg2Rep",		ctypes.c_uint),
	("arg2Mod",		ctypes.c_uint),
	("arg3",		ctypes.c_uint),
	("arg3Rep",		ctypes.c_uint),
	("arg3Mod",		ctypes.c_uint),] )

PFNGLSETFRAGMENTSHADERCONSTANTATIPROC = _rpythonic_function_(		"PFNGLSETFRAGMENTSHADERCONSTANTATIPROC", ctypes.c_void_p, [
	("dst",		ctypes.c_uint),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPNTRIANGLESIATIPROC = _rpythonic_function_(		"PFNGLPNTRIANGLESIATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLPNTRIANGLESFATIPROC = _rpythonic_function_(		"PFNGLPNTRIANGLESFATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLNEWOBJECTBUFFERATIPROC = _rpythonic_function_(		"PFNGLNEWOBJECTBUFFERATIPROC", ctypes.c_uint, [
	("size",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),
	("usage",		ctypes.c_uint),] )

PFNGLISOBJECTBUFFERATIPROC = _rpythonic_function_(		"PFNGLISOBJECTBUFFERATIPROC", ctypes.c_ubyte, [
	("buffer",		ctypes.c_uint),] )

PFNGLUPDATEOBJECTBUFFERATIPROC = _rpythonic_function_(		"PFNGLUPDATEOBJECTBUFFERATIPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),
	("preserve",		ctypes.c_uint),] )

PFNGLGETOBJECTBUFFERFVATIPROC = _rpythonic_function_(		"PFNGLGETOBJECTBUFFERFVATIPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETOBJECTBUFFERIVATIPROC = _rpythonic_function_(		"PFNGLGETOBJECTBUFFERIVATIPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLFREEOBJECTBUFFERATIPROC = _rpythonic_function_(		"PFNGLFREEOBJECTBUFFERATIPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),] )

PFNGLARRAYOBJECTATIPROC = _rpythonic_function_(		"PFNGLARRAYOBJECTATIPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_uint),] )

PFNGLGETARRAYOBJECTFVATIPROC = _rpythonic_function_(		"PFNGLGETARRAYOBJECTFVATIPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETARRAYOBJECTIVATIPROC = _rpythonic_function_(		"PFNGLGETARRAYOBJECTIVATIPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD4FVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4FVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD4IARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4IARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),
	("q",		ctypes.c_int),] )

PFNGLMULTITEXCOORD4IVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4IVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD4SARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4SARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),
	("q",		ctypes.c_short),] )

PFNGLMULTITEXCOORD4SVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4SVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

imaxabs = _rpythonic_function_(		"imaxabs", ctypes.c_longlong, [
	("__n",		ctypes.c_longlong),] )

imaxdiv = _rpythonic_function_(		"imaxdiv", imaxdiv_t, [
	("__numer",		ctypes.c_longlong),
	("__denom",		ctypes.c_longlong),] )

strtoimax = _rpythonic_function_(		"strtoimax", ctypes.c_longlong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

strtoumax = _rpythonic_function_(		"strtoumax", ctypes.c_ulonglong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

wcstoimax = _rpythonic_function_(		"wcstoimax", ctypes.c_longlong, [
	("__nptr",		ctypes.POINTER(ctypes.c_int)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_int))),
	("__base",		ctypes.c_int),] )

wcstoumax = _rpythonic_function_(		"wcstoumax", ctypes.c_ulonglong, [
	("__nptr",		ctypes.POINTER(ctypes.c_int)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_int))),
	("__base",		ctypes.c_int),] )

GLDEBUGPROCARB = _rpythonic_function_(		"GLDEBUGPROCARB", ctypes.c_void_p, [
	("source",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),
	("severity",		ctypes.c_uint),
	("length",		ctypes.c_int),
	("message",		ctypes.POINTER(ctypes.c_char)),
	("userParam",		ctypes.POINTER(ctypes.c_void_p)),] )

GLDEBUGPROCAMD = _rpythonic_function_(		"GLDEBUGPROCAMD", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("category",		ctypes.c_uint),
	("severity",		ctypes.c_uint),
	("length",		ctypes.c_int),
	("message",		ctypes.POINTER(ctypes.c_char)),
	("userParam",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOLORTABLEPROC = _rpythonic_function_(		"PFNGLCOLORTABLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOLORTABLEPARAMETERFVPROC = _rpythonic_function_(		"PFNGLCOLORTABLEPARAMETERFVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLORTABLEPARAMETERIVPROC = _rpythonic_function_(		"PFNGLCOLORTABLEPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOPYCOLORTABLEPROC = _rpythonic_function_(		"PFNGLCOPYCOLORTABLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLGETCOLORTABLEPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOLORTABLEPARAMETERFVPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPARAMETERFVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCOLORTABLEPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOLORSUBTABLEPROC = _rpythonic_function_(		"PFNGLCOLORSUBTABLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("count",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYCOLORSUBTABLEPROC = _rpythonic_function_(		"PFNGLCOPYCOLORSUBTABLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLCONVOLUTIONFILTER1DPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONFILTER1DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCONVOLUTIONFILTER2DPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONFILTER2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCONVOLUTIONPARAMETERFPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERFPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.c_float),] )

PFNGLCONVOLUTIONPARAMETERFVPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERFVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCONVOLUTIONPARAMETERIPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.c_int),] )

PFNGLCONVOLUTIONPARAMETERIVPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOPYCONVOLUTIONFILTER1DPROC = _rpythonic_function_(		"PFNGLCOPYCONVOLUTIONFILTER1DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLCOPYCONVOLUTIONFILTER2DPROC = _rpythonic_function_(		"PFNGLCOPYCONVOLUTIONFILTER2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETCONVOLUTIONFILTERPROC = _rpythonic_function_(		"PFNGLGETCONVOLUTIONFILTERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCONVOLUTIONPARAMETERFVPROC = _rpythonic_function_(		"PFNGLGETCONVOLUTIONPARAMETERFVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCONVOLUTIONPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETCONVOLUTIONPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETSEPARABLEFILTERPROC = _rpythonic_function_(		"PFNGLGETSEPARABLEFILTERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("column",		ctypes.POINTER(ctypes.c_void_p)),
	("span",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLSEPARABLEFILTER2DPROC = _rpythonic_function_(		"PFNGLSEPARABLEFILTER2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("column",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETHISTOGRAMPROC = _rpythonic_function_(		"PFNGLGETHISTOGRAMPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETHISTOGRAMPARAMETERFVPROC = _rpythonic_function_(		"PFNGLGETHISTOGRAMPARAMETERFVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETHISTOGRAMPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETHISTOGRAMPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMINMAXPROC = _rpythonic_function_(		"PFNGLGETMINMAXPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETMINMAXPARAMETERFVPROC = _rpythonic_function_(		"PFNGLGETMINMAXPARAMETERFVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMINMAXPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETMINMAXPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLHISTOGRAMPROC = _rpythonic_function_(		"PFNGLHISTOGRAMPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("sink",		ctypes.c_ubyte),] )

PFNGLMINMAXPROC = _rpythonic_function_(		"PFNGLMINMAXPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("sink",		ctypes.c_ubyte),] )

PFNGLRESETHISTOGRAMPROC = _rpythonic_function_(		"PFNGLRESETHISTOGRAMPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLRESETMINMAXPROC = _rpythonic_function_(		"PFNGLRESETMINMAXPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLCLIENTACTIVETEXTUREPROC = _rpythonic_function_(		"PFNGLCLIENTACTIVETEXTUREPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

PFNGLMULTITEXCOORD1DPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),] )

PFNGLMULTITEXCOORD1DVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1DVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD1FPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1FPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),] )

PFNGLMULTITEXCOORD1FVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1FVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD1IPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1IPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),] )

PFNGLMULTITEXCOORD1IVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1IVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD1SPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1SPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),] )

PFNGLMULTITEXCOORD1SVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1SVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTITEXCOORD2DPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),] )

PFNGLMULTITEXCOORD2DVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2DVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD2FPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2FPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),] )

PFNGLMULTITEXCOORD2FVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2FVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD2IPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2IPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),] )

PFNGLMULTITEXCOORD2IVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2IVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD2SPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2SPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),] )

PFNGLMULTITEXCOORD2SVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2SVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTITEXCOORD3DPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),] )

PFNGLMULTITEXCOORD3DVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3DVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD3FPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3FPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),] )

PFNGLMULTITEXCOORD3FVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3FVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD3IPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3IPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),] )

PFNGLMULTITEXCOORD3IVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3IVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD3SPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3SPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),] )

PFNGLMULTITEXCOORD3SVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3SVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTITEXCOORD4DPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),
	("q",		ctypes.c_double),] )

PFNGLMULTITEXCOORD4DVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4DVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD4FPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4FPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("q",		ctypes.c_float),] )

PFNGLMULTITEXCOORD4FVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4FVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD4IPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4IPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),
	("q",		ctypes.c_int),] )

PFNGLMULTITEXCOORD4IVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4IVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD4SPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4SPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),
	("q",		ctypes.c_short),] )

PFNGLMULTITEXCOORD4SVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4SVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLLOADTRANSPOSEMATRIXFPROC = _rpythonic_function_(		"PFNGLLOADTRANSPOSEMATRIXFPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS2SARBPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2SARBPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLLOADTRANSPOSEMATRIXDPROC = _rpythonic_function_(		"PFNGLLOADTRANSPOSEMATRIXDPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_double)),] )

glGetPolygonStipple = _rpythonic_function_(		"glGetPolygonStipple", ctypes.c_void_p, [
	("mask",		ctypes.POINTER(ctypes.c_ubyte)),] )

glEdgeFlag = _rpythonic_function_(		"glEdgeFlag", ctypes.c_void_p, [
	("flag",		ctypes.c_ubyte),] )

glEdgeFlagv = _rpythonic_function_(		"glEdgeFlagv", ctypes.c_void_p, [
	("flag",		ctypes.POINTER(ctypes.c_ubyte)),] )

glScissor = _rpythonic_function_(		"glScissor", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glClipPlane = _rpythonic_function_(		"glClipPlane", ctypes.c_void_p, [
	("plane",		ctypes.c_uint),
	("equation",		ctypes.POINTER(ctypes.c_double)),] )

glGetClipPlane = _rpythonic_function_(		"glGetClipPlane", ctypes.c_void_p, [
	("plane",		ctypes.c_uint),
	("equation",		ctypes.POINTER(ctypes.c_double)),] )

glDrawBuffer = _rpythonic_function_(		"glDrawBuffer", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glReadBuffer = _rpythonic_function_(		"glReadBuffer", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glEnable = _rpythonic_function_(		"glEnable", ctypes.c_void_p, [
	("cap",		ctypes.c_uint),] )

glDisable = _rpythonic_function_(		"glDisable", ctypes.c_void_p, [
	("cap",		ctypes.c_uint),] )

glIsEnabled = _rpythonic_function_(		"glIsEnabled", ctypes.c_ubyte, [
	("cap",		ctypes.c_uint),] )

glEnableClientState = _rpythonic_function_(		"glEnableClientState", ctypes.c_void_p, [
	("cap",		ctypes.c_uint),] )

glDisableClientState = _rpythonic_function_(		"glDisableClientState", ctypes.c_void_p, [
	("cap",		ctypes.c_uint),] )

glGetBooleanv = _rpythonic_function_(		"glGetBooleanv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_ubyte)),] )

glGetDoublev = _rpythonic_function_(		"glGetDoublev", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

glGetFloatv = _rpythonic_function_(		"glGetFloatv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetIntegerv = _rpythonic_function_(		"glGetIntegerv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glPushAttrib = _rpythonic_function_(		"glPushAttrib", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

glPopAttrib = _rpythonic_function_(		"glPopAttrib", ctypes.c_void_p, [] )

glPushClientAttrib = _rpythonic_function_(		"glPushClientAttrib", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

glPopClientAttrib = _rpythonic_function_(		"glPopClientAttrib", ctypes.c_void_p, [] )

glRenderMode = _rpythonic_function_(		"glRenderMode", ctypes.c_int, [
	("mode",		ctypes.c_uint),] )

glGetError = _rpythonic_function_(		"glGetError", ctypes.c_uint, [] )

glGetString = _rpythonic_function_(		"glGetString", ctypes.POINTER(ctypes.c_ubyte), [
	("name",		ctypes.c_uint),] )

glFinish = _rpythonic_function_(		"glFinish", ctypes.c_void_p, [] )

glFlush = _rpythonic_function_(		"glFlush", ctypes.c_void_p, [] )

glHint = _rpythonic_function_(		"glHint", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

glClearDepth = _rpythonic_function_(		"glClearDepth", ctypes.c_void_p, [
	("depth",		ctypes.c_double),] )

glDepthFunc = _rpythonic_function_(		"glDepthFunc", ctypes.c_void_p, [
	("func",		ctypes.c_uint),] )

glDepthMask = _rpythonic_function_(		"glDepthMask", ctypes.c_void_p, [
	("flag",		ctypes.c_ubyte),] )

glDepthRange = _rpythonic_function_(		"glDepthRange", ctypes.c_void_p, [
	("near_val",		ctypes.c_double),
	("far_val",		ctypes.c_double),] )

glClearAccum = _rpythonic_function_(		"glClearAccum", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),
	("alpha",		ctypes.c_float),] )

glAccum = _rpythonic_function_(		"glAccum", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("value",		ctypes.c_float),] )

glMatrixMode = _rpythonic_function_(		"glMatrixMode", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glOrtho = _rpythonic_function_(		"glOrtho", ctypes.c_void_p, [
	("left",		ctypes.c_double),
	("right",		ctypes.c_double),
	("bottom",		ctypes.c_double),
	("top",		ctypes.c_double),
	("near_val",		ctypes.c_double),
	("far_val",		ctypes.c_double),] )

glFrustum = _rpythonic_function_(		"glFrustum", ctypes.c_void_p, [
	("left",		ctypes.c_double),
	("right",		ctypes.c_double),
	("bottom",		ctypes.c_double),
	("top",		ctypes.c_double),
	("near_val",		ctypes.c_double),
	("far_val",		ctypes.c_double),] )

glViewport = _rpythonic_function_(		"glViewport", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glPushMatrix = _rpythonic_function_(		"glPushMatrix", ctypes.c_void_p, [] )

glPopMatrix = _rpythonic_function_(		"glPopMatrix", ctypes.c_void_p, [] )

glLoadIdentity = _rpythonic_function_(		"glLoadIdentity", ctypes.c_void_p, [] )

glLoadMatrixd = _rpythonic_function_(		"glLoadMatrixd", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_double)),] )

glLoadMatrixf = _rpythonic_function_(		"glLoadMatrixf", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_float)),] )

glMultMatrixd = _rpythonic_function_(		"glMultMatrixd", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_double)),] )

glMultMatrixf = _rpythonic_function_(		"glMultMatrixf", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_float)),] )

glRotated = _rpythonic_function_(		"glRotated", ctypes.c_void_p, [
	("angle",		ctypes.c_double),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

glRotatef = _rpythonic_function_(		"glRotatef", ctypes.c_void_p, [
	("angle",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

glScaled = _rpythonic_function_(		"glScaled", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

glScalef = _rpythonic_function_(		"glScalef", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

glTranslated = _rpythonic_function_(		"glTranslated", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

glTranslatef = _rpythonic_function_(		"glTranslatef", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

glIsList = _rpythonic_function_(		"glIsList", ctypes.c_ubyte, [
	("C_list",		ctypes.c_uint),] )

glDeleteLists = _rpythonic_function_(		"glDeleteLists", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("C_range",		ctypes.c_int),] )

glGenLists = _rpythonic_function_(		"glGenLists", ctypes.c_uint, [
	("C_range",		ctypes.c_int),] )

glNewList = _rpythonic_function_(		"glNewList", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

glEndList = _rpythonic_function_(		"glEndList", ctypes.c_void_p, [] )

glCallList = _rpythonic_function_(		"glCallList", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),] )

glCallLists = _rpythonic_function_(		"glCallLists", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("lists",		ctypes.POINTER(ctypes.c_void_p)),] )

glListBase = _rpythonic_function_(		"glListBase", ctypes.c_void_p, [
	("base",		ctypes.c_uint),] )

glBegin = _rpythonic_function_(		"glBegin", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glEnd = _rpythonic_function_(		"glEnd", ctypes.c_void_p, [] )

glVertex2d = _rpythonic_function_(		"glVertex2d", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

glVertex2f = _rpythonic_function_(		"glVertex2f", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

glVertex2i = _rpythonic_function_(		"glVertex2i", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

glVertex2s = _rpythonic_function_(		"glVertex2s", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

glVertex3d = _rpythonic_function_(		"glVertex3d", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

glVertex3f = _rpythonic_function_(		"glVertex3f", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

glVertex3i = _rpythonic_function_(		"glVertex3i", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

glVertex3s = _rpythonic_function_(		"glVertex3s", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

glVertex4d = _rpythonic_function_(		"glVertex4d", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

glVertex4f = _rpythonic_function_(		"glVertex4f", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

glVertex4i = _rpythonic_function_(		"glVertex4i", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

glVertex4s = _rpythonic_function_(		"glVertex4s", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

glVertex2dv = _rpythonic_function_(		"glVertex2dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glVertex2fv = _rpythonic_function_(		"glVertex2fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glVertex2iv = _rpythonic_function_(		"glVertex2iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glVertex2sv = _rpythonic_function_(		"glVertex2sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glVertex3dv = _rpythonic_function_(		"glVertex3dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glVertex3fv = _rpythonic_function_(		"glVertex3fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glVertex3iv = _rpythonic_function_(		"glVertex3iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glVertex3sv = _rpythonic_function_(		"glVertex3sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glVertex4dv = _rpythonic_function_(		"glVertex4dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glVertex4fv = _rpythonic_function_(		"glVertex4fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glVertex4iv = _rpythonic_function_(		"glVertex4iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glVertex4sv = _rpythonic_function_(		"glVertex4sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glNormal3b = _rpythonic_function_(		"glNormal3b", ctypes.c_void_p, [
	("nx",		ctypes.c_char),
	("ny",		ctypes.c_char),
	("nz",		ctypes.c_char),] )

glNormal3d = _rpythonic_function_(		"glNormal3d", ctypes.c_void_p, [
	("nx",		ctypes.c_double),
	("ny",		ctypes.c_double),
	("nz",		ctypes.c_double),] )

glNormal3f = _rpythonic_function_(		"glNormal3f", ctypes.c_void_p, [
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),] )

glNormal3i = _rpythonic_function_(		"glNormal3i", ctypes.c_void_p, [
	("nx",		ctypes.c_int),
	("ny",		ctypes.c_int),
	("nz",		ctypes.c_int),] )

glNormal3s = _rpythonic_function_(		"glNormal3s", ctypes.c_void_p, [
	("nx",		ctypes.c_short),
	("ny",		ctypes.c_short),
	("nz",		ctypes.c_short),] )

glNormal3bv = _rpythonic_function_(		"glNormal3bv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

glNormal3dv = _rpythonic_function_(		"glNormal3dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glNormal3fv = _rpythonic_function_(		"glNormal3fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glNormal3iv = _rpythonic_function_(		"glNormal3iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glNormal3sv = _rpythonic_function_(		"glNormal3sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glIndexd = _rpythonic_function_(		"glIndexd", ctypes.c_void_p, [
	("c",		ctypes.c_double),] )

glIndexf = _rpythonic_function_(		"glIndexf", ctypes.c_void_p, [
	("c",		ctypes.c_float),] )

glIndexi = _rpythonic_function_(		"glIndexi", ctypes.c_void_p, [
	("c",		ctypes.c_int),] )

glIndexs = _rpythonic_function_(		"glIndexs", ctypes.c_void_p, [
	("c",		ctypes.c_short),] )

glIndexub = _rpythonic_function_(		"glIndexub", ctypes.c_void_p, [
	("c",		ctypes.c_ubyte),] )

glIndexdv = _rpythonic_function_(		"glIndexdv", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_double)),] )

glIndexfv = _rpythonic_function_(		"glIndexfv", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_float)),] )

glIndexiv = _rpythonic_function_(		"glIndexiv", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_int)),] )

glIndexsv = _rpythonic_function_(		"glIndexsv", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_short)),] )

glIndexubv = _rpythonic_function_(		"glIndexubv", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_ubyte)),] )

glColor3b = _rpythonic_function_(		"glColor3b", ctypes.c_void_p, [
	("red",		ctypes.c_char),
	("green",		ctypes.c_char),
	("blue",		ctypes.c_char),] )

glColor3d = _rpythonic_function_(		"glColor3d", ctypes.c_void_p, [
	("red",		ctypes.c_double),
	("green",		ctypes.c_double),
	("blue",		ctypes.c_double),] )

glColor3f = _rpythonic_function_(		"glColor3f", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),] )

glColor3i = _rpythonic_function_(		"glColor3i", ctypes.c_void_p, [
	("red",		ctypes.c_int),
	("green",		ctypes.c_int),
	("blue",		ctypes.c_int),] )

glColor3s = _rpythonic_function_(		"glColor3s", ctypes.c_void_p, [
	("red",		ctypes.c_short),
	("green",		ctypes.c_short),
	("blue",		ctypes.c_short),] )

glColor3ub = _rpythonic_function_(		"glColor3ub", ctypes.c_void_p, [
	("red",		ctypes.c_ubyte),
	("green",		ctypes.c_ubyte),
	("blue",		ctypes.c_ubyte),] )

glColor3ui = _rpythonic_function_(		"glColor3ui", ctypes.c_void_p, [
	("red",		ctypes.c_uint),
	("green",		ctypes.c_uint),
	("blue",		ctypes.c_uint),] )

glColor3us = _rpythonic_function_(		"glColor3us", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),] )

glColor4b = _rpythonic_function_(		"glColor4b", ctypes.c_void_p, [
	("red",		ctypes.c_char),
	("green",		ctypes.c_char),
	("blue",		ctypes.c_char),
	("alpha",		ctypes.c_char),] )

glColor4d = _rpythonic_function_(		"glColor4d", ctypes.c_void_p, [
	("red",		ctypes.c_double),
	("green",		ctypes.c_double),
	("blue",		ctypes.c_double),
	("alpha",		ctypes.c_double),] )

glColor4f = _rpythonic_function_(		"glColor4f", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),
	("alpha",		ctypes.c_float),] )

glColor4i = _rpythonic_function_(		"glColor4i", ctypes.c_void_p, [
	("red",		ctypes.c_int),
	("green",		ctypes.c_int),
	("blue",		ctypes.c_int),
	("alpha",		ctypes.c_int),] )

glPixelMapfv = _rpythonic_function_(		"glPixelMapfv", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("mapsize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_float)),] )

glPixelMapuiv = _rpythonic_function_(		"glPixelMapuiv", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("mapsize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_uint)),] )

glPixelMapusv = _rpythonic_function_(		"glPixelMapusv", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("mapsize",		ctypes.c_int),
	("values",		ctypes.POINTER(ctypes.c_ushort)),] )

glGetPixelMapfv = _rpythonic_function_(		"glGetPixelMapfv", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_float)),] )

glGetPixelMapuiv = _rpythonic_function_(		"glGetPixelMapuiv", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_uint)),] )

glGetPixelMapusv = _rpythonic_function_(		"glGetPixelMapusv", ctypes.c_void_p, [
	("map",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_ushort)),] )

glBitmap = _rpythonic_function_(		"glBitmap", ctypes.c_void_p, [
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("xorig",		ctypes.c_float),
	("yorig",		ctypes.c_float),
	("xmove",		ctypes.c_float),
	("ymove",		ctypes.c_float),
	("bitmap",		ctypes.POINTER(ctypes.c_ubyte)),] )

glReadPixels = _rpythonic_function_(		"glReadPixels", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glDrawPixels = _rpythonic_function_(		"glDrawPixels", ctypes.c_void_p, [
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glCopyPixels = _rpythonic_function_(		"glCopyPixels", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("C_type",		ctypes.c_uint),] )

glStencilFunc = _rpythonic_function_(		"glStencilFunc", ctypes.c_void_p, [
	("func",		ctypes.c_uint),
	("ref",		ctypes.c_int),
	("mask",		ctypes.c_uint),] )

glStencilMask = _rpythonic_function_(		"glStencilMask", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

glStencilOp = _rpythonic_function_(		"glStencilOp", ctypes.c_void_p, [
	("fail",		ctypes.c_uint),
	("zfail",		ctypes.c_uint),
	("zpass",		ctypes.c_uint),] )

glClearStencil = _rpythonic_function_(		"glClearStencil", ctypes.c_void_p, [
	("s",		ctypes.c_int),] )

glTexGend = _rpythonic_function_(		"glTexGend", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_double),] )

glTexGenf = _rpythonic_function_(		"glTexGenf", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glTexGeni = _rpythonic_function_(		"glTexGeni", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glTexGendv = _rpythonic_function_(		"glTexGendv", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

glTexGenfv = _rpythonic_function_(		"glTexGenfv", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glTexGeniv = _rpythonic_function_(		"glTexGeniv", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glGetTexGendv = _rpythonic_function_(		"glGetTexGendv", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

glGetTexGenfv = _rpythonic_function_(		"glGetTexGenfv", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetTexGeniv = _rpythonic_function_(		"glGetTexGeniv", ctypes.c_void_p, [
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glTexEnvf = _rpythonic_function_(		"glTexEnvf", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glTexEnvi = _rpythonic_function_(		"glTexEnvi", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glTexEnvfv = _rpythonic_function_(		"glTexEnvfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glTexEnviv = _rpythonic_function_(		"glTexEnviv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glGetTexEnvfv = _rpythonic_function_(		"glGetTexEnvfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetTexEnviv = _rpythonic_function_(		"glGetTexEnviv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glTexParameterf = _rpythonic_function_(		"glTexParameterf", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glTexParameteri = _rpythonic_function_(		"glTexParameteri", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glTexParameterfv = _rpythonic_function_(		"glTexParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glTexParameteriv = _rpythonic_function_(		"glTexParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glGetTexParameterfv = _rpythonic_function_(		"glGetTexParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetTexParameteriv = _rpythonic_function_(		"glGetTexParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glGetTexLevelParameterfv = _rpythonic_function_(		"glGetTexLevelParameterfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetTexLevelParameteriv = _rpythonic_function_(		"glGetTexLevelParameteriv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glTexImage1D = _rpythonic_function_(		"glTexImage1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glTexImage2D = _rpythonic_function_(		"glTexImage2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetTexImage = _rpythonic_function_(		"glGetTexImage", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glGenTextures = _rpythonic_function_(		"glGenTextures", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),] )

glDeleteTextures = _rpythonic_function_(		"glDeleteTextures", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),] )

glBindTexture = _rpythonic_function_(		"glBindTexture", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("texture",		ctypes.c_uint),] )

glPrioritizeTextures = _rpythonic_function_(		"glPrioritizeTextures", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),
	("priorities",		ctypes.POINTER(ctypes.c_float)),] )

glAreTexturesResident = _rpythonic_function_(		"glAreTexturesResident", ctypes.c_ubyte, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),
	("residences",		ctypes.POINTER(ctypes.c_ubyte)),] )

glIsTexture = _rpythonic_function_(		"glIsTexture", ctypes.c_ubyte, [
	("texture",		ctypes.c_uint),] )

glTexSubImage1D = _rpythonic_function_(		"glTexSubImage1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glTexSubImage2D = _rpythonic_function_(		"glTexSubImage2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

glCopyTexImage1D = _rpythonic_function_(		"glCopyTexImage1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),] )

glCopyTexImage2D = _rpythonic_function_(		"glCopyTexImage2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),] )

glCopyTexSubImage1D = _rpythonic_function_(		"glCopyTexSubImage1D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

glCopyTexSubImage2D = _rpythonic_function_(		"glCopyTexSubImage2D", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glMap1d = _rpythonic_function_(		"glMap1d", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),
	("stride",		ctypes.c_int),
	("order",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_double)),] )

glMap1f = _rpythonic_function_(		"glMap1f", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),
	("stride",		ctypes.c_int),
	("order",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

glMap2d = _rpythonic_function_(		"glMap2d", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),
	("ustride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("v1",		ctypes.c_double),
	("v2",		ctypes.c_double),
	("vstride",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_double)),] )

glMap2f = _rpythonic_function_(		"glMap2f", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),
	("ustride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("vstride",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

glGetMapdv = _rpythonic_function_(		"glGetMapdv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("query",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glGetMapfv = _rpythonic_function_(		"glGetMapfv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("query",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glGetMapiv = _rpythonic_function_(		"glGetMapiv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("query",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glEvalCoord1d = _rpythonic_function_(		"glEvalCoord1d", ctypes.c_void_p, [
	("u",		ctypes.c_double),] )

glEvalCoord1f = _rpythonic_function_(		"glEvalCoord1f", ctypes.c_void_p, [
	("u",		ctypes.c_float),] )

glEvalCoord1dv = _rpythonic_function_(		"glEvalCoord1dv", ctypes.c_void_p, [
	("u",		ctypes.POINTER(ctypes.c_double)),] )

glEvalCoord1fv = _rpythonic_function_(		"glEvalCoord1fv", ctypes.c_void_p, [
	("u",		ctypes.POINTER(ctypes.c_float)),] )

glEvalCoord2d = _rpythonic_function_(		"glEvalCoord2d", ctypes.c_void_p, [
	("u",		ctypes.c_double),
	("v",		ctypes.c_double),] )

glEvalCoord2f = _rpythonic_function_(		"glEvalCoord2f", ctypes.c_void_p, [
	("u",		ctypes.c_float),
	("v",		ctypes.c_float),] )

glEvalCoord2dv = _rpythonic_function_(		"glEvalCoord2dv", ctypes.c_void_p, [
	("u",		ctypes.POINTER(ctypes.c_double)),] )

glEvalCoord2fv = _rpythonic_function_(		"glEvalCoord2fv", ctypes.c_void_p, [
	("u",		ctypes.POINTER(ctypes.c_float)),] )

glMapGrid1d = _rpythonic_function_(		"glMapGrid1d", ctypes.c_void_p, [
	("un",		ctypes.c_int),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),] )

glMapGrid1f = _rpythonic_function_(		"glMapGrid1f", ctypes.c_void_p, [
	("un",		ctypes.c_int),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),] )

glMapGrid2d = _rpythonic_function_(		"glMapGrid2d", ctypes.c_void_p, [
	("un",		ctypes.c_int),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),
	("vn",		ctypes.c_int),
	("v1",		ctypes.c_double),
	("v2",		ctypes.c_double),] )

glMapGrid2f = _rpythonic_function_(		"glMapGrid2f", ctypes.c_void_p, [
	("un",		ctypes.c_int),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),
	("vn",		ctypes.c_int),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),] )

glEvalPoint1 = _rpythonic_function_(		"glEvalPoint1", ctypes.c_void_p, [
	("i",		ctypes.c_int),] )

glEvalPoint2 = _rpythonic_function_(		"glEvalPoint2", ctypes.c_void_p, [
	("i",		ctypes.c_int),
	("j",		ctypes.c_int),] )

glEvalMesh1 = _rpythonic_function_(		"glEvalMesh1", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("i1",		ctypes.c_int),
	("i2",		ctypes.c_int),] )

glEvalMesh2 = _rpythonic_function_(		"glEvalMesh2", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("i1",		ctypes.c_int),
	("i2",		ctypes.c_int),
	("j1",		ctypes.c_int),
	("j2",		ctypes.c_int),] )

glFogf = _rpythonic_function_(		"glFogf", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glFogi = _rpythonic_function_(		"glFogi", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glFogfv = _rpythonic_function_(		"glFogfv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glFogiv = _rpythonic_function_(		"glFogiv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glFeedbackBuffer = _rpythonic_function_(		"glFeedbackBuffer", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("buffer",		ctypes.POINTER(ctypes.c_float)),] )

glPassThrough = _rpythonic_function_(		"glPassThrough", ctypes.c_void_p, [
	("token",		ctypes.c_float),] )

glSelectBuffer = _rpythonic_function_(		"glSelectBuffer", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("buffer",		ctypes.POINTER(ctypes.c_uint)),] )

glInitNames = _rpythonic_function_(		"glInitNames", ctypes.c_void_p, [] )

glLoadName = _rpythonic_function_(		"glLoadName", ctypes.c_void_p, [
	("name",		ctypes.c_uint),] )

PFNGLDEFORMATIONMAP3FSGIXPROC = _rpythonic_function_(		"PFNGLDEFORMATIONMAP3FSGIXPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),
	("ustride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("vstride",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("w1",		ctypes.c_float),
	("w2",		ctypes.c_float),
	("wstride",		ctypes.c_int),
	("worder",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLDEFORMSGIXPROC = _rpythonic_function_(		"PFNGLDEFORMSGIXPROC", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC = _rpythonic_function_(		"PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

PFNGLREFERENCEPLANESGIXPROC = _rpythonic_function_(		"PFNGLREFERENCEPLANESGIXPROC", ctypes.c_void_p, [
	("equation",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLFLUSHRASTERSGIXPROC = _rpythonic_function_(		"PFNGLFLUSHRASTERSGIXPROC", ctypes.c_void_p, [] )

PFNGLFOGFUNCSGISPROC = _rpythonic_function_(		"PFNGLFOGFUNCSGISPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETFOGFUNCSGISPROC = _rpythonic_function_(		"PFNGLGETFOGFUNCSGISPROC", ctypes.c_void_p, [
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLIMAGETRANSFORMPARAMETERIHPPROC = _rpythonic_function_(		"PFNGLIMAGETRANSFORMPARAMETERIHPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLIMAGETRANSFORMPARAMETERFHPPROC = _rpythonic_function_(		"PFNGLIMAGETRANSFORMPARAMETERFHPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLIMAGETRANSFORMPARAMETERIVHPPROC = _rpythonic_function_(		"PFNGLIMAGETRANSFORMPARAMETERIVHPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLIMAGETRANSFORMPARAMETERFVHPPROC = _rpythonic_function_(		"PFNGLIMAGETRANSFORMPARAMETERFVHPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC = _rpythonic_function_(		"PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC = _rpythonic_function_(		"PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLORSUBTABLEEXTPROC = _rpythonic_function_(		"PFNGLCOLORSUBTABLEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("count",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYCOLORSUBTABLEEXTPROC = _rpythonic_function_(		"PFNGLCOPYCOLORSUBTABLEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("start",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLHINTPGIPROC = _rpythonic_function_(		"PFNGLHINTPGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("mode",		ctypes.c_int),] )

PFNGLCOLORTABLEEXTPROC = _rpythonic_function_(		"PFNGLCOLORTABLEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOLORTABLEEXTPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOLORTABLEPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETCOLORTABLEPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETLISTPARAMETERFVSGIXPROC = _rpythonic_function_(		"PFNGLGETLISTPARAMETERFVSGIXPROC", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETLISTPARAMETERIVSGIXPROC = _rpythonic_function_(		"PFNGLGETLISTPARAMETERIVSGIXPROC", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLLISTPARAMETERFSGIXPROC = _rpythonic_function_(		"PFNGLLISTPARAMETERFSGIXPROC", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLLISTPARAMETERFVSGIXPROC = _rpythonic_function_(		"PFNGLLISTPARAMETERFVSGIXPROC", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLLISTPARAMETERISGIXPROC = _rpythonic_function_(		"PFNGLLISTPARAMETERISGIXPROC", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLLISTPARAMETERIVSGIXPROC = _rpythonic_function_(		"PFNGLLISTPARAMETERIVSGIXPROC", ctypes.c_void_p, [
	("C_list",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLINDEXMATERIALEXTPROC = _rpythonic_function_(		"PFNGLINDEXMATERIALEXTPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLINDEXFUNCEXTPROC = _rpythonic_function_(		"PFNGLINDEXFUNCEXTPROC", ctypes.c_void_p, [
	("func",		ctypes.c_uint),
	("ref",		ctypes.c_float),] )

PFNGLLOCKARRAYSEXTPROC = _rpythonic_function_(		"PFNGLLOCKARRAYSEXTPROC", ctypes.c_void_p, [
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),] )

PFNGLUNLOCKARRAYSEXTPROC = _rpythonic_function_(		"PFNGLUNLOCKARRAYSEXTPROC", ctypes.c_void_p, [] )

PFNGLCULLPARAMETERDVEXTPROC = _rpythonic_function_(		"PFNGLCULLPARAMETERDVEXTPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLCULLPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLCULLPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLFRAGMENTCOLORMATERIALSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTCOLORMATERIALSGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLFRAGMENTLIGHTFSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTFSGIXPROC", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLFRAGMENTLIGHTFVSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTFVSGIXPROC", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLFRAGMENTLIGHTISGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTISGIXPROC", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLFRAGMENTLIGHTIVSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTIVSGIXPROC", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLFRAGMENTLIGHTMODELFSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTMODELFSGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLFRAGMENTLIGHTMODELFVSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTMODELFVSGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLFRAGMENTLIGHTMODELISGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTMODELISGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLFRAGMENTLIGHTMODELIVSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTLIGHTMODELIVSGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLFRAGMENTMATERIALFSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTMATERIALFSGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLFRAGMENTMATERIALFVSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTMATERIALFVSGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLFRAGMENTMATERIALISGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTMATERIALISGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLFRAGMENTMATERIALIVSGIXPROC = _rpythonic_function_(		"PFNGLFRAGMENTMATERIALIVSGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETFRAGMENTLIGHTFVSGIXPROC = _rpythonic_function_(		"PFNGLGETFRAGMENTLIGHTFVSGIXPROC", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETFRAGMENTLIGHTIVSGIXPROC = _rpythonic_function_(		"PFNGLGETFRAGMENTLIGHTIVSGIXPROC", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETFRAGMENTMATERIALFVSGIXPROC = _rpythonic_function_(		"PFNGLGETFRAGMENTMATERIALFVSGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETFRAGMENTMATERIALIVSGIXPROC = _rpythonic_function_(		"PFNGLGETFRAGMENTMATERIALIVSGIXPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLLIGHTENVISGIXPROC = _rpythonic_function_(		"PFNGLLIGHTENVISGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLDRAWRANGEELEMENTSEXTPROC = _rpythonic_function_(		"PFNGLDRAWRANGEELEMENTSEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLAPPLYTEXTUREEXTPROC = _rpythonic_function_(		"PFNGLAPPLYTEXTUREEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLTEXTURELIGHTEXTPROC = _rpythonic_function_(		"PFNGLTEXTURELIGHTEXTPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),] )

PFNGLTEXTUREMATERIALEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREMATERIALEXTPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLASYNCMARKERSGIXPROC = _rpythonic_function_(		"PFNGLASYNCMARKERSGIXPROC", ctypes.c_void_p, [
	("marker",		ctypes.c_uint),] )

PFNGLFINISHASYNCSGIXPROC = _rpythonic_function_(		"PFNGLFINISHASYNCSGIXPROC", ctypes.c_int, [
	("markerp",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPOLLASYNCSGIXPROC = _rpythonic_function_(		"PFNGLPOLLASYNCSGIXPROC", ctypes.c_int, [
	("markerp",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENASYNCMARKERSSGIXPROC = _rpythonic_function_(		"PFNGLGENASYNCMARKERSSGIXPROC", ctypes.c_uint, [
	("C_range",		ctypes.c_int),] )

PFNGLDELETEASYNCMARKERSSGIXPROC = _rpythonic_function_(		"PFNGLDELETEASYNCMARKERSSGIXPROC", ctypes.c_void_p, [
	("marker",		ctypes.c_uint),
	("C_range",		ctypes.c_int),] )

PFNGLISASYNCMARKERSGIXPROC = _rpythonic_function_(		"PFNGLISASYNCMARKERSGIXPROC", ctypes.c_ubyte, [
	("marker",		ctypes.c_uint),] )

PFNGLVERTEXPOINTERVINTELPROC = _rpythonic_function_(		"PFNGLVERTEXPOINTERVINTELPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLNORMALPOINTERVINTELPROC = _rpythonic_function_(		"PFNGLNORMALPOINTERVINTELPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLCOLORPOINTERVINTELPROC = _rpythonic_function_(		"PFNGLCOLORPOINTERVINTELPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLTEXCOORDPOINTERVINTELPROC = _rpythonic_function_(		"PFNGLTEXCOORDPOINTERVINTELPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLPIXELTRANSFORMPARAMETERIEXTPROC = _rpythonic_function_(		"PFNGLPIXELTRANSFORMPARAMETERIEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLPIXELTRANSFORMPARAMETERFEXTPROC = _rpythonic_function_(		"PFNGLPIXELTRANSFORMPARAMETERFEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSECONDARYCOLOR3BEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3BEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_char),
	("green",		ctypes.c_char),
	("blue",		ctypes.c_char),] )

PFNGLSECONDARYCOLOR3BVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3BVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLSECONDARYCOLOR3DEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3DEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_double),
	("green",		ctypes.c_double),
	("blue",		ctypes.c_double),] )

PFNGLSECONDARYCOLOR3DVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3DVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLSECONDARYCOLOR3FEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3FEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),] )

PFNGLSECONDARYCOLOR3FVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3FVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSECONDARYCOLOR3IEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3IEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_int),
	("green",		ctypes.c_int),
	("blue",		ctypes.c_int),] )

PFNGLSECONDARYCOLOR3IVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3IVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLSECONDARYCOLOR3SEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3SEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_short),
	("green",		ctypes.c_short),
	("blue",		ctypes.c_short),] )

PFNGLSECONDARYCOLOR3SVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3SVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLSECONDARYCOLOR3UBEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UBEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ubyte),
	("green",		ctypes.c_ubyte),
	("blue",		ctypes.c_ubyte),] )

PFNGLSECONDARYCOLOR3UBVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UBVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLSECONDARYCOLOR3UIEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UIEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_uint),
	("green",		ctypes.c_uint),
	("blue",		ctypes.c_uint),] )

PFNGLSECONDARYCOLOR3UIVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UIVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLSECONDARYCOLOR3USEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3USEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),] )

PFNGLSECONDARYCOLOR3USVEXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3USVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLSECONDARYCOLORPOINTEREXTPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLORPOINTEREXTPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXTURENORMALEXTPROC = _rpythonic_function_(		"PFNGLTEXTURENORMALEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLMULTIDRAWARRAYSEXTPROC = _rpythonic_function_(		"PFNGLMULTIDRAWARRAYSEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.POINTER(ctypes.c_int)),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("primcount",		ctypes.c_int),] )

PFNGLMULTIDRAWELEMENTSEXTPROC = _rpythonic_function_(		"PFNGLMULTIDRAWELEMENTSEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("primcount",		ctypes.c_int),] )

PFNGLFOGCOORDFEXTPROC = _rpythonic_function_(		"PFNGLFOGCOORDFEXTPROC", ctypes.c_void_p, [
	("coord",		ctypes.c_float),] )

PFNGLFOGCOORDFVEXTPROC = _rpythonic_function_(		"PFNGLFOGCOORDFVEXTPROC", ctypes.c_void_p, [
	("coord",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLFOGCOORDDEXTPROC = _rpythonic_function_(		"PFNGLFOGCOORDDEXTPROC", ctypes.c_void_p, [
	("coord",		ctypes.c_double),] )

PFNGLDISABLEVERTEXATTRIBAPPLEPROC = _rpythonic_function_(		"PFNGLDISABLEVERTEXATTRIBAPPLEPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),] )

PFNGLISVERTEXATTRIBENABLEDAPPLEPROC = _rpythonic_function_(		"PFNGLISVERTEXATTRIBENABLEDAPPLEPROC", ctypes.c_ubyte, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),] )

PFNGLMAPVERTEXATTRIB1DAPPLEPROC = _rpythonic_function_(		"PFNGLMAPVERTEXATTRIB1DAPPLEPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_uint),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),
	("stride",		ctypes.c_int),
	("order",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMAPVERTEXATTRIB1FAPPLEPROC = _rpythonic_function_(		"PFNGLMAPVERTEXATTRIB1FAPPLEPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_uint),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),
	("stride",		ctypes.c_int),
	("order",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMAPVERTEXATTRIB2DAPPLEPROC = _rpythonic_function_(		"PFNGLMAPVERTEXATTRIB2DAPPLEPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_uint),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),
	("ustride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("v1",		ctypes.c_double),
	("v2",		ctypes.c_double),
	("vstride",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMAPVERTEXATTRIB2FAPPLEPROC = _rpythonic_function_(		"PFNGLMAPVERTEXATTRIB2FAPPLEPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_uint),
	("u1",		ctypes.c_float),
	("u2",		ctypes.c_float),
	("ustride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("vstride",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLOBJECTPURGEABLEAPPLEPROC = _rpythonic_function_(		"PFNGLOBJECTPURGEABLEAPPLEPROC", ctypes.c_uint, [
	("objectType",		ctypes.c_uint),
	("name",		ctypes.c_uint),
	("option",		ctypes.c_uint),] )

PFNGLOBJECTUNPURGEABLEAPPLEPROC = _rpythonic_function_(		"PFNGLOBJECTUNPURGEABLEAPPLEPROC", ctypes.c_uint, [
	("objectType",		ctypes.c_uint),
	("name",		ctypes.c_uint),
	("option",		ctypes.c_uint),] )

PFNGLGETOBJECTPARAMETERIVAPPLEPROC = _rpythonic_function_(		"PFNGLGETOBJECTPARAMETERIVAPPLEPROC", ctypes.c_void_p, [
	("objectType",		ctypes.c_uint),
	("name",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLBEGINVIDEOCAPTURENVPROC = _rpythonic_function_(		"PFNGLBEGINVIDEOCAPTURENVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),] )

PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC = _rpythonic_function_(		"PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("frame_region",		ctypes.c_uint),
	("offset",		ctypes.c_int),] )

PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC = _rpythonic_function_(		"PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("frame_region",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("texture",		ctypes.c_uint),] )

PFNGLENDVIDEOCAPTURENVPROC = _rpythonic_function_(		"PFNGLENDVIDEOCAPTURENVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),] )

PFNGLGETVIDEOCAPTUREIVNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOCAPTUREIVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVIDEOCAPTURESTREAMIVNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOCAPTURESTREAMIVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVIDEOCAPTURESTREAMFVNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOCAPTURESTREAMFVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVIDEOCAPTURESTREAMDVNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOCAPTURESTREAMDVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVIDEOCAPTURENVPROC = _rpythonic_function_(		"PFNGLVIDEOCAPTURENVPROC", ctypes.c_uint, [
	("video_capture_slot",		ctypes.c_uint),
	("sequence_num",		ctypes.POINTER(ctypes.c_uint)),
	("capture_time",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC = _rpythonic_function_(		"PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC", ctypes.c_void_p, [
	("video_capture_slot",		ctypes.c_uint),
	("stream",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLCOPYIMAGESUBDATANVPROC = _rpythonic_function_(		"PFNGLCOPYIMAGESUBDATANVPROC", ctypes.c_void_p, [
	("srcName",		ctypes.c_uint),
	("srcTarget",		ctypes.c_uint),
	("srcLevel",		ctypes.c_int),
	("srcX",		ctypes.c_int),
	("srcY",		ctypes.c_int),
	("srcZ",		ctypes.c_int),
	("dstName",		ctypes.c_uint),
	("dstTarget",		ctypes.c_uint),
	("dstLevel",		ctypes.c_int),
	("dstX",		ctypes.c_int),
	("dstY",		ctypes.c_int),
	("dstZ",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),] )

PFNGLUSESHADERPROGRAMEXTPROC = _rpythonic_function_(		"PFNGLUSESHADERPROGRAMEXTPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("program",		ctypes.c_uint),] )

PFNGLACTIVEPROGRAMEXTPROC = _rpythonic_function_(		"PFNGLACTIVEPROGRAMEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),] )

PFNGLCREATESHADERPROGRAMEXTPROC = _rpythonic_function_(		"PFNGLCREATESHADERPROGRAMEXTPROC", ctypes.c_uint, [
	("C_type",		ctypes.c_uint),
	("string",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLMAKEBUFFERRESIDENTNVPROC = _rpythonic_function_(		"PFNGLMAKEBUFFERRESIDENTNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("access",		ctypes.c_uint),] )

PFNGLMAKEBUFFERNONRESIDENTNVPROC = _rpythonic_function_(		"PFNGLMAKEBUFFERNONRESIDENTNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLISBUFFERRESIDENTNVPROC = _rpythonic_function_(		"PFNGLISBUFFERRESIDENTNVPROC", ctypes.c_ubyte, [
	("target",		ctypes.c_uint),] )

PFNGLMAKENAMEDBUFFERRESIDENTNVPROC = _rpythonic_function_(		"PFNGLMAKENAMEDBUFFERRESIDENTNVPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("access",		ctypes.c_uint),] )

PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC = _rpythonic_function_(		"PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),] )

PFNGLISNAMEDBUFFERRESIDENTNVPROC = _rpythonic_function_(		"PFNGLISNAMEDBUFFERRESIDENTNVPROC", ctypes.c_ubyte, [
	("buffer",		ctypes.c_uint),] )

PFNGLGETBUFFERPARAMETERUI64VNVPROC = _rpythonic_function_(		"PFNGLGETBUFFERPARAMETERUI64VNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC = _rpythonic_function_(		"PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLGETINTEGERUI64VNVPROC = _rpythonic_function_(		"PFNGLGETINTEGERUI64VNVPROC", ctypes.c_void_p, [
	("value",		ctypes.c_uint),
	("result",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLUNIFORMUI64NVPROC = _rpythonic_function_(		"PFNGLUNIFORMUI64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("value",		ctypes.c_uint64),] )

PFNGLUNIFORMUI64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORMUI64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLGETUNIFORMUI64VNVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMUI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLPROGRAMUNIFORMUI64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMUI64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("value",		ctypes.c_uint64),] )

PFNGLPROGRAMUNIFORMUI64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMUI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLBUFFERADDRESSRANGENVPROC = _rpythonic_function_(		"PFNGLBUFFERADDRESSRANGENVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("address",		ctypes.c_uint64),
	("length",		ctypes.c_int),] )

PFNGLVERTEXFORMATNVPROC = _rpythonic_function_(		"PFNGLVERTEXFORMATNVPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLNORMALFORMATNVPROC = _rpythonic_function_(		"PFNGLNORMALFORMATNVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLCOLORFORMATNVPROC = _rpythonic_function_(		"PFNGLCOLORFORMATNVPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLINDEXFORMATNVPROC = _rpythonic_function_(		"PFNGLINDEXFORMATNVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLTEXCOORDFORMATNVPROC = _rpythonic_function_(		"PFNGLTEXCOORDFORMATNVPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLEDGEFLAGFORMATNVPROC = _rpythonic_function_(		"PFNGLEDGEFLAGFORMATNVPROC", ctypes.c_void_p, [
	("stride",		ctypes.c_int),] )

PFNGLSECONDARYCOLORFORMATNVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLORFORMATNVPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLFOGCOORDFORMATNVPROC = _rpythonic_function_(		"PFNGLFOGCOORDFORMATNVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLVERTEXATTRIBFORMATNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBFORMATNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("stride",		ctypes.c_int),] )

PFNGLVERTEXATTRIBIFORMATNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBIFORMATNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLGETINTEGERUI64I_VNVPROC = _rpythonic_function_(		"PFNGLGETINTEGERUI64I_VNVPROC", ctypes.c_void_p, [
	("value",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("result",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLTEXTUREBARRIERNVPROC = _rpythonic_function_(		"PFNGLTEXTUREBARRIERNVPROC", ctypes.c_void_p, [] )

PFNGLBINDIMAGETEXTUREEXTPROC = _rpythonic_function_(		"PFNGLBINDIMAGETEXTUREEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("layered",		ctypes.c_ubyte),
	("layer",		ctypes.c_int),
	("access",		ctypes.c_uint),
	("format",		ctypes.c_int),] )

PFNGLMEMORYBARRIEREXTPROC = _rpythonic_function_(		"PFNGLMEMORYBARRIEREXTPROC", ctypes.c_void_p, [
	("barriers",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBL1DEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1DEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL2DEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2DEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL3DEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3DEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL4DEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4DEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLVERTEXATTRIBL1DVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1DVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBL2DVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2DVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBL3DVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3DVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBL4DVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4DVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIBLPOINTEREXTPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBLPOINTEREXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETVERTEXATTRIBLDVEXTPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBLDVEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC = _rpythonic_function_(		"PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC", ctypes.c_void_p, [
	("vaobj",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("offset",		ctypes.c_int),] )

PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLUNIFORM1I64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM1I64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),] )

PFNGLUNIFORM2I64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM2I64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),] )

PFNGLUNIFORM3I64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM3I64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),
	("z",		ctypes.c_int64),] )

PFNGLUNIFORM4I64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM4I64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),
	("z",		ctypes.c_int64),
	("w",		ctypes.c_int64),] )

PFNGLUNIFORM1I64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM1I64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLUNIFORM2I64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM2I64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLUNIFORM3I64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM3I64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLUNIFORM4I64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM4I64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLUNIFORM1UI64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM1UI64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),] )

PFNGLUNIFORM2UI64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM2UI64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),] )

PFNGLUNIFORM3UI64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM3UI64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),
	("z",		ctypes.c_uint64),] )

PFNGLUNIFORM4UI64NVPROC = _rpythonic_function_(		"PFNGLUNIFORM4UI64NVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),
	("z",		ctypes.c_uint64),
	("w",		ctypes.c_uint64),] )

PFNGLUNIFORM1UI64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM1UI64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLUNIFORM2UI64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM2UI64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLUNIFORM3UI64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM3UI64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLUNIFORM2FARBPROC = _rpythonic_function_(		"PFNGLUNIFORM2FARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),] )

PFNGLUNIFORM3FARBPROC = _rpythonic_function_(		"PFNGLUNIFORM3FARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),] )

PFNGLUNIFORM4FARBPROC = _rpythonic_function_(		"PFNGLUNIFORM4FARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("v3",		ctypes.c_float),] )

PFNGLUNIFORM1IARBPROC = _rpythonic_function_(		"PFNGLUNIFORM1IARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),] )

PFNGLUNIFORM2IARBPROC = _rpythonic_function_(		"PFNGLUNIFORM2IARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),] )

PFNGLUNIFORM3IARBPROC = _rpythonic_function_(		"PFNGLUNIFORM3IARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),] )

PFNGLUNIFORM4IARBPROC = _rpythonic_function_(		"PFNGLUNIFORM4IARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),
	("v3",		ctypes.c_int),] )

PFNGLUNIFORM1FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM1FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM2FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM2FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM3FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM3FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM4FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM4FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORM1IVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM1IVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORM2IVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM2IVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORM3IVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM3IVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORM4IVARBPROC = _rpythonic_function_(		"PFNGLUNIFORM4IVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLUNIFORMMATRIX2FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX3FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLUNIFORMMATRIX4FVARBPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4FVARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETOBJECTPARAMETERFVARBPROC = _rpythonic_function_(		"PFNGLGETOBJECTPARAMETERFVARBPROC", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETOBJECTPARAMETERIVARBPROC = _rpythonic_function_(		"PFNGLGETOBJECTPARAMETERIVARBPROC", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETINFOLOGARBPROC = _rpythonic_function_(		"PFNGLGETINFOLOGARBPROC", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),
	("maxLength",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("infoLog",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETATTACHEDOBJECTSARBPROC = _rpythonic_function_(		"PFNGLGETATTACHEDOBJECTSARBPROC", ctypes.c_void_p, [
	("containerObj",		ctypes.c_uint),
	("maxCount",		ctypes.c_int),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("obj",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETUNIFORMLOCATIONARBPROC = _rpythonic_function_(		"PFNGLGETUNIFORMLOCATIONARBPROC", ctypes.c_int, [
	("programObj",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVEUNIFORMARBPROC = _rpythonic_function_(		"PFNGLGETACTIVEUNIFORMARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("maxLength",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETUNIFORMFVARBPROC = _rpythonic_function_(		"PFNGLGETUNIFORMFVARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETUNIFORMIVARBPROC = _rpythonic_function_(		"PFNGLGETUNIFORMIVARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETSHADERSOURCEARBPROC = _rpythonic_function_(		"PFNGLGETSHADERSOURCEARBPROC", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),
	("maxLength",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("source",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLBINDATTRIBLOCATIONARBPROC = _rpythonic_function_(		"PFNGLBINDATTRIBLOCATIONARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVEATTRIBARBPROC = _rpythonic_function_(		"PFNGLGETACTIVEATTRIBARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("maxLength",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETATTRIBLOCATIONARBPROC = _rpythonic_function_(		"PFNGLGETATTRIBLOCATIONARBPROC", ctypes.c_int, [
	("programObj",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLDRAWBUFFERSARBPROC = _rpythonic_function_(		"PFNGLDRAWBUFFERSARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("bufs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCLAMPCOLORARBPROC = _rpythonic_function_(		"PFNGLCLAMPCOLORARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("clamp",		ctypes.c_uint),] )

PFNGLDRAWARRAYSINSTANCEDARBPROC = _rpythonic_function_(		"PFNGLDRAWARRAYSINSTANCEDARBPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),
	("primcount",		ctypes.c_int),] )

PFNGLDRAWELEMENTSINSTANCEDARBPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTSINSTANCEDARBPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),
	("primcount",		ctypes.c_int),] )

PFNGLISRENDERBUFFERPROC = _rpythonic_function_(		"PFNGLISRENDERBUFFERPROC", ctypes.c_ubyte, [
	("renderbuffer",		ctypes.c_uint),] )

PFNGLBINDRENDERBUFFERPROC = _rpythonic_function_(		"PFNGLBINDRENDERBUFFERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLDELETERENDERBUFFERSPROC = _rpythonic_function_(		"PFNGLDELETERENDERBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("renderbuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENRENDERBUFFERSPROC = _rpythonic_function_(		"PFNGLGENRENDERBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("renderbuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLRENDERBUFFERSTORAGEPROC = _rpythonic_function_(		"PFNGLRENDERBUFFERSTORAGEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETRENDERBUFFERPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETRENDERBUFFERPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLISFRAMEBUFFERPROC = _rpythonic_function_(		"PFNGLISFRAMEBUFFERPROC", ctypes.c_ubyte, [
	("framebuffer",		ctypes.c_uint),] )

PFNGLBINDFRAMEBUFFERPROC = _rpythonic_function_(		"PFNGLBINDFRAMEBUFFERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("framebuffer",		ctypes.c_uint),] )

PFNGLDELETEFRAMEBUFFERSPROC = _rpythonic_function_(		"PFNGLDELETEFRAMEBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("framebuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENFRAMEBUFFERSPROC = _rpythonic_function_(		"PFNGLGENFRAMEBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("framebuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCHECKFRAMEBUFFERSTATUSPROC = _rpythonic_function_(		"PFNGLCHECKFRAMEBUFFERSTATUSPROC", ctypes.c_uint, [
	("target",		ctypes.c_uint),] )

PFNGLFRAMEBUFFERTEXTURE1DPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURE1DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURE2DPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURE2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURE3DPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURE3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("zoffset",		ctypes.c_int),] )

PFNGLFRAMEBUFFERRENDERBUFFERPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERRENDERBUFFERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("renderbuffertarget",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGENERATEMIPMAPPROC = _rpythonic_function_(		"PFNGLGENERATEMIPMAPPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLBLITFRAMEBUFFERPROC = _rpythonic_function_(		"PFNGLBLITFRAMEBUFFERPROC", ctypes.c_void_p, [
	("srcX0",		ctypes.c_int),
	("srcY0",		ctypes.c_int),
	("srcX1",		ctypes.c_int),
	("srcY1",		ctypes.c_int),
	("dstX0",		ctypes.c_int),
	("dstY0",		ctypes.c_int),
	("dstX1",		ctypes.c_int),
	("dstY1",		ctypes.c_int),
	("mask",		ctypes.c_uint),
	("filter",		ctypes.c_uint),] )

PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC = _rpythonic_function_(		"PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("samples",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURELAYERPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURELAYERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("layer",		ctypes.c_int),] )

PFNGLPROGRAMPARAMETERIARBPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETERIARBPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("value",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTUREARBPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTUREARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTURELAYERARBPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTURELAYERARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("layer",		ctypes.c_int),] )

PFNGLFRAMEBUFFERTEXTUREFACEARBPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERTEXTUREFACEARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("face",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBDIVISORARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBDIVISORARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("divisor",		ctypes.c_uint),] )

PFNGLMAPBUFFERRANGEPROC = _rpythonic_function_(		"PFNGLMAPBUFFERRANGEPROC", ctypes.POINTER(ctypes.c_void_p), [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("length",		ctypes.c_int),
	("access",		ctypes.c_uint),] )

PFNGLFLUSHMAPPEDBUFFERRANGEPROC = _rpythonic_function_(		"PFNGLFLUSHMAPPEDBUFFERRANGEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("length",		ctypes.c_int),] )

PFNGLTEXBUFFERARBPROC = _rpythonic_function_(		"PFNGLTEXBUFFERARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLBINDVERTEXARRAYPROC = _rpythonic_function_(		"PFNGLBINDVERTEXARRAYPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),] )

PFNGLDELETEVERTEXARRAYSPROC = _rpythonic_function_(		"PFNGLDELETEVERTEXARRAYSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("arrays",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENVERTEXARRAYSPROC = _rpythonic_function_(		"PFNGLGENVERTEXARRAYSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("arrays",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISVERTEXARRAYPROC = _rpythonic_function_(		"PFNGLISVERTEXARRAYPROC", ctypes.c_ubyte, [
	("array",		ctypes.c_uint),] )

PFNGLGETUNIFORMINDICESPROC = _rpythonic_function_(		"PFNGLGETUNIFORMINDICESPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("uniformCount",		ctypes.c_int),
	("uniformNames",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("uniformIndices",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETACTIVEUNIFORMSIVPROC = _rpythonic_function_(		"PFNGLGETACTIVEUNIFORMSIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("uniformCount",		ctypes.c_int),
	("uniformIndices",		ctypes.POINTER(ctypes.c_uint)),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETACTIVEUNIFORMNAMEPROC = _rpythonic_function_(		"PFNGLGETACTIVEUNIFORMNAMEPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("uniformIndex",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("uniformName",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETUNIFORMBLOCKINDEXPROC = _rpythonic_function_(		"PFNGLGETUNIFORMBLOCKINDEXPROC", ctypes.c_uint, [
	("program",		ctypes.c_uint),
	("uniformBlockName",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVEUNIFORMBLOCKIVPROC = _rpythonic_function_(		"PFNGLGETACTIVEUNIFORMBLOCKIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("uniformBlockIndex",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC = _rpythonic_function_(		"PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("uniformBlockIndex",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("uniformBlockName",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLUNIFORMBLOCKBINDINGPROC = _rpythonic_function_(		"PFNGLUNIFORMBLOCKBINDINGPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("uniformBlockIndex",		ctypes.c_uint),
	("uniformBlockBinding",		ctypes.c_uint),] )

PFNGLCOPYBUFFERSUBDATAPROC = _rpythonic_function_(		"PFNGLCOPYBUFFERSUBDATAPROC", ctypes.c_void_p, [
	("readTarget",		ctypes.c_uint),
	("writeTarget",		ctypes.c_uint),
	("readOffset",		ctypes.c_int),
	("writeOffset",		ctypes.c_int),
	("size",		ctypes.c_int),] )

PFNGLDRAWELEMENTSBASEVERTEXPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTSBASEVERTEXPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),
	("basevertex",		ctypes.c_int),] )

PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC = _rpythonic_function_(		"PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),
	("basevertex",		ctypes.c_int),] )

PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),
	("primcount",		ctypes.c_int),
	("basevertex",		ctypes.c_int),] )

PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC = _rpythonic_function_(		"PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("primcount",		ctypes.c_int),
	("basevertex",		ctypes.POINTER(ctypes.c_int)),] )

glutEntryFunc = _rpythonic_function_(		"glutEntryFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutKeyboardUpFunc = _rpythonic_function_(		"glutKeyboardUpFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutSpecialUpFunc = _rpythonic_function_(		"glutSpecialUpFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutJoystickFunc = _rpythonic_function_(		"glutJoystickFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),
	("pollInterval",		ctypes.c_int),] )

glutMenuStateFunc = _rpythonic_function_(		"glutMenuStateFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutMenuStatusFunc = _rpythonic_function_(		"glutMenuStatusFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutOverlayDisplayFunc = _rpythonic_function_(		"glutOverlayDisplayFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutWindowStatusFunc = _rpythonic_function_(		"glutWindowStatusFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutSpaceballMotionFunc = _rpythonic_function_(		"glutSpaceballMotionFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutSpaceballRotateFunc = _rpythonic_function_(		"glutSpaceballRotateFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutSpaceballButtonFunc = _rpythonic_function_(		"glutSpaceballButtonFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutButtonBoxFunc = _rpythonic_function_(		"glutButtonBoxFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutDialsFunc = _rpythonic_function_(		"glutDialsFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutTabletMotionFunc = _rpythonic_function_(		"glutTabletMotionFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutTabletButtonFunc = _rpythonic_function_(		"glutTabletButtonFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutGet = _rpythonic_function_(		"glutGet", ctypes.c_int, [
	("query",		ctypes.c_uint),] )

glutDeviceGet = _rpythonic_function_(		"glutDeviceGet", ctypes.c_int, [
	("query",		ctypes.c_uint),] )

glutGetModifiers = _rpythonic_function_(		"glutGetModifiers", ctypes.c_int, [] )

glutLayerGet = _rpythonic_function_(		"glutLayerGet", ctypes.c_int, [
	("query",		ctypes.c_uint),] )

glutBitmapCharacter = _rpythonic_function_(		"glutBitmapCharacter", ctypes.c_void_p, [
	("font",		ctypes.POINTER(ctypes.c_void_p)),
	("character",		ctypes.c_int),] )

glutBitmapWidth = _rpythonic_function_(		"glutBitmapWidth", ctypes.c_int, [
	("font",		ctypes.POINTER(ctypes.c_void_p)),
	("character",		ctypes.c_int),] )

glutStrokeCharacter = _rpythonic_function_(		"glutStrokeCharacter", ctypes.c_void_p, [
	("font",		ctypes.POINTER(ctypes.c_void_p)),
	("character",		ctypes.c_int),] )

glutStrokeWidth = _rpythonic_function_(		"glutStrokeWidth", ctypes.c_int, [
	("font",		ctypes.POINTER(ctypes.c_void_p)),
	("character",		ctypes.c_int),] )

glutBitmapLength = _rpythonic_function_(		"glutBitmapLength", ctypes.c_int, [
	("font",		ctypes.POINTER(ctypes.c_void_p)),
	("string",		ctypes.POINTER(ctypes.c_ubyte)),] )

glutStrokeLength = _rpythonic_function_(		"glutStrokeLength", ctypes.c_int, [
	("font",		ctypes.POINTER(ctypes.c_void_p)),
	("string",		ctypes.POINTER(ctypes.c_ubyte)),] )

glutWireCube = _rpythonic_function_(		"glutWireCube", ctypes.c_void_p, [
	("size",		ctypes.c_double),] )

glutSolidCube = _rpythonic_function_(		"glutSolidCube", ctypes.c_void_p, [
	("size",		ctypes.c_double),] )

glutWireSphere = _rpythonic_function_(		"glutWireSphere", ctypes.c_void_p, [
	("radius",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("stacks",		ctypes.c_int),] )

glutSolidSphere = _rpythonic_function_(		"glutSolidSphere", ctypes.c_void_p, [
	("radius",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("stacks",		ctypes.c_int),] )

glutWireCone = _rpythonic_function_(		"glutWireCone", ctypes.c_void_p, [
	("base",		ctypes.c_double),
	("height",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("stacks",		ctypes.c_int),] )

glutSolidCone = _rpythonic_function_(		"glutSolidCone", ctypes.c_void_p, [
	("base",		ctypes.c_double),
	("height",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("stacks",		ctypes.c_int),] )

glutWireTorus = _rpythonic_function_(		"glutWireTorus", ctypes.c_void_p, [
	("innerRadius",		ctypes.c_double),
	("outerRadius",		ctypes.c_double),
	("sides",		ctypes.c_int),
	("rings",		ctypes.c_int),] )

glutSolidTorus = _rpythonic_function_(		"glutSolidTorus", ctypes.c_void_p, [
	("innerRadius",		ctypes.c_double),
	("outerRadius",		ctypes.c_double),
	("sides",		ctypes.c_int),
	("rings",		ctypes.c_int),] )

glutWireDodecahedron = _rpythonic_function_(		"glutWireDodecahedron", ctypes.c_void_p, [] )

glutSolidDodecahedron = _rpythonic_function_(		"glutSolidDodecahedron", ctypes.c_void_p, [] )

glutWireOctahedron = _rpythonic_function_(		"glutWireOctahedron", ctypes.c_void_p, [] )

glutSolidOctahedron = _rpythonic_function_(		"glutSolidOctahedron", ctypes.c_void_p, [] )

glutWireTetrahedron = _rpythonic_function_(		"glutWireTetrahedron", ctypes.c_void_p, [] )

glutSolidTetrahedron = _rpythonic_function_(		"glutSolidTetrahedron", ctypes.c_void_p, [] )

glutWireIcosahedron = _rpythonic_function_(		"glutWireIcosahedron", ctypes.c_void_p, [] )

glutSolidIcosahedron = _rpythonic_function_(		"glutSolidIcosahedron", ctypes.c_void_p, [] )

glutWireTeapot = _rpythonic_function_(		"glutWireTeapot", ctypes.c_void_p, [
	("size",		ctypes.c_double),] )

glutSolidTeapot = _rpythonic_function_(		"glutSolidTeapot", ctypes.c_void_p, [
	("size",		ctypes.c_double),] )

glutGameModeString = _rpythonic_function_(		"glutGameModeString", ctypes.c_void_p, [
	("string",		ctypes.POINTER(ctypes.c_char)),] )

glutEnterGameMode = _rpythonic_function_(		"glutEnterGameMode", ctypes.c_int, [] )

glutLeaveGameMode = _rpythonic_function_(		"glutLeaveGameMode", ctypes.c_void_p, [] )

glutGameModeGet = _rpythonic_function_(		"glutGameModeGet", ctypes.c_int, [
	("query",		ctypes.c_uint),] )

glutVideoResizeGet = _rpythonic_function_(		"glutVideoResizeGet", ctypes.c_int, [
	("query",		ctypes.c_uint),] )

glutSetupVideoResizing = _rpythonic_function_(		"glutSetupVideoResizing", ctypes.c_void_p, [] )

glutStopVideoResizing = _rpythonic_function_(		"glutStopVideoResizing", ctypes.c_void_p, [] )

glutVideoResize = _rpythonic_function_(		"glutVideoResize", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glutVideoPan = _rpythonic_function_(		"glutVideoPan", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glutSetColor = _rpythonic_function_(		"glutSetColor", ctypes.c_void_p, [
	("color",		ctypes.c_int),
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),] )

glutGetColor = _rpythonic_function_(		"glutGetColor", ctypes.c_float, [
	("color",		ctypes.c_int),
	("component",		ctypes.c_int),] )

glutCopyColormap = _rpythonic_function_(		"glutCopyColormap", ctypes.c_void_p, [
	("window",		ctypes.c_int),] )

glutIgnoreKeyRepeat = _rpythonic_function_(		"glutIgnoreKeyRepeat", ctypes.c_void_p, [
	("ignore",		ctypes.c_int),] )

glutSetKeyRepeat = _rpythonic_function_(		"glutSetKeyRepeat", ctypes.c_void_p, [
	("repeatMode",		ctypes.c_int),] )

glutForceJoystickFunc = _rpythonic_function_(		"glutForceJoystickFunc", ctypes.c_void_p, [] )

glutExtensionSupported = _rpythonic_function_(		"glutExtensionSupported", ctypes.c_int, [
	("extension",		ctypes.POINTER(ctypes.c_char)),] )

glutReportErrors = _rpythonic_function_(		"glutReportErrors", ctypes.c_void_p, [] )

atof = _rpythonic_function_(		"atof", ctypes.c_double, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),] )

atoi = _rpythonic_function_(		"atoi", ctypes.c_int, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),] )

atol = _rpythonic_function_(		"atol", ctypes.c_int64, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),] )

atoll = _rpythonic_function_(		"atoll", ctypes.c_longlong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),] )

strtod = _rpythonic_function_(		"strtod", ctypes.c_double, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),] )

strtof = _rpythonic_function_(		"strtof", ctypes.c_float, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),] )

strtold = _rpythonic_function_(		"strtold", ctypes.c_double, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),] )

strtol = _rpythonic_function_(		"strtol", ctypes.c_int64, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

strtoul = _rpythonic_function_(		"strtoul", ctypes.c_uint64, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

strtoq = _rpythonic_function_(		"strtoq", ctypes.c_longlong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

strtouq = _rpythonic_function_(		"strtouq", ctypes.c_ulonglong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

strtoll = _rpythonic_function_(		"strtoll", ctypes.c_longlong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

strtoull = _rpythonic_function_(		"strtoull", ctypes.c_ulonglong, [
	("__nptr",		ctypes.POINTER(ctypes.c_char)),
	("__endptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__base",		ctypes.c_int),] )

l64a = _rpythonic_function_(		"l64a", ctypes.POINTER(ctypes.c_char), [
	("__n",		ctypes.c_int64),] )

a64l = _rpythonic_function_(		"a64l", ctypes.c_int64, [
	("__s",		ctypes.POINTER(ctypes.c_char)),] )

select = _rpythonic_function_(		"select", ctypes.c_int, [
	("__nfds",		ctypes.c_int),
	("__readfds",		ctypes.POINTER(fd_set)),
	("__writefds",		ctypes.POINTER(fd_set)),
	("__exceptfds",		ctypes.POINTER(fd_set)),
	("__timeout",		ctypes.POINTER(timeval)),] )

pselect = _rpythonic_function_(		"pselect", ctypes.c_int, [
	("__nfds",		ctypes.c_int),
	("__readfds",		ctypes.POINTER(fd_set)),
	("__writefds",		ctypes.POINTER(fd_set)),
	("__exceptfds",		ctypes.POINTER(fd_set)),
	("__timeout",		ctypes.POINTER(timespec)),
	("__sigmask",		ctypes.POINTER(__sigset_t)),] )

gnu_dev_major = _rpythonic_function_(		"gnu_dev_major", ctypes.c_uint, [
	("__dev",		ctypes.c_ulonglong),] )

gnu_dev_minor = _rpythonic_function_(		"gnu_dev_minor", ctypes.c_uint, [
	("__dev",		ctypes.c_ulonglong),] )

gnu_dev_makedev = _rpythonic_function_(		"gnu_dev_makedev", ctypes.c_ulonglong, [
	("__major",		ctypes.c_uint),
	("__minor",		ctypes.c_uint),] )

random = _rpythonic_function_(		"random", ctypes.c_int64, [] )

srandom = _rpythonic_function_(		"srandom", ctypes.c_void_p, [
	("__seed",		ctypes.c_uint),] )

initstate = _rpythonic_function_(		"initstate", ctypes.POINTER(ctypes.c_char), [
	("__seed",		ctypes.c_uint),
	("__statebuf",		ctypes.POINTER(ctypes.c_char)),
	("__statelen",		ctypes.c_uint),] )

setstate = _rpythonic_function_(		"setstate", ctypes.POINTER(ctypes.c_char), [
	("__statebuf",		ctypes.POINTER(ctypes.c_char)),] )

random_r = _rpythonic_function_(		"random_r", ctypes.c_int, [
	("__buf",		ctypes.POINTER(random_data)),
	("__result",		ctypes.POINTER(ctypes.c_int32)),] )

srandom_r = _rpythonic_function_(		"srandom_r", ctypes.c_int, [
	("__seed",		ctypes.c_uint),
	("__buf",		ctypes.POINTER(random_data)),] )

initstate_r = _rpythonic_function_(		"initstate_r", ctypes.c_int, [
	("__seed",		ctypes.c_uint),
	("__statebuf",		ctypes.POINTER(ctypes.c_char)),
	("__statelen",		ctypes.c_uint),
	("__buf",		ctypes.POINTER(random_data)),] )

setstate_r = _rpythonic_function_(		"setstate_r", ctypes.c_int, [
	("__statebuf",		ctypes.POINTER(ctypes.c_char)),
	("__buf",		ctypes.POINTER(random_data)),] )

rand = _rpythonic_function_(		"rand", ctypes.c_int, [] )

srand = _rpythonic_function_(		"srand", ctypes.c_void_p, [
	("__seed",		ctypes.c_uint),] )

rand_r = _rpythonic_function_(		"rand_r", ctypes.c_int, [
	("__seed",		ctypes.POINTER(ctypes.c_uint)),] )

drand48 = _rpythonic_function_(		"drand48", ctypes.c_double, [] )

erand48 = _rpythonic_function_(		"erand48", ctypes.c_double, [
	("__xsubi",		( ctypes.c_uint16 * 3 )),] )

lrand48 = _rpythonic_function_(		"lrand48", ctypes.c_int64, [] )

nrand48 = _rpythonic_function_(		"nrand48", ctypes.c_int64, [
	("__xsubi",		( ctypes.c_uint16 * 3 )),] )

mrand48 = _rpythonic_function_(		"mrand48", ctypes.c_int64, [] )

jrand48 = _rpythonic_function_(		"jrand48", ctypes.c_int64, [
	("__xsubi",		( ctypes.c_uint16 * 3 )),] )

srand48 = _rpythonic_function_(		"srand48", ctypes.c_void_p, [
	("__seedval",		ctypes.c_int64),] )

seed48 = _rpythonic_function_(		"seed48", ctypes.POINTER(ctypes.c_uint16), [
	("__seed16v",		( ctypes.c_uint16 * 3 )),] )

lcong48 = _rpythonic_function_(		"lcong48", ctypes.c_void_p, [
	("__param",		( ctypes.c_uint16 * 7 )),] )

drand48_r = _rpythonic_function_(		"drand48_r", ctypes.c_int, [
	("__buffer",		ctypes.POINTER(drand48_data)),
	("__result",		ctypes.POINTER(ctypes.c_double)),] )

erand48_r = _rpythonic_function_(		"erand48_r", ctypes.c_int, [
	("__xsubi",		( ctypes.c_uint16 * 3 )),
	("__buffer",		ctypes.POINTER(drand48_data)),
	("__result",		ctypes.POINTER(ctypes.c_double)),] )

lrand48_r = _rpythonic_function_(		"lrand48_r", ctypes.c_int, [
	("__buffer",		ctypes.POINTER(drand48_data)),
	("__result",		ctypes.POINTER(ctypes.c_int64)),] )

nrand48_r = _rpythonic_function_(		"nrand48_r", ctypes.c_int, [
	("__xsubi",		( ctypes.c_uint16 * 3 )),
	("__buffer",		ctypes.POINTER(drand48_data)),
	("__result",		ctypes.POINTER(ctypes.c_int64)),] )

mrand48_r = _rpythonic_function_(		"mrand48_r", ctypes.c_int, [
	("__buffer",		ctypes.POINTER(drand48_data)),
	("__result",		ctypes.POINTER(ctypes.c_int64)),] )

jrand48_r = _rpythonic_function_(		"jrand48_r", ctypes.c_int, [
	("__xsubi",		( ctypes.c_uint16 * 3 )),
	("__buffer",		ctypes.POINTER(drand48_data)),
	("__result",		ctypes.POINTER(ctypes.c_int64)),] )

srand48_r = _rpythonic_function_(		"srand48_r", ctypes.c_int, [
	("__seedval",		ctypes.c_int64),
	("__buffer",		ctypes.POINTER(drand48_data)),] )

seed48_r = _rpythonic_function_(		"seed48_r", ctypes.c_int, [
	("__seed16v",		( ctypes.c_uint16 * 3 )),
	("__buffer",		ctypes.POINTER(drand48_data)),] )

lcong48_r = _rpythonic_function_(		"lcong48_r", ctypes.c_int, [
	("__param",		( ctypes.c_uint16 * 7 )),
	("__buffer",		ctypes.POINTER(drand48_data)),] )

malloc = _rpythonic_function_(		"malloc", ctypes.POINTER(ctypes.c_void_p), [
	("__size",		ctypes.c_uint),] )

calloc = _rpythonic_function_(		"calloc", ctypes.POINTER(ctypes.c_void_p), [
	("__nmemb",		ctypes.c_uint),
	("__size",		ctypes.c_uint),] )

realloc = _rpythonic_function_(		"realloc", ctypes.POINTER(ctypes.c_void_p), [
	("__ptr",		ctypes.POINTER(ctypes.c_void_p)),
	("__size",		ctypes.c_uint),] )

free = _rpythonic_function_(		"free", ctypes.c_void_p, [("__ptr",		ctypes.c_void_p)] )

cfree = _rpythonic_function_(		"cfree", ctypes.c_void_p, [("__ptr",		ctypes.c_void_p)] )

alloca = _rpythonic_function_(		"alloca", ctypes.POINTER(ctypes.c_void_p), [
	("__size",		ctypes.c_uint),] )

valloc = _rpythonic_function_(		"valloc", ctypes.POINTER(ctypes.c_void_p), [
	("__size",		ctypes.c_uint),] )

posix_memalign = _rpythonic_function_(		"posix_memalign", ctypes.c_int, [
	("__memptr",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("__alignment",		ctypes.c_uint),
	("__size",		ctypes.c_uint),] )

abort = _rpythonic_function_(		"abort", ctypes.c_void_p, [] )

atexit = _rpythonic_function_(		"atexit", ctypes.c_int, [
	("__func",		ctypes.c_void_p),] )

on_exit = _rpythonic_function_(		"on_exit", ctypes.c_int, [
	("__func",		ctypes.c_void_p),
	("__arg",		ctypes.POINTER(ctypes.c_void_p)),] )

exit = _rpythonic_function_(		"exit", ctypes.c_void_p, [
	("__status",		ctypes.c_int),] )

_Exit = _rpythonic_function_(		"_Exit", ctypes.c_void_p, [
	("__status",		ctypes.c_int),] )

getenv = _rpythonic_function_(		"getenv", ctypes.POINTER(ctypes.c_char), [
	("__name",		ctypes.POINTER(ctypes.c_char)),] )

putenv = _rpythonic_function_(		"putenv", ctypes.c_int, [
	("__string",		ctypes.POINTER(ctypes.c_char)),] )

setenv = _rpythonic_function_(		"setenv", ctypes.c_int, [
	("__name",		ctypes.POINTER(ctypes.c_char)),
	("__value",		ctypes.POINTER(ctypes.c_char)),
	("__replace",		ctypes.c_int),] )

unsetenv = _rpythonic_function_(		"unsetenv", ctypes.c_int, [
	("__name",		ctypes.POINTER(ctypes.c_char)),] )

clearenv = _rpythonic_function_(		"clearenv", ctypes.c_int, [] )

mktemp = _rpythonic_function_(		"mktemp", ctypes.POINTER(ctypes.c_char), [
	("__template",		ctypes.POINTER(ctypes.c_char)),] )

mkstemp = _rpythonic_function_(		"mkstemp", ctypes.c_int, [
	("__template",		ctypes.POINTER(ctypes.c_char)),] )

mkstemps = _rpythonic_function_(		"mkstemps", ctypes.c_int, [
	("__template",		ctypes.POINTER(ctypes.c_char)),
	("__suffixlen",		ctypes.c_int),] )

mkdtemp = _rpythonic_function_(		"mkdtemp", ctypes.POINTER(ctypes.c_char), [
	("__template",		ctypes.POINTER(ctypes.c_char)),] )

system = _rpythonic_function_(		"system", ctypes.c_int, [
	("__command",		ctypes.POINTER(ctypes.c_char)),] )

realpath = _rpythonic_function_(		"realpath", ctypes.POINTER(ctypes.c_char), [
	("__name",		ctypes.POINTER(ctypes.c_char)),
	("__resolved",		ctypes.POINTER(ctypes.c_char)),] )

bsearch = _rpythonic_function_(		"bsearch", ctypes.POINTER(ctypes.c_void_p), [
	("__key",		ctypes.POINTER(ctypes.c_void_p)),
	("__base",		ctypes.POINTER(ctypes.c_void_p)),
	("__nmemb",		ctypes.c_uint),
	("__size",		ctypes.c_uint),
	("__compar",		ctypes.CFUNCTYPE(ctypes.c_int, ctypes.POINTER(ctypes.c_void_p),ctypes.POINTER(ctypes.c_void_p),)),] )

qsort = _rpythonic_function_(		"qsort", ctypes.c_void_p, [
	("__base",		ctypes.POINTER(ctypes.c_void_p)),
	("__nmemb",		ctypes.c_uint),
	("__size",		ctypes.c_uint),
	("__compar",		ctypes.CFUNCTYPE(ctypes.c_int, ctypes.POINTER(ctypes.c_void_p),ctypes.POINTER(ctypes.c_void_p),)),] )

abs = _rpythonic_function_(		"abs", ctypes.c_int, [
	("__x",		ctypes.c_int),] )

labs = _rpythonic_function_(		"labs", ctypes.c_int64, [
	("__x",		ctypes.c_int64),] )

llabs = _rpythonic_function_(		"llabs", ctypes.c_longlong, [
	("__x",		ctypes.c_longlong),] )

div = _rpythonic_function_(		"div", div_t, [
	("__numer",		ctypes.c_int),
	("__denom",		ctypes.c_int),] )

ldiv = _rpythonic_function_(		"ldiv", ldiv_t, [
	("__numer",		ctypes.c_int64),
	("__denom",		ctypes.c_int64),] )

lldiv = _rpythonic_function_(		"lldiv", lldiv_t, [
	("__numer",		ctypes.c_longlong),
	("__denom",		ctypes.c_longlong),] )

ecvt = _rpythonic_function_(		"ecvt", ctypes.POINTER(ctypes.c_char), [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),] )

fcvt = _rpythonic_function_(		"fcvt", ctypes.POINTER(ctypes.c_char), [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),] )

gcvt = _rpythonic_function_(		"gcvt", ctypes.POINTER(ctypes.c_char), [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__buf",		ctypes.POINTER(ctypes.c_char)),] )

qecvt = _rpythonic_function_(		"qecvt", ctypes.POINTER(ctypes.c_char), [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),] )

qfcvt = _rpythonic_function_(		"qfcvt", ctypes.POINTER(ctypes.c_char), [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),] )

qgcvt = _rpythonic_function_(		"qgcvt", ctypes.POINTER(ctypes.c_char), [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__buf",		ctypes.POINTER(ctypes.c_char)),] )

ecvt_r = _rpythonic_function_(		"ecvt_r", ctypes.c_int, [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),
	("__buf",		ctypes.POINTER(ctypes.c_char)),
	("__len",		ctypes.c_uint),] )

fcvt_r = _rpythonic_function_(		"fcvt_r", ctypes.c_int, [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),
	("__buf",		ctypes.POINTER(ctypes.c_char)),
	("__len",		ctypes.c_uint),] )

qecvt_r = _rpythonic_function_(		"qecvt_r", ctypes.c_int, [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),
	("__buf",		ctypes.POINTER(ctypes.c_char)),
	("__len",		ctypes.c_uint),] )

qfcvt_r = _rpythonic_function_(		"qfcvt_r", ctypes.c_int, [
	("__value",		ctypes.c_double),
	("__ndigit",		ctypes.c_int),
	("__decpt",		ctypes.POINTER(ctypes.c_int)),
	("__sign",		ctypes.POINTER(ctypes.c_int)),
	("__buf",		ctypes.POINTER(ctypes.c_char)),
	("__len",		ctypes.c_uint),] )

mblen = _rpythonic_function_(		"mblen", ctypes.c_int, [
	("__s",		ctypes.POINTER(ctypes.c_char)),
	("__n",		ctypes.c_uint),] )

mbtowc = _rpythonic_function_(		"mbtowc", ctypes.c_int, [
	("__pwc",		ctypes.POINTER(ctypes.c_int)),
	("__s",		ctypes.POINTER(ctypes.c_char)),
	("__n",		ctypes.c_uint),] )

wctomb = _rpythonic_function_(		"wctomb", ctypes.c_int, [
	("__s",		ctypes.POINTER(ctypes.c_char)),
	("__wchar",		ctypes.c_int),] )

mbstowcs = _rpythonic_function_(		"mbstowcs", ctypes.c_uint, [
	("__pwcs",		ctypes.POINTER(ctypes.c_int)),
	("__s",		ctypes.POINTER(ctypes.c_char)),
	("__n",		ctypes.c_uint),] )

wcstombs = _rpythonic_function_(		"wcstombs", ctypes.c_uint, [
	("__s",		ctypes.POINTER(ctypes.c_char)),
	("__pwcs",		ctypes.POINTER(ctypes.c_int)),
	("__n",		ctypes.c_uint),] )

rpmatch = _rpythonic_function_(		"rpmatch", ctypes.c_int, [
	("__response",		ctypes.POINTER(ctypes.c_char)),] )

getsubopt = _rpythonic_function_(		"getsubopt", ctypes.c_int, [
	("__optionp",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("__tokens",		ctypes.POINTER(ctypes.c_char)),
	("__valuep",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),] )

getloadavg = _rpythonic_function_(		"getloadavg", ctypes.c_int, [
	("__loadavg",		ctypes.c_double),
	("__nelem",		ctypes.c_int),] )

PFNGLVERTEXWEIGHTFVEXTPROC = _rpythonic_function_(		"PFNGLVERTEXWEIGHTFVEXTPROC", ctypes.c_void_p, [
	("weight",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXWEIGHTPOINTEREXTPROC = _rpythonic_function_(		"PFNGLVERTEXWEIGHTPOINTEREXTPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLFLUSHVERTEXARRAYRANGENVPROC = _rpythonic_function_(		"PFNGLFLUSHVERTEXARRAYRANGENVPROC", ctypes.c_void_p, [] )

PFNGLVERTEXARRAYRANGENVPROC = _rpythonic_function_(		"PFNGLVERTEXARRAYRANGENVPROC", ctypes.c_void_p, [
	("length",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMBINERPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLCOMBINERPARAMETERFVNVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOMBINERPARAMETERFNVPROC = _rpythonic_function_(		"PFNGLCOMBINERPARAMETERFNVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLCOMBINERPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLCOMBINERPARAMETERIVNVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOMBINERPARAMETERINVPROC = _rpythonic_function_(		"PFNGLCOMBINERPARAMETERINVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLCOMBINERINPUTNVPROC = _rpythonic_function_(		"PFNGLCOMBINERINPUTNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("portion",		ctypes.c_uint),
	("variable",		ctypes.c_uint),
	("input",		ctypes.c_uint),
	("mapping",		ctypes.c_uint),
	("componentUsage",		ctypes.c_uint),] )

PFNGLCOMBINEROUTPUTNVPROC = _rpythonic_function_(		"PFNGLCOMBINEROUTPUTNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("portion",		ctypes.c_uint),
	("abOutput",		ctypes.c_uint),
	("cdOutput",		ctypes.c_uint),
	("sumOutput",		ctypes.c_uint),
	("scale",		ctypes.c_uint),
	("bias",		ctypes.c_uint),
	("abDotProduct",		ctypes.c_ubyte),
	("cdDotProduct",		ctypes.c_ubyte),
	("muxSum",		ctypes.c_ubyte),] )

PFNGLFINALCOMBINERINPUTNVPROC = _rpythonic_function_(		"PFNGLFINALCOMBINERINPUTNVPROC", ctypes.c_void_p, [
	("variable",		ctypes.c_uint),
	("input",		ctypes.c_uint),
	("mapping",		ctypes.c_uint),
	("componentUsage",		ctypes.c_uint),] )

PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("portion",		ctypes.c_uint),
	("variable",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("portion",		ctypes.c_uint),
	("variable",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("portion",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("portion",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC", ctypes.c_void_p, [
	("variable",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC", ctypes.c_void_p, [
	("variable",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLRESIZEBUFFERSMESAPROC = _rpythonic_function_(		"PFNGLRESIZEBUFFERSMESAPROC", ctypes.c_void_p, [] )

PFNGLWINDOWPOS2DMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2DMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLWINDOWPOS2DVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2DVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS2FMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2FMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLWINDOWPOS2FVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2FVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS2IMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2IMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

PFNGLWINDOWPOS2IVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2IVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS2SMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2SMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLWINDOWPOS2SVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2SVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLWINDOWPOS3DMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3DMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLWINDOWPOS3DVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3DVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS3FMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3FMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLWINDOWPOS3FVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3FVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS3IMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3IMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

PFNGLWINDOWPOS3IVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3IVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS3SMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3SMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLWINDOWPOS3SVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3SVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLWINDOWPOS4DMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4DMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLWINDOWPOS4DVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4DVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS4FMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4FMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLWINDOWPOS4FVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4FVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS4IMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4IMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLWINDOWPOS4IVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4IVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS4SMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4SMESAPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

PFNGLWINDOWPOS4SVMESAPROC = _rpythonic_function_(		"PFNGLWINDOWPOS4SVMESAPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTIMODEDRAWARRAYSIBMPROC = _rpythonic_function_(		"PFNGLMULTIMODEDRAWARRAYSIBMPROC", ctypes.c_void_p, [
	("mode",		ctypes.POINTER(ctypes.c_uint)),
	("first",		ctypes.POINTER(ctypes.c_int)),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("primcount",		ctypes.c_int),
	("modestride",		ctypes.c_int),] )

PFNGLMULTIMODEDRAWELEMENTSIBMPROC = _rpythonic_function_(		"PFNGLMULTIMODEDRAWELEMENTSIBMPROC", ctypes.c_void_p, [
	("mode",		ctypes.POINTER(ctypes.c_uint)),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("primcount",		ctypes.c_int),
	("modestride",		ctypes.c_int),] )

PFNGLCOLORPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLCOLORPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLSECONDARYCOLORPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLORPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLEDGEFLAGPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLEDGEFLAGPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_ubyte))),
	("ptrstride",		ctypes.c_int),] )

PFNGLFOGCOORDPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLFOGCOORDPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLINDEXPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLINDEXPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLNORMALPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLNORMALPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLTEXCOORDPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLTEXCOORDPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLVERTEXPOINTERLISTIBMPROC = _rpythonic_function_(		"PFNGLVERTEXPOINTERLISTIBMPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("ptrstride",		ctypes.c_int),] )

PFNGLTBUFFERMASK3DFXPROC = _rpythonic_function_(		"PFNGLTBUFFERMASK3DFXPROC", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

PFNGLSAMPLEMASKEXTPROC = _rpythonic_function_(		"PFNGLSAMPLEMASKEXTPROC", ctypes.c_void_p, [
	("value",		ctypes.c_float),
	("invert",		ctypes.c_ubyte),] )

PFNGLSAMPLEPATTERNEXTPROC = _rpythonic_function_(		"PFNGLSAMPLEPATTERNEXTPROC", ctypes.c_void_p, [
	("pattern",		ctypes.c_uint),] )

PFNGLTEXTURECOLORMASKSGISPROC = _rpythonic_function_(		"PFNGLTEXTURECOLORMASKSGISPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ubyte),
	("green",		ctypes.c_ubyte),
	("blue",		ctypes.c_ubyte),
	("alpha",		ctypes.c_ubyte),] )

PFNGLIGLOOINTERFACESGIXPROC = _rpythonic_function_(		"PFNGLIGLOOINTERFACESGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLDELETEFENCESNVPROC = _rpythonic_function_(		"PFNGLDELETEFENCESNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("fences",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENFENCESNVPROC = _rpythonic_function_(		"PFNGLGENFENCESNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("fences",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISFENCENVPROC = _rpythonic_function_(		"PFNGLISFENCENVPROC", ctypes.c_ubyte, [
	("fence",		ctypes.c_uint),] )

PFNGLTESTFENCENVPROC = _rpythonic_function_(		"PFNGLTESTFENCENVPROC", ctypes.c_ubyte, [
	("fence",		ctypes.c_uint),] )

PFNGLGETFENCEIVNVPROC = _rpythonic_function_(		"PFNGLGETFENCEIVNVPROC", ctypes.c_void_p, [
	("fence",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLFINISHFENCENVPROC = _rpythonic_function_(		"PFNGLFINISHFENCENVPROC", ctypes.c_void_p, [
	("fence",		ctypes.c_uint),] )

PFNGLSETFENCENVPROC = _rpythonic_function_(		"PFNGLSETFENCENVPROC", ctypes.c_void_p, [
	("fence",		ctypes.c_uint),
	("condition",		ctypes.c_uint),] )

PFNGLMAPCONTROLPOINTSNVPROC = _rpythonic_function_(		"PFNGLMAPCONTROLPOINTSNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("ustride",		ctypes.c_int),
	("vstride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("packed",		ctypes.c_ubyte),
	("points",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMAPPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLMAPPARAMETERIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMAPPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLMAPPARAMETERFVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMAPCONTROLPOINTSNVPROC = _rpythonic_function_(		"PFNGLGETMAPCONTROLPOINTSNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("ustride",		ctypes.c_int),
	("vstride",		ctypes.c_int),
	("packed",		ctypes.c_ubyte),
	("points",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETMAPPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLGETMAPPARAMETERIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMAPPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETMAPPARAMETERFVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMAPATTRIBPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLGETMAPATTRIBPARAMETERIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMAPATTRIBPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETMAPATTRIBPARAMETERFVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLEVALMAPSNVPROC = _rpythonic_function_(		"PFNGLEVALMAPSNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLCOMBINERSTAGEPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLCOMBINERSTAGEPARAMETERFVNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC", ctypes.c_void_p, [
	("stage",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLAREPROGRAMSRESIDENTNVPROC = _rpythonic_function_(		"PFNGLAREPROGRAMSRESIDENTNVPROC", ctypes.c_ubyte, [
	("n",		ctypes.c_int),
	("programs",		ctypes.POINTER(ctypes.c_uint)),
	("residences",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLBINDPROGRAMNVPROC = _rpythonic_function_(		"PFNGLBINDPROGRAMNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLDELETEPROGRAMSNVPROC = _rpythonic_function_(		"PFNGLDELETEPROGRAMSNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("programs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLEXECUTEPROGRAMNVPROC = _rpythonic_function_(		"PFNGLEXECUTEPROGRAMNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGENPROGRAMSNVPROC = _rpythonic_function_(		"PFNGLGENPROGRAMSNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("programs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPROGRAMPARAMETERDVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMPARAMETERDVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETPROGRAMPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMPARAMETERFVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETPROGRAMIVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMIVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETPROGRAMSTRINGNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMSTRINGNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("program",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETTRACKMATRIXIVNVPROC = _rpythonic_function_(		"PFNGLGETTRACKMATRIXIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("address",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBDVNVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBDVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORM4DVPROC = _rpythonic_function_(		"PFNGLUNIFORM4DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX2DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX3DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX4DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX2X3DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2X3DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX2X4DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX2X4DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX3X2DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3X2DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX3X4DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX3X4DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX4X2DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4X2DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORMMATRIX4X3DVPROC = _rpythonic_function_(		"PFNGLUNIFORMMATRIX4X3DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETUNIFORMDVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMDVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC = _rpythonic_function_(		"PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("shadertype",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETSUBROUTINEINDEXPROC = _rpythonic_function_(		"PFNGLGETSUBROUTINEINDEXPROC", ctypes.c_uint, [
	("program",		ctypes.c_uint),
	("shadertype",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC = _rpythonic_function_(		"PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("shadertype",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC = _rpythonic_function_(		"PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("shadertype",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufsize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVESUBROUTINENAMEPROC = _rpythonic_function_(		"PFNGLGETACTIVESUBROUTINENAMEPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("shadertype",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufsize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLUNIFORMSUBROUTINESUIVPROC = _rpythonic_function_(		"PFNGLUNIFORMSUBROUTINESUIVPROC", ctypes.c_void_p, [
	("shadertype",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("indices",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETUNIFORMSUBROUTINEUIVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMSUBROUTINEUIVPROC", ctypes.c_void_p, [
	("shadertype",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPROGRAMSTAGEIVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMSTAGEIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("shadertype",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPATCHPARAMETERIPROC = _rpythonic_function_(		"PFNGLPATCHPARAMETERIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("value",		ctypes.c_int),] )

PFNGLPATCHPARAMETERFVPROC = _rpythonic_function_(		"PFNGLPATCHPARAMETERFVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLBINDTRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLBINDTRANSFORMFEEDBACKPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLDELETETRANSFORMFEEDBACKSPROC = _rpythonic_function_(		"PFNGLDELETETRANSFORMFEEDBACKSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENTRANSFORMFEEDBACKSPROC = _rpythonic_function_(		"PFNGLGENTRANSFORMFEEDBACKSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISTRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLISTRANSFORMFEEDBACKPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),] )

PFNGLPAUSETRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLPAUSETRANSFORMFEEDBACKPROC", ctypes.c_void_p, [] )

PFNGLRESUMETRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLRESUMETRANSFORMFEEDBACKPROC", ctypes.c_void_p, [] )

PFNGLDRAWTRANSFORMFEEDBACKPROC = _rpythonic_function_(		"PFNGLDRAWTRANSFORMFEEDBACKPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC = _rpythonic_function_(		"PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),
	("stream",		ctypes.c_uint),] )

PFNGLBEGINQUERYINDEXEDPROC = _rpythonic_function_(		"PFNGLBEGINQUERYINDEXEDPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLENDQUERYINDEXEDPROC = _rpythonic_function_(		"PFNGLENDQUERYINDEXEDPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLGETQUERYINDEXEDIVPROC = _rpythonic_function_(		"PFNGLGETQUERYINDEXEDIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLRELEASESHADERCOMPILERPROC = _rpythonic_function_(		"PFNGLRELEASESHADERCOMPILERPROC", ctypes.c_void_p, [] )

PFNGLSHADERBINARYPROC = _rpythonic_function_(		"PFNGLSHADERBINARYPROC", ctypes.c_void_p, [
	("count",		ctypes.c_int),
	("shaders",		ctypes.POINTER(ctypes.c_uint)),
	("binaryformat",		ctypes.c_uint),
	("binary",		ctypes.POINTER(ctypes.c_void_p)),
	("length",		ctypes.c_int),] )

PFNGLGETSHADERPRECISIONFORMATPROC = _rpythonic_function_(		"PFNGLGETSHADERPRECISIONFORMATPROC", ctypes.c_void_p, [
	("shadertype",		ctypes.c_uint),
	("precisiontype",		ctypes.c_uint),
	("C_range",		ctypes.POINTER(ctypes.c_int)),
	("precision",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLDEPTHRANGEFPROC = _rpythonic_function_(		"PFNGLDEPTHRANGEFPROC", ctypes.c_void_p, [
	("n",		ctypes.c_float),
	("f",		ctypes.c_float),] )

PFNGLCLEARDEPTHFPROC = _rpythonic_function_(		"PFNGLCLEARDEPTHFPROC", ctypes.c_void_p, [
	("d",		ctypes.c_float),] )

PFNGLGETPROGRAMBINARYPROC = _rpythonic_function_(		"PFNGLGETPROGRAMBINARYPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("binaryFormat",		ctypes.POINTER(ctypes.c_uint)),
	("binary",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLPROGRAMBINARYPROC = _rpythonic_function_(		"PFNGLPROGRAMBINARYPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("binaryFormat",		ctypes.c_uint),
	("binary",		ctypes.POINTER(ctypes.c_void_p)),
	("length",		ctypes.c_int),] )

PFNGLPROGRAMPARAMETERIPROC = _rpythonic_function_(		"PFNGLPROGRAMPARAMETERIPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("value",		ctypes.c_int),] )

PFNGLUSEPROGRAMSTAGESPROC = _rpythonic_function_(		"PFNGLUSEPROGRAMSTAGESPROC", ctypes.c_void_p, [
	("pipeline",		ctypes.c_uint),
	("stages",		ctypes.c_uint),
	("program",		ctypes.c_uint),] )

PFNGLACTIVESHADERPROGRAMPROC = _rpythonic_function_(		"PFNGLACTIVESHADERPROGRAMPROC", ctypes.c_void_p, [
	("pipeline",		ctypes.c_uint),
	("program",		ctypes.c_uint),] )

PFNGLCREATESHADERPROGRAMVPROC = _rpythonic_function_(		"PFNGLCREATESHADERPROGRAMVPROC", ctypes.c_uint, [
	("C_type",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("strings",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),] )

PFNGLBINDPROGRAMPIPELINEPROC = _rpythonic_function_(		"PFNGLBINDPROGRAMPIPELINEPROC", ctypes.c_void_p, [
	("pipeline",		ctypes.c_uint),] )

PFNGLDELETEPROGRAMPIPELINESPROC = _rpythonic_function_(		"PFNGLDELETEPROGRAMPIPELINESPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("pipelines",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENPROGRAMPIPELINESPROC = _rpythonic_function_(		"PFNGLGENPROGRAMPIPELINESPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("pipelines",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISPROGRAMPIPELINEPROC = _rpythonic_function_(		"PFNGLISPROGRAMPIPELINEPROC", ctypes.c_ubyte, [
	("pipeline",		ctypes.c_uint),] )

PFNGLGETPROGRAMPIPELINEIVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMPIPELINEIVPROC", ctypes.c_void_p, [
	("pipeline",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM1IPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1IPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM1IVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1IVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM1FPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1FPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM1FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM1DPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1DPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM1DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM1UIPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1UIPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM1UIVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1UIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM2IPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2IPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM2IVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2IVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM2FPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2FPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM2FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM2DPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2DPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_double),
	("v1",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM2DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM2UIPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2UIPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM2UIVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2UIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM3IPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3IPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM3IVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3IVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM3FPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3FPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM3FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM3DPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3DPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_double),
	("v1",		ctypes.c_double),
	("v2",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM3DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM3UIPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3UIPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM3UIVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3UIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM4IPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4IPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),
	("v3",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM4IVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4IVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM4FPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4FPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("v3",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM4FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM4DPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4DPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_double),
	("v1",		ctypes.c_double),
	("v2",		ctypes.c_double),
	("v3",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM4DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM4UIPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4UIPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),
	("v3",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM4UIVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4UIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORMMATRIX2FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX3FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX4FVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4FVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX2DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX3DVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3DVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVARIANTARRAYOBJECTATIPROC = _rpythonic_function_(		"PFNGLVARIANTARRAYOBJECTATIPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_uint),] )

PFNGLGETVARIANTARRAYOBJECTFVATIPROC = _rpythonic_function_(		"PFNGLGETVARIANTARRAYOBJECTFVATIPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVARIANTARRAYOBJECTIVATIPROC = _rpythonic_function_(		"PFNGLGETVARIANTARRAYOBJECTIVATIPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLBEGINVERTEXSHADEREXTPROC = _rpythonic_function_(		"PFNGLBEGINVERTEXSHADEREXTPROC", ctypes.c_void_p, [] )

PFNGLENDVERTEXSHADEREXTPROC = _rpythonic_function_(		"PFNGLENDVERTEXSHADEREXTPROC", ctypes.c_void_p, [] )

PFNGLBINDVERTEXSHADEREXTPROC = _rpythonic_function_(		"PFNGLBINDVERTEXSHADEREXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLGENVERTEXSHADERSEXTPROC = _rpythonic_function_(		"PFNGLGENVERTEXSHADERSEXTPROC", ctypes.c_uint, [
	("C_range",		ctypes.c_uint),] )

PFNGLDELETEVERTEXSHADEREXTPROC = _rpythonic_function_(		"PFNGLDELETEVERTEXSHADEREXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLSHADEROP1EXTPROC = _rpythonic_function_(		"PFNGLSHADEROP1EXTPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("res",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),] )

PFNGLSHADEROP2EXTPROC = _rpythonic_function_(		"PFNGLSHADEROP2EXTPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("res",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg2",		ctypes.c_uint),] )

PFNGLSHADEROP3EXTPROC = _rpythonic_function_(		"PFNGLSHADEROP3EXTPROC", ctypes.c_void_p, [
	("op",		ctypes.c_uint),
	("res",		ctypes.c_uint),
	("arg1",		ctypes.c_uint),
	("arg2",		ctypes.c_uint),
	("arg3",		ctypes.c_uint),] )

PFNGLSWIZZLEEXTPROC = _rpythonic_function_(		"PFNGLSWIZZLEEXTPROC", ctypes.c_void_p, [
	("res",		ctypes.c_uint),
	("C_in",		ctypes.c_uint),
	("outX",		ctypes.c_uint),
	("outY",		ctypes.c_uint),
	("outZ",		ctypes.c_uint),
	("outW",		ctypes.c_uint),] )

PFNGLWRITEMASKEXTPROC = _rpythonic_function_(		"PFNGLWRITEMASKEXTPROC", ctypes.c_void_p, [
	("res",		ctypes.c_uint),
	("C_in",		ctypes.c_uint),
	("outX",		ctypes.c_uint),
	("outY",		ctypes.c_uint),
	("outZ",		ctypes.c_uint),
	("outW",		ctypes.c_uint),] )

PFNGLINSERTCOMPONENTEXTPROC = _rpythonic_function_(		"PFNGLINSERTCOMPONENTEXTPROC", ctypes.c_void_p, [
	("res",		ctypes.c_uint),
	("src",		ctypes.c_uint),
	("num",		ctypes.c_uint),] )

PFNGLEXTRACTCOMPONENTEXTPROC = _rpythonic_function_(		"PFNGLEXTRACTCOMPONENTEXTPROC", ctypes.c_void_p, [
	("res",		ctypes.c_uint),
	("src",		ctypes.c_uint),
	("num",		ctypes.c_uint),] )

PFNGLGENSYMBOLSEXTPROC = _rpythonic_function_(		"PFNGLGENSYMBOLSEXTPROC", ctypes.c_uint, [
	("datatype",		ctypes.c_uint),
	("storagetype",		ctypes.c_uint),
	("C_range",		ctypes.c_uint),
	("components",		ctypes.c_uint),] )

PFNGLSETINVARIANTEXTPROC = _rpythonic_function_(		"PFNGLSETINVARIANTEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLSETLOCALCONSTANTEXTPROC = _rpythonic_function_(		"PFNGLSETLOCALCONSTANTEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLVARIANTBVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTBVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVARIANTSVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTSVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVARIANTIVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTIVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVARIANTFVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTFVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVARIANTDVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTDVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVARIANTUBVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTUBVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVARIANTUSVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTUSVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVARIANTUIVEXTPROC = _rpythonic_function_(		"PFNGLVARIANTUIVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVARIANTPOINTEREXTPROC = _rpythonic_function_(		"PFNGLVARIANTPOINTEREXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_uint),
	("addr",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLENABLEVARIANTCLIENTSTATEEXTPROC = _rpythonic_function_(		"PFNGLENABLEVARIANTCLIENTSTATEEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC = _rpythonic_function_(		"PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLBINDLIGHTPARAMETEREXTPROC = _rpythonic_function_(		"PFNGLBINDLIGHTPARAMETEREXTPROC", ctypes.c_uint, [
	("light",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLBINDMATERIALPARAMETEREXTPROC = _rpythonic_function_(		"PFNGLBINDMATERIALPARAMETEREXTPROC", ctypes.c_uint, [
	("face",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLBINDTEXGENPARAMETEREXTPROC = _rpythonic_function_(		"PFNGLBINDTEXGENPARAMETEREXTPROC", ctypes.c_uint, [
	("unit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLBINDTEXTUREUNITPARAMETEREXTPROC = _rpythonic_function_(		"PFNGLBINDTEXTUREUNITPARAMETEREXTPROC", ctypes.c_uint, [
	("unit",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLBINDPARAMETEREXTPROC = _rpythonic_function_(		"PFNGLBINDPARAMETEREXTPROC", ctypes.c_uint, [
	("value",		ctypes.c_uint),] )

PFNGLISVARIANTENABLEDEXTPROC = _rpythonic_function_(		"PFNGLISVARIANTENABLEDEXTPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),
	("cap",		ctypes.c_uint),] )

PFNGLGETVARIANTBOOLEANVEXTPROC = _rpythonic_function_(		"PFNGLGETVARIANTBOOLEANVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETVARIANTINTEGERVEXTPROC = _rpythonic_function_(		"PFNGLGETVARIANTINTEGERVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVARIANTFLOATVEXTPROC = _rpythonic_function_(		"PFNGLGETVARIANTFLOATVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVARIANTPOINTERVEXTPROC = _rpythonic_function_(		"PFNGLGETVARIANTPOINTERVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLGETINVARIANTBOOLEANVEXTPROC = _rpythonic_function_(		"PFNGLGETINVARIANTBOOLEANVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETINVARIANTINTEGERVEXTPROC = _rpythonic_function_(		"PFNGLGETINVARIANTINTEGERVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETINVARIANTFLOATVEXTPROC = _rpythonic_function_(		"PFNGLGETINVARIANTFLOATVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC = _rpythonic_function_(		"PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETLOCALCONSTANTINTEGERVEXTPROC = _rpythonic_function_(		"PFNGLGETLOCALCONSTANTINTEGERVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETLOCALCONSTANTFLOATVEXTPROC = _rpythonic_function_(		"PFNGLGETLOCALCONSTANTFLOATVEXTPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("value",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXSTREAM1SATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1SATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_short),] )

PFNGLVERTEXSTREAM1SVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1SVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXSTREAM1IATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1IATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_int),] )

PFNGLVERTEXSTREAM1IVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1IVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXSTREAM1FATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1FATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_float),] )

PFNGLVERTEXSTREAM1FVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1FVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXSTREAM1DATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1DATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_double),] )

PFNGLVERTEXSTREAM1DVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM1DVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXSTREAM2SATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2SATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLVERTEXSTREAM2SVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2SVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXSTREAM2IATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2IATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

PFNGLVERTEXSTREAM2IVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2IVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXSTREAM2FATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2FATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLVERTEXSTREAM2FVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2FVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXSTREAM2DATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2DATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLVERTEXSTREAM2DVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM2DVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXSTREAM3SATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3SATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLVERTEXSTREAM3SVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3SVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXSTREAM3IATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3IATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

PFNGLVERTEXSTREAM3IVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3IVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXSTREAM3FATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3FATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLVERTEXSTREAM3FVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3FVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXSTREAM3DATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3DATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLVERTEXSTREAM3DVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM3DVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXSTREAM4SATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4SATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

PFNGLVERTEXSTREAM4SVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4SVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXSTREAM4IATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4IATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLVERTEXSTREAM4IVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4IVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXSTREAM4FATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4FATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLVERTEXSTREAM4FVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4FVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXSTREAM4DATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4DATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLVERTEXSTREAM4DVATIPROC = _rpythonic_function_(		"PFNGLVERTEXSTREAM4DVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLNORMALSTREAM3BATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3BATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("nx",		ctypes.c_char),
	("ny",		ctypes.c_char),
	("nz",		ctypes.c_char),] )

PFNGLNORMALSTREAM3BVATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3BVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLNORMALSTREAM3SATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3SATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("nx",		ctypes.c_short),
	("ny",		ctypes.c_short),
	("nz",		ctypes.c_short),] )

PFNGLNORMALSTREAM3SVATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3SVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLNORMALSTREAM3IATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3IATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("nx",		ctypes.c_int),
	("ny",		ctypes.c_int),
	("nz",		ctypes.c_int),] )

PFNGLNORMALSTREAM3IVATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3IVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLNORMALSTREAM3FATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3FATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),] )

PFNGLNORMALSTREAM3FVATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3FVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLNORMALSTREAM3DATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3DATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("nx",		ctypes.c_double),
	("ny",		ctypes.c_double),
	("nz",		ctypes.c_double),] )

PFNGLNORMALSTREAM3DVATIPROC = _rpythonic_function_(		"PFNGLNORMALSTREAM3DVATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC = _rpythonic_function_(		"PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC", ctypes.c_void_p, [
	("stream",		ctypes.c_uint),] )

PFNGLVERTEXBLENDENVIATIPROC = _rpythonic_function_(		"PFNGLVERTEXBLENDENVIATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLVERTEXBLENDENVFATIPROC = _rpythonic_function_(		"PFNGLVERTEXBLENDENVFATIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLELEMENTPOINTERATIPROC = _rpythonic_function_(		"PFNGLELEMENTPOINTERATIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLDRAWELEMENTARRAYATIPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTARRAYATIPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),] )

glColor4s = _rpythonic_function_(		"glColor4s", ctypes.c_void_p, [
	("red",		ctypes.c_short),
	("green",		ctypes.c_short),
	("blue",		ctypes.c_short),
	("alpha",		ctypes.c_short),] )

glColor4ub = _rpythonic_function_(		"glColor4ub", ctypes.c_void_p, [
	("red",		ctypes.c_ubyte),
	("green",		ctypes.c_ubyte),
	("blue",		ctypes.c_ubyte),
	("alpha",		ctypes.c_ubyte),] )

glColor4ui = _rpythonic_function_(		"glColor4ui", ctypes.c_void_p, [
	("red",		ctypes.c_uint),
	("green",		ctypes.c_uint),
	("blue",		ctypes.c_uint),
	("alpha",		ctypes.c_uint),] )

glColor4us = _rpythonic_function_(		"glColor4us", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),
	("alpha",		ctypes.c_ushort),] )

glColor3bv = _rpythonic_function_(		"glColor3bv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

glColor3dv = _rpythonic_function_(		"glColor3dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glColor3fv = _rpythonic_function_(		"glColor3fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glColor3iv = _rpythonic_function_(		"glColor3iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glColor3sv = _rpythonic_function_(		"glColor3sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glColor3ubv = _rpythonic_function_(		"glColor3ubv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

glColor3uiv = _rpythonic_function_(		"glColor3uiv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

glColor3usv = _rpythonic_function_(		"glColor3usv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

glColor4bv = _rpythonic_function_(		"glColor4bv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

glColor4dv = _rpythonic_function_(		"glColor4dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glColor4fv = _rpythonic_function_(		"glColor4fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glColor4iv = _rpythonic_function_(		"glColor4iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glColor4sv = _rpythonic_function_(		"glColor4sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glColor4ubv = _rpythonic_function_(		"glColor4ubv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

glColor4uiv = _rpythonic_function_(		"glColor4uiv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

glColor4usv = _rpythonic_function_(		"glColor4usv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

glTexCoord1d = _rpythonic_function_(		"glTexCoord1d", ctypes.c_void_p, [
	("s",		ctypes.c_double),] )

glTexCoord1f = _rpythonic_function_(		"glTexCoord1f", ctypes.c_void_p, [
	("s",		ctypes.c_float),] )

glTexCoord1i = _rpythonic_function_(		"glTexCoord1i", ctypes.c_void_p, [
	("s",		ctypes.c_int),] )

glTexCoord1s = _rpythonic_function_(		"glTexCoord1s", ctypes.c_void_p, [
	("s",		ctypes.c_short),] )

glTexCoord2d = _rpythonic_function_(		"glTexCoord2d", ctypes.c_void_p, [
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),] )

glTexCoord2f = _rpythonic_function_(		"glTexCoord2f", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),] )

glTexCoord2i = _rpythonic_function_(		"glTexCoord2i", ctypes.c_void_p, [
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),] )

glTexCoord2s = _rpythonic_function_(		"glTexCoord2s", ctypes.c_void_p, [
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),] )

glTexCoord3d = _rpythonic_function_(		"glTexCoord3d", ctypes.c_void_p, [
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),] )

glTexCoord3f = _rpythonic_function_(		"glTexCoord3f", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),] )

glTexCoord3i = _rpythonic_function_(		"glTexCoord3i", ctypes.c_void_p, [
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),] )

glTexCoord3s = _rpythonic_function_(		"glTexCoord3s", ctypes.c_void_p, [
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),] )

glTexCoord4d = _rpythonic_function_(		"glTexCoord4d", ctypes.c_void_p, [
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),
	("q",		ctypes.c_double),] )

glTexCoord4f = _rpythonic_function_(		"glTexCoord4f", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("q",		ctypes.c_float),] )

glTexCoord4i = _rpythonic_function_(		"glTexCoord4i", ctypes.c_void_p, [
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),
	("q",		ctypes.c_int),] )

glTexCoord4s = _rpythonic_function_(		"glTexCoord4s", ctypes.c_void_p, [
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),
	("q",		ctypes.c_short),] )

glTexCoord1dv = _rpythonic_function_(		"glTexCoord1dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glTexCoord1fv = _rpythonic_function_(		"glTexCoord1fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glTexCoord1iv = _rpythonic_function_(		"glTexCoord1iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glTexCoord1sv = _rpythonic_function_(		"glTexCoord1sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glTexCoord2dv = _rpythonic_function_(		"glTexCoord2dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glTexCoord2fv = _rpythonic_function_(		"glTexCoord2fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glTexCoord2iv = _rpythonic_function_(		"glTexCoord2iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glTexCoord2sv = _rpythonic_function_(		"glTexCoord2sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glTexCoord3dv = _rpythonic_function_(		"glTexCoord3dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glTexCoord3fv = _rpythonic_function_(		"glTexCoord3fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glTexCoord3iv = _rpythonic_function_(		"glTexCoord3iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glTexCoord3sv = _rpythonic_function_(		"glTexCoord3sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glTexCoord4dv = _rpythonic_function_(		"glTexCoord4dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glTexCoord4fv = _rpythonic_function_(		"glTexCoord4fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glTexCoord4iv = _rpythonic_function_(		"glTexCoord4iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glTexCoord4sv = _rpythonic_function_(		"glTexCoord4sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glRasterPos2d = _rpythonic_function_(		"glRasterPos2d", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

glRasterPos2f = _rpythonic_function_(		"glRasterPos2f", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

glRasterPos2i = _rpythonic_function_(		"glRasterPos2i", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

glRasterPos2s = _rpythonic_function_(		"glRasterPos2s", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

glRasterPos3d = _rpythonic_function_(		"glRasterPos3d", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

glRasterPos3f = _rpythonic_function_(		"glRasterPos3f", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

glRasterPos3i = _rpythonic_function_(		"glRasterPos3i", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

glRasterPos3s = _rpythonic_function_(		"glRasterPos3s", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

glRasterPos4d = _rpythonic_function_(		"glRasterPos4d", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

glRasterPos4f = _rpythonic_function_(		"glRasterPos4f", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

glRasterPos4i = _rpythonic_function_(		"glRasterPos4i", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

glRasterPos4s = _rpythonic_function_(		"glRasterPos4s", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

glRasterPos2dv = _rpythonic_function_(		"glRasterPos2dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glRasterPos2fv = _rpythonic_function_(		"glRasterPos2fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glRasterPos2iv = _rpythonic_function_(		"glRasterPos2iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glRasterPos2sv = _rpythonic_function_(		"glRasterPos2sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glRasterPos3dv = _rpythonic_function_(		"glRasterPos3dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glRasterPos3fv = _rpythonic_function_(		"glRasterPos3fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glRasterPos3iv = _rpythonic_function_(		"glRasterPos3iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glRasterPos3sv = _rpythonic_function_(		"glRasterPos3sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glRasterPos4dv = _rpythonic_function_(		"glRasterPos4dv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glRasterPos4fv = _rpythonic_function_(		"glRasterPos4fv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glRasterPos4iv = _rpythonic_function_(		"glRasterPos4iv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glRasterPos4sv = _rpythonic_function_(		"glRasterPos4sv", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glRectd = _rpythonic_function_(		"glRectd", ctypes.c_void_p, [
	("x1",		ctypes.c_double),
	("y1",		ctypes.c_double),
	("x2",		ctypes.c_double),
	("y2",		ctypes.c_double),] )

glRectf = _rpythonic_function_(		"glRectf", ctypes.c_void_p, [
	("x1",		ctypes.c_float),
	("y1",		ctypes.c_float),
	("x2",		ctypes.c_float),
	("y2",		ctypes.c_float),] )

glRecti = _rpythonic_function_(		"glRecti", ctypes.c_void_p, [
	("x1",		ctypes.c_int),
	("y1",		ctypes.c_int),
	("x2",		ctypes.c_int),
	("y2",		ctypes.c_int),] )

glRects = _rpythonic_function_(		"glRects", ctypes.c_void_p, [
	("x1",		ctypes.c_short),
	("y1",		ctypes.c_short),
	("x2",		ctypes.c_short),
	("y2",		ctypes.c_short),] )

glRectdv = _rpythonic_function_(		"glRectdv", ctypes.c_void_p, [
	("v1",		ctypes.POINTER(ctypes.c_double)),
	("v2",		ctypes.POINTER(ctypes.c_double)),] )

glRectfv = _rpythonic_function_(		"glRectfv", ctypes.c_void_p, [
	("v1",		ctypes.POINTER(ctypes.c_float)),
	("v2",		ctypes.POINTER(ctypes.c_float)),] )

glRectiv = _rpythonic_function_(		"glRectiv", ctypes.c_void_p, [
	("v1",		ctypes.POINTER(ctypes.c_int)),
	("v2",		ctypes.POINTER(ctypes.c_int)),] )

glRectsv = _rpythonic_function_(		"glRectsv", ctypes.c_void_p, [
	("v1",		ctypes.POINTER(ctypes.c_short)),
	("v2",		ctypes.POINTER(ctypes.c_short)),] )

glVertexPointer = _rpythonic_function_(		"glVertexPointer", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("ptr",		ctypes.POINTER(ctypes.c_void_p)),] )

glNormalPointer = _rpythonic_function_(		"glNormalPointer", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("ptr",		ctypes.POINTER(ctypes.c_void_p)),] )

glColorPointer = _rpythonic_function_(		"glColorPointer", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("ptr",		ctypes.POINTER(ctypes.c_void_p)),] )

glIndexPointer = _rpythonic_function_(		"glIndexPointer", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("ptr",		ctypes.POINTER(ctypes.c_void_p)),] )

glTexCoordPointer = _rpythonic_function_(		"glTexCoordPointer", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("ptr",		ctypes.POINTER(ctypes.c_void_p)),] )

glEdgeFlagPointer = _rpythonic_function_(		"glEdgeFlagPointer", ctypes.c_void_p, [
	("stride",		ctypes.c_int),
	("ptr",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetPointerv = _rpythonic_function_(		"glGetPointerv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

glArrayElement = _rpythonic_function_(		"glArrayElement", ctypes.c_void_p, [
	("i",		ctypes.c_int),] )

glDrawArrays = _rpythonic_function_(		"glDrawArrays", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),] )

glDrawElements = _rpythonic_function_(		"glDrawElements", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.c_void_p)),] )

glInterleavedArrays = _rpythonic_function_(		"glInterleavedArrays", ctypes.c_void_p, [
	("format",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

glShadeModel = _rpythonic_function_(		"glShadeModel", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

glLightf = _rpythonic_function_(		"glLightf", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glLighti = _rpythonic_function_(		"glLighti", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glLightfv = _rpythonic_function_(		"glLightfv", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glLightiv = _rpythonic_function_(		"glLightiv", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glGetLightfv = _rpythonic_function_(		"glGetLightfv", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetLightiv = _rpythonic_function_(		"glGetLightiv", ctypes.c_void_p, [
	("light",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glLightModelf = _rpythonic_function_(		"glLightModelf", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glLightModeli = _rpythonic_function_(		"glLightModeli", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glLightModelfv = _rpythonic_function_(		"glLightModelfv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glLightModeliv = _rpythonic_function_(		"glLightModeliv", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glMaterialf = _rpythonic_function_(		"glMaterialf", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glMateriali = _rpythonic_function_(		"glMateriali", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glMaterialfv = _rpythonic_function_(		"glMaterialfv", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glMaterialiv = _rpythonic_function_(		"glMaterialiv", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glGetMaterialfv = _rpythonic_function_(		"glGetMaterialfv", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

glGetMaterialiv = _rpythonic_function_(		"glGetMaterialiv", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

glColorMaterial = _rpythonic_function_(		"glColorMaterial", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

glPixelZoom = _rpythonic_function_(		"glPixelZoom", ctypes.c_void_p, [
	("xfactor",		ctypes.c_float),
	("yfactor",		ctypes.c_float),] )

glPixelStoref = _rpythonic_function_(		"glPixelStoref", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glPixelStorei = _rpythonic_function_(		"glPixelStorei", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glPixelTransferf = _rpythonic_function_(		"glPixelTransferf", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

glPixelTransferi = _rpythonic_function_(		"glPixelTransferi", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

glMultiTexCoord3i = _rpythonic_function_(		"glMultiTexCoord3i", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),] )

glMultiTexCoord3iv = _rpythonic_function_(		"glMultiTexCoord3iv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord3s = _rpythonic_function_(		"glMultiTexCoord3s", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),] )

glMultiTexCoord3sv = _rpythonic_function_(		"glMultiTexCoord3sv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glMultiTexCoord4d = _rpythonic_function_(		"glMultiTexCoord4d", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),
	("q",		ctypes.c_double),] )

glMultiTexCoord4dv = _rpythonic_function_(		"glMultiTexCoord4dv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord4f = _rpythonic_function_(		"glMultiTexCoord4f", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("q",		ctypes.c_float),] )

glMultiTexCoord4fv = _rpythonic_function_(		"glMultiTexCoord4fv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord4i = _rpythonic_function_(		"glMultiTexCoord4i", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),
	("q",		ctypes.c_int),] )

glMultiTexCoord4iv = _rpythonic_function_(		"glMultiTexCoord4iv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord4s = _rpythonic_function_(		"glMultiTexCoord4s", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),
	("q",		ctypes.c_short),] )

glMultiTexCoord4sv = _rpythonic_function_(		"glMultiTexCoord4sv", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glLoadTransposeMatrixd = _rpythonic_function_(		"glLoadTransposeMatrixd", ctypes.c_void_p, [
	("m",		( ctypes.c_double * 16 )),] )

glLoadTransposeMatrixf = _rpythonic_function_(		"glLoadTransposeMatrixf", ctypes.c_void_p, [
	("m",		( ctypes.c_float * 16 )),] )

glMultTransposeMatrixd = _rpythonic_function_(		"glMultTransposeMatrixd", ctypes.c_void_p, [
	("m",		( ctypes.c_double * 16 )),] )

glMultTransposeMatrixf = _rpythonic_function_(		"glMultTransposeMatrixf", ctypes.c_void_p, [
	("m",		( ctypes.c_float * 16 )),] )

glSampleCoverage = _rpythonic_function_(		"glSampleCoverage", ctypes.c_void_p, [
	("value",		ctypes.c_float),
	("invert",		ctypes.c_ubyte),] )

PFNGLACTIVETEXTUREPROC = _rpythonic_function_(		"PFNGLACTIVETEXTUREPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

PFNGLSAMPLECOVERAGEPROC = _rpythonic_function_(		"PFNGLSAMPLECOVERAGEPROC", ctypes.c_void_p, [
	("value",		ctypes.c_float),
	("invert",		ctypes.c_ubyte),] )

PFNGLCOMPRESSEDTEXIMAGE3DPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXIMAGE3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXIMAGE2DPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXIMAGE2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXIMAGE1DPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXIMAGE1DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOMPRESSEDTEXIMAGEPROC = _rpythonic_function_(		"PFNGLGETCOMPRESSEDTEXIMAGEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

glActiveTextureARB = _rpythonic_function_(		"glActiveTextureARB", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

glClientActiveTextureARB = _rpythonic_function_(		"glClientActiveTextureARB", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

glMultiTexCoord1dARB = _rpythonic_function_(		"glMultiTexCoord1dARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),] )

glMultiTexCoord1dvARB = _rpythonic_function_(		"glMultiTexCoord1dvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord1fARB = _rpythonic_function_(		"glMultiTexCoord1fARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),] )

glMultiTexCoord1fvARB = _rpythonic_function_(		"glMultiTexCoord1fvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord1iARB = _rpythonic_function_(		"glMultiTexCoord1iARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),] )

glMultiTexCoord1ivARB = _rpythonic_function_(		"glMultiTexCoord1ivARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord1sARB = _rpythonic_function_(		"glMultiTexCoord1sARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),] )

glMultiTexCoord1svARB = _rpythonic_function_(		"glMultiTexCoord1svARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glMultiTexCoord2dARB = _rpythonic_function_(		"glMultiTexCoord2dARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),] )

glMultiTexCoord2dvARB = _rpythonic_function_(		"glMultiTexCoord2dvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord2fARB = _rpythonic_function_(		"glMultiTexCoord2fARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),] )

glMultiTexCoord2fvARB = _rpythonic_function_(		"glMultiTexCoord2fvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord2iARB = _rpythonic_function_(		"glMultiTexCoord2iARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),] )

glMultiTexCoord2ivARB = _rpythonic_function_(		"glMultiTexCoord2ivARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord2sARB = _rpythonic_function_(		"glMultiTexCoord2sARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),] )

glMultiTexCoord2svARB = _rpythonic_function_(		"glMultiTexCoord2svARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glMultiTexCoord3dARB = _rpythonic_function_(		"glMultiTexCoord3dARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),] )

glMultiTexCoord3dvARB = _rpythonic_function_(		"glMultiTexCoord3dvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord3fARB = _rpythonic_function_(		"glMultiTexCoord3fARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),] )

glMultiTexCoord3fvARB = _rpythonic_function_(		"glMultiTexCoord3fvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord3iARB = _rpythonic_function_(		"glMultiTexCoord3iARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),] )

glMultiTexCoord3ivARB = _rpythonic_function_(		"glMultiTexCoord3ivARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord3sARB = _rpythonic_function_(		"glMultiTexCoord3sARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),] )

glMultiTexCoord3svARB = _rpythonic_function_(		"glMultiTexCoord3svARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

glMultiTexCoord4dARB = _rpythonic_function_(		"glMultiTexCoord4dARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),
	("q",		ctypes.c_double),] )

glMultiTexCoord4dvARB = _rpythonic_function_(		"glMultiTexCoord4dvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

glMultiTexCoord4fARB = _rpythonic_function_(		"glMultiTexCoord4fARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("q",		ctypes.c_float),] )

glMultiTexCoord4fvARB = _rpythonic_function_(		"glMultiTexCoord4fvARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glMultiTexCoord4iARB = _rpythonic_function_(		"glMultiTexCoord4iARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),
	("q",		ctypes.c_int),] )

glMultiTexCoord4ivARB = _rpythonic_function_(		"glMultiTexCoord4ivARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

glMultiTexCoord4sARB = _rpythonic_function_(		"glMultiTexCoord4sARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),
	("q",		ctypes.c_short),] )

glMultiTexCoord4svARB = _rpythonic_function_(		"glMultiTexCoord4svARB", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLACTIVETEXTUREARBPROC = _rpythonic_function_(		"PFNGLACTIVETEXTUREARBPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

PFNGLCLIENTACTIVETEXTUREARBPROC = _rpythonic_function_(		"PFNGLCLIENTACTIVETEXTUREARBPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),] )

PFNGLMULTITEXCOORD1DARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),] )

PFNGLMULTITEXCOORD1DVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1DVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD1FARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1FARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),] )

PFNGLMULTITEXCOORD1FVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1FVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD1IARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1IARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),] )

PFNGLMULTITEXCOORD1IVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1IVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD1SARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1SARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),] )

PFNGLMULTITEXCOORD1SVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1SVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTITEXCOORD2DARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),] )

PFNGLMULTITEXCOORD2DVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2DVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD2FARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2FARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),] )

PFNGLMULTITEXCOORD2FVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2FVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD2IARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2IARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),] )

PFNGLMULTITEXCOORD2IVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2IVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD2SARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2SARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),] )

PFNGLMULTITEXCOORD2SVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2SVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTITEXCOORD3DARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),] )

PFNGLMULTITEXCOORD3DVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3DVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD3FARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3FARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),] )

PFNGLMULTITEXCOORD3FVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3FVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXCOORD3IARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3IARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_int),
	("t",		ctypes.c_int),
	("r",		ctypes.c_int),] )

PFNGLMULTITEXCOORD3IVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3IVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXCOORD3SARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3SARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_short),
	("t",		ctypes.c_short),
	("r",		ctypes.c_short),] )

PFNGLMULTITEXCOORD3SVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3SVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLMULTITEXCOORD4DARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_double),
	("t",		ctypes.c_double),
	("r",		ctypes.c_double),
	("q",		ctypes.c_double),] )

PFNGLMULTITEXCOORD4DVARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4DVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXCOORD4FARBPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4FARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("q",		ctypes.c_float),] )

PFNGLUNIFORM4UI64VNVPROC = _rpythonic_function_(		"PFNGLUNIFORM4UI64VNVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLGETUNIFORMI64VNVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLPROGRAMUNIFORM1I64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1I64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),] )

PFNGLPROGRAMUNIFORM2I64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2I64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),] )

PFNGLPROGRAMUNIFORM3I64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3I64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),
	("z",		ctypes.c_int64),] )

PFNGLPROGRAMUNIFORM4I64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4I64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),
	("z",		ctypes.c_int64),
	("w",		ctypes.c_int64),] )

PFNGLPROGRAMUNIFORM1I64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1I64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLPROGRAMUNIFORM2I64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2I64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLPROGRAMUNIFORM3I64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3I64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLPROGRAMUNIFORM4I64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4I64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLPROGRAMUNIFORM1UI64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1UI64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),] )

PFNGLPROGRAMUNIFORM2UI64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2UI64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),] )

PFNGLPROGRAMUNIFORM3UI64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3UI64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),
	("z",		ctypes.c_uint64),] )

PFNGLPROGRAMUNIFORM4UI64NVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4UI64NVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),
	("z",		ctypes.c_uint64),
	("w",		ctypes.c_uint64),] )

PFNGLPROGRAMUNIFORM1UI64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1UI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLPROGRAMUNIFORM2UI64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2UI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLPROGRAMUNIFORM3UI64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3UI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLPROGRAMUNIFORM4UI64VNVPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4UI64VNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVERTEXATTRIBL1I64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1I64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int64),] )

PFNGLVERTEXATTRIBL2I64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2I64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),] )

PFNGLVERTEXATTRIBL3I64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3I64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),
	("z",		ctypes.c_int64),] )

PFNGLVERTEXATTRIBL4I64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4I64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int64),
	("y",		ctypes.c_int64),
	("z",		ctypes.c_int64),
	("w",		ctypes.c_int64),] )

PFNGLVERTEXATTRIBL1I64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1I64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLVERTEXATTRIBL2I64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2I64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLVERTEXATTRIBL3I64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3I64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLVERTEXATTRIBL4I64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4I64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLVERTEXATTRIBL1UI64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1UI64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint64),] )

PFNGLVERTEXATTRIBL2UI64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2UI64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),] )

PFNGLVERTEXATTRIBL3UI64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3UI64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),
	("z",		ctypes.c_uint64),] )

PFNGLVERTEXATTRIBL4UI64NVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4UI64NVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint64),
	("y",		ctypes.c_uint64),
	("z",		ctypes.c_uint64),
	("w",		ctypes.c_uint64),] )

PFNGLVERTEXATTRIBL1UI64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL1UI64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVERTEXATTRIBL2UI64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL2UI64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVERTEXATTRIBL3UI64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL3UI64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVERTEXATTRIBL4UI64VNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBL4UI64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLGETVERTEXATTRIBLI64VNVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBLI64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLGETVERTEXATTRIBLUI64VNVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBLUI64VNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVERTEXATTRIBLFORMATNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBLFORMATNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),] )

PFNGLGENNAMESAMDPROC = _rpythonic_function_(		"PFNGLGENNAMESAMDPROC", ctypes.c_void_p, [
	("identifier",		ctypes.c_uint),
	("num",		ctypes.c_uint),
	("names",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETENAMESAMDPROC = _rpythonic_function_(		"PFNGLDELETENAMESAMDPROC", ctypes.c_void_p, [
	("identifier",		ctypes.c_uint),
	("num",		ctypes.c_uint),
	("names",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISNAMEAMDPROC = _rpythonic_function_(		"PFNGLISNAMEAMDPROC", ctypes.c_ubyte, [
	("identifier",		ctypes.c_uint),
	("name",		ctypes.c_uint),] )

PFNGLDEBUGMESSAGEENABLEAMDPROC = _rpythonic_function_(		"PFNGLDEBUGMESSAGEENABLEAMDPROC", ctypes.c_void_p, [
	("category",		ctypes.c_uint),
	("severity",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),
	("enabled",		ctypes.c_ubyte),] )

PFNGLDEBUGMESSAGEINSERTAMDPROC = _rpythonic_function_(		"PFNGLDEBUGMESSAGEINSERTAMDPROC", ctypes.c_void_p, [
	("category",		ctypes.c_uint),
	("severity",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),
	("length",		ctypes.c_int),
	("buf",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLDEBUGMESSAGECALLBACKAMDPROC = _rpythonic_function_(		"PFNGLDEBUGMESSAGECALLBACKAMDPROC", ctypes.c_void_p, [
	("callback",		ctypes.CFUNCTYPE(ctypes.c_void_p, ctypes.c_uint,ctypes.c_uint,ctypes.c_uint,ctypes.c_int,ctypes.POINTER(ctypes.c_char),ctypes.POINTER(ctypes.c_void_p),)),
	("userParam",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETDEBUGMESSAGELOGAMDPROC = _rpythonic_function_(		"PFNGLGETDEBUGMESSAGELOGAMDPROC", ctypes.c_uint, [
	("count",		ctypes.c_uint),
	("bufsize",		ctypes.c_int),
	("categories",		ctypes.POINTER(ctypes.c_uint)),
	("severities",		ctypes.POINTER(ctypes.c_uint)),
	("ids",		ctypes.POINTER(ctypes.c_uint)),
	("lengths",		ctypes.POINTER(ctypes.c_int)),
	("message",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVDPAUINITNVPROC = _rpythonic_function_(		"PFNGLVDPAUINITNVPROC", ctypes.c_void_p, [
	("vdpDevice",		ctypes.POINTER(ctypes.c_void_p)),
	("getProcAddress",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLVDPAUFININVPROC = _rpythonic_function_(		"PFNGLVDPAUFININVPROC", ctypes.c_void_p, [] )

PFNGLVDPAUREGISTERVIDEOSURFACENVPROC = _rpythonic_function_(		"PFNGLVDPAUREGISTERVIDEOSURFACENVPROC", ctypes.c_int, [
	("vdpSurface",		ctypes.POINTER(ctypes.c_void_p)),
	("target",		ctypes.c_uint),
	("numTextureNames",		ctypes.c_int),
	("textureNames",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC = _rpythonic_function_(		"PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC", ctypes.c_int, [
	("vdpSurface",		ctypes.POINTER(ctypes.c_void_p)),
	("target",		ctypes.c_uint),
	("numTextureNames",		ctypes.c_int),
	("textureNames",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVDPAUISSURFACENVPROC = _rpythonic_function_(		"PFNGLVDPAUISSURFACENVPROC", ctypes.c_void_p, [
	("surface",		ctypes.c_int),] )

PFNGLVDPAUUNREGISTERSURFACENVPROC = _rpythonic_function_(		"PFNGLVDPAUUNREGISTERSURFACENVPROC", ctypes.c_void_p, [
	("surface",		ctypes.c_int),] )

PFNGLVDPAUGETSURFACEIVNVPROC = _rpythonic_function_(		"PFNGLVDPAUGETSURFACEIVNVPROC", ctypes.c_void_p, [
	("surface",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("values",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVDPAUSURFACEACCESSNVPROC = _rpythonic_function_(		"PFNGLVDPAUSURFACEACCESSNVPROC", ctypes.c_void_p, [
	("surface",		ctypes.c_int),
	("access",		ctypes.c_uint),] )

PFNGLVDPAUMAPSURFACESNVPROC = _rpythonic_function_(		"PFNGLVDPAUMAPSURFACESNVPROC", ctypes.c_void_p, [
	("numSurfaces",		ctypes.c_int),
	("surfaces",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVDPAUUNMAPSURFACESNVPROC = _rpythonic_function_(		"PFNGLVDPAUUNMAPSURFACESNVPROC", ctypes.c_void_p, [
	("numSurface",		ctypes.c_int),
	("surfaces",		ctypes.POINTER(ctypes.c_int)),] )

glCreateDebugObjectMESA = _rpythonic_function_(		"glCreateDebugObjectMESA", ctypes.c_uint, [] )

glClearDebugLogMESA = _rpythonic_function_(		"glClearDebugLogMESA", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),
	("logType",		ctypes.c_uint),
	("shaderType",		ctypes.c_uint),] )

glGetDebugLogMESA = _rpythonic_function_(		"glGetDebugLogMESA", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),
	("logType",		ctypes.c_uint),
	("shaderType",		ctypes.c_uint),
	("maxLength",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("debugLog",		ctypes.POINTER(ctypes.c_char)),] )

glGetDebugLogLengthMESA = _rpythonic_function_(		"glGetDebugLogLengthMESA", ctypes.c_int, [
	("obj",		ctypes.c_uint),
	("logType",		ctypes.c_uint),
	("shaderType",		ctypes.c_uint),] )

GLprogramcallbackMESA = _rpythonic_function_(		"GLprogramcallbackMESA", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glProgramCallbackMESA = _rpythonic_function_(		"glProgramCallbackMESA", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("callback",		ctypes.CFUNCTYPE(ctypes.c_void_p, ctypes.c_uint,ctypes.POINTER(ctypes.c_void_p),)),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

glGetProgramRegisterfvMESA = _rpythonic_function_(		"glGetProgramRegisterfvMESA", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

glBlendEquationSeparateATI = _rpythonic_function_(		"glBlendEquationSeparateATI", ctypes.c_void_p, [
	("modeRGB",		ctypes.c_uint),
	("modeA",		ctypes.c_uint),] )

PFNGLBLENDEQUATIONSEPARATEATIPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONSEPARATEATIPROC", ctypes.c_void_p, [
	("modeRGB",		ctypes.c_uint),
	("modeA",		ctypes.c_uint),] )

PFNGLEGLIMAGETARGETTEXTURE2DOESPROC = _rpythonic_function_(		"PFNGLEGLIMAGETARGETTEXTURE2DOESPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC = _rpythonic_function_(		"PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

_GLUfuncptr = _rpythonic_function_(		"_GLUfuncptr", ctypes.c_void_p, [] )

gluBeginCurve = _rpythonic_function_(		"gluBeginCurve", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluBeginPolygon = _rpythonic_function_(		"gluBeginPolygon", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),] )

gluBeginSurface = _rpythonic_function_(		"gluBeginSurface", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluBeginTrim = _rpythonic_function_(		"gluBeginTrim", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluBuild1DMipmapLevels = _rpythonic_function_(		"gluBuild1DMipmapLevels", ctypes.c_int, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("base",		ctypes.c_int),
	("max",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluBuild1DMipmaps = _rpythonic_function_(		"gluBuild1DMipmaps", ctypes.c_int, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluBuild2DMipmapLevels = _rpythonic_function_(		"gluBuild2DMipmapLevels", ctypes.c_int, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("base",		ctypes.c_int),
	("max",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluBuild2DMipmaps = _rpythonic_function_(		"gluBuild2DMipmaps", ctypes.c_int, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluBuild3DMipmapLevels = _rpythonic_function_(		"gluBuild3DMipmapLevels", ctypes.c_int, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("base",		ctypes.c_int),
	("max",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluBuild3DMipmaps = _rpythonic_function_(		"gluBuild3DMipmaps", ctypes.c_int, [
	("target",		ctypes.c_uint),
	("internalFormat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluCheckExtension = _rpythonic_function_(		"gluCheckExtension", ctypes.c_ubyte, [
	("extName",		ctypes.POINTER(ctypes.c_ubyte)),
	("extString",		ctypes.POINTER(ctypes.c_ubyte)),] )

gluCylinder = _rpythonic_function_(		"gluCylinder", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("base",		ctypes.c_double),
	("top",		ctypes.c_double),
	("height",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("stacks",		ctypes.c_int),] )

gluDeleteNurbsRenderer = _rpythonic_function_(		"gluDeleteNurbsRenderer", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluDeleteQuadric = _rpythonic_function_(		"gluDeleteQuadric", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),] )

PFNGLDRAWRANGEELEMENTARRAYATIPROC = _rpythonic_function_(		"PFNGLDRAWRANGEELEMENTARRAYATIPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("count",		ctypes.c_int),] )

PFNGLDRAWMESHARRAYSSUNPROC = _rpythonic_function_(		"PFNGLDRAWMESHARRAYSSUNPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLGENOCCLUSIONQUERIESNVPROC = _rpythonic_function_(		"PFNGLGENOCCLUSIONQUERIESNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETEOCCLUSIONQUERIESNVPROC = _rpythonic_function_(		"PFNGLDELETEOCCLUSIONQUERIESNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISOCCLUSIONQUERYNVPROC = _rpythonic_function_(		"PFNGLISOCCLUSIONQUERYNVPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),] )

PFNGLBEGINOCCLUSIONQUERYNVPROC = _rpythonic_function_(		"PFNGLBEGINOCCLUSIONQUERYNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),] )

PFNGLENDOCCLUSIONQUERYNVPROC = _rpythonic_function_(		"PFNGLENDOCCLUSIONQUERYNVPROC", ctypes.c_void_p, [] )

PFNGLGETOCCLUSIONQUERYIVNVPROC = _rpythonic_function_(		"PFNGLGETOCCLUSIONQUERYIVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETOCCLUSIONQUERYUIVNVPROC = _rpythonic_function_(		"PFNGLGETOCCLUSIONQUERYUIVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPOINTPARAMETERINVPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERINVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLPOINTPARAMETERIVNVPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERIVNVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLACTIVESTENCILFACEEXTPROC = _rpythonic_function_(		"PFNGLACTIVESTENCILFACEEXTPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),] )

PFNGLELEMENTPOINTERAPPLEPROC = _rpythonic_function_(		"PFNGLELEMENTPOINTERAPPLEPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLDRAWELEMENTARRAYAPPLEPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTARRAYAPPLEPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),] )

PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC = _rpythonic_function_(		"PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),] )

PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC = _rpythonic_function_(		"PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.POINTER(ctypes.c_int)),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("primcount",		ctypes.c_int),] )

PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC = _rpythonic_function_(		"PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("start",		ctypes.c_uint),
	("end",		ctypes.c_uint),
	("first",		ctypes.POINTER(ctypes.c_int)),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("primcount",		ctypes.c_int),] )

PFNGLGENFENCESAPPLEPROC = _rpythonic_function_(		"PFNGLGENFENCESAPPLEPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("fences",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETEFENCESAPPLEPROC = _rpythonic_function_(		"PFNGLDELETEFENCESAPPLEPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("fences",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLSETFENCEAPPLEPROC = _rpythonic_function_(		"PFNGLSETFENCEAPPLEPROC", ctypes.c_void_p, [
	("fence",		ctypes.c_uint),] )

PFNGLISFENCEAPPLEPROC = _rpythonic_function_(		"PFNGLISFENCEAPPLEPROC", ctypes.c_ubyte, [
	("fence",		ctypes.c_uint),] )

PFNGLTESTFENCEAPPLEPROC = _rpythonic_function_(		"PFNGLTESTFENCEAPPLEPROC", ctypes.c_ubyte, [
	("fence",		ctypes.c_uint),] )

PFNGLFINISHFENCEAPPLEPROC = _rpythonic_function_(		"PFNGLFINISHFENCEAPPLEPROC", ctypes.c_void_p, [
	("fence",		ctypes.c_uint),] )

PFNGLTESTOBJECTAPPLEPROC = _rpythonic_function_(		"PFNGLTESTOBJECTAPPLEPROC", ctypes.c_ubyte, [
	("C_object",		ctypes.c_uint),
	("name",		ctypes.c_uint),] )

PFNGLFINISHOBJECTAPPLEPROC = _rpythonic_function_(		"PFNGLFINISHOBJECTAPPLEPROC", ctypes.c_void_p, [
	("C_object",		ctypes.c_uint),
	("name",		ctypes.c_int),] )

PFNGLBINDVERTEXARRAYAPPLEPROC = _rpythonic_function_(		"PFNGLBINDVERTEXARRAYAPPLEPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),] )

PFNGLDELETEVERTEXARRAYSAPPLEPROC = _rpythonic_function_(		"PFNGLDELETEVERTEXARRAYSAPPLEPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("arrays",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENVERTEXARRAYSAPPLEPROC = _rpythonic_function_(		"PFNGLGENVERTEXARRAYSAPPLEPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("arrays",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISVERTEXARRAYAPPLEPROC = _rpythonic_function_(		"PFNGLISVERTEXARRAYAPPLEPROC", ctypes.c_ubyte, [
	("array",		ctypes.c_uint),] )

PFNGLVERTEXARRAYRANGEAPPLEPROC = _rpythonic_function_(		"PFNGLVERTEXARRAYRANGEAPPLEPROC", ctypes.c_void_p, [
	("length",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC = _rpythonic_function_(		"PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC", ctypes.c_void_p, [
	("length",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLVERTEXARRAYPARAMETERIAPPLEPROC = _rpythonic_function_(		"PFNGLVERTEXARRAYPARAMETERIAPPLEPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLDRAWBUFFERSATIPROC = _rpythonic_function_(		"PFNGLDRAWBUFFERSATIPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("bufs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMNAMEDPARAMETER4FNVPROC = _rpythonic_function_(		"PFNGLPROGRAMNAMEDPARAMETER4FNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLPROGRAMNAMEDPARAMETER4DNVPROC = _rpythonic_function_(		"PFNGLPROGRAMNAMEDPARAMETER4DNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_ubyte)),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEX2HNVPROC = _rpythonic_function_(		"PFNGLVERTEX2HNVPROC", ctypes.c_void_p, [
	("x",		ctypes.c_ushort),
	("y",		ctypes.c_ushort),] )

PFNGLVERTEX2HVNVPROC = _rpythonic_function_(		"PFNGLVERTEX2HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEX3HNVPROC = _rpythonic_function_(		"PFNGLVERTEX3HNVPROC", ctypes.c_void_p, [
	("x",		ctypes.c_ushort),
	("y",		ctypes.c_ushort),
	("z",		ctypes.c_ushort),] )

PFNGLVERTEX3HVNVPROC = _rpythonic_function_(		"PFNGLVERTEX3HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEX4HNVPROC = _rpythonic_function_(		"PFNGLVERTEX4HNVPROC", ctypes.c_void_p, [
	("x",		ctypes.c_ushort),
	("y",		ctypes.c_ushort),
	("z",		ctypes.c_ushort),
	("w",		ctypes.c_ushort),] )

PFNGLVERTEX4HVNVPROC = _rpythonic_function_(		"PFNGLVERTEX4HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLNORMAL3HNVPROC = _rpythonic_function_(		"PFNGLNORMAL3HNVPROC", ctypes.c_void_p, [
	("nx",		ctypes.c_ushort),
	("ny",		ctypes.c_ushort),
	("nz",		ctypes.c_ushort),] )

PFNGLNORMAL3HVNVPROC = _rpythonic_function_(		"PFNGLNORMAL3HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLCOLOR3HNVPROC = _rpythonic_function_(		"PFNGLCOLOR3HNVPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),] )

PFNGLCOLOR3HVNVPROC = _rpythonic_function_(		"PFNGLCOLOR3HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLCOLOR4HNVPROC = _rpythonic_function_(		"PFNGLCOLOR4HNVPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),
	("alpha",		ctypes.c_ushort),] )

PFNGLCOLOR4HVNVPROC = _rpythonic_function_(		"PFNGLCOLOR4HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLTEXCOORD1HNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD1HNVPROC", ctypes.c_void_p, [
	("s",		ctypes.c_ushort),] )

PFNGLTEXCOORD1HVNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD1HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLTEXCOORD2HNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD2HNVPROC", ctypes.c_void_p, [
	("s",		ctypes.c_ushort),
	("t",		ctypes.c_ushort),] )

PFNGLTEXCOORD2HVNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD2HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLTEXCOORD3HNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD3HNVPROC", ctypes.c_void_p, [
	("s",		ctypes.c_ushort),
	("t",		ctypes.c_ushort),
	("r",		ctypes.c_ushort),] )

PFNGLTEXCOORD3HVNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD3HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLTEXCOORD4HNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD4HNVPROC", ctypes.c_void_p, [
	("s",		ctypes.c_ushort),
	("t",		ctypes.c_ushort),
	("r",		ctypes.c_ushort),
	("q",		ctypes.c_ushort),] )

PFNGLTEXCOORD4HVNVPROC = _rpythonic_function_(		"PFNGLTEXCOORD4HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLMULTITEXCOORD1HNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1HNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_ushort),] )

PFNGLMULTITEXCOORD1HVNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD1HVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLMULTITEXCOORD2HNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2HNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_ushort),
	("t",		ctypes.c_ushort),] )

PFNGLMULTITEXCOORD2HVNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD2HVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLMULTITEXCOORD3HNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3HNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_ushort),
	("t",		ctypes.c_ushort),
	("r",		ctypes.c_ushort),] )

PFNGLMULTITEXCOORD3HVNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD3HVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLMULTITEXCOORD4HNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4HNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("s",		ctypes.c_ushort),
	("t",		ctypes.c_ushort),
	("r",		ctypes.c_ushort),
	("q",		ctypes.c_ushort),] )

PFNGLMULTITEXCOORD4HVNVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORD4HVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLFOGCOORDHNVPROC = _rpythonic_function_(		"PFNGLFOGCOORDHNVPROC", ctypes.c_void_p, [
	("fog",		ctypes.c_ushort),] )

PFNGLFOGCOORDHVNVPROC = _rpythonic_function_(		"PFNGLFOGCOORDHVNVPROC", ctypes.c_void_p, [
	("fog",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLSECONDARYCOLOR3HNVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3HNVPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),] )

PFNGLSECONDARYCOLOR3HVNVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3HVNVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXWEIGHTHNVPROC = _rpythonic_function_(		"PFNGLVERTEXWEIGHTHNVPROC", ctypes.c_void_p, [
	("weight",		ctypes.c_ushort),] )

PFNGLVERTEXWEIGHTHVNVPROC = _rpythonic_function_(		"PFNGLVERTEXWEIGHTHVNVPROC", ctypes.c_void_p, [
	("weight",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIB1HNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1HNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ushort),] )

PFNGLVERTEXATTRIB1HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIB2HNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2HNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ushort),
	("y",		ctypes.c_ushort),] )

PFNGLVERTEXATTRIB2HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIB3HNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3HNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ushort),
	("y",		ctypes.c_ushort),
	("z",		ctypes.c_ushort),] )

PFNGLVERTEXATTRIB3HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIB4HNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4HNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ushort),
	("y",		ctypes.c_ushort),
	("z",		ctypes.c_ushort),
	("w",		ctypes.c_ushort),] )

PFNGLVERTEXATTRIB4HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBS1HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS1HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBS2HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS2HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBS3HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS3HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBS4HVNVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBS4HVNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLPIXELDATARANGENVPROC = _rpythonic_function_(		"PFNGLPIXELDATARANGENVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("length",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLFLUSHPIXELDATARANGENVPROC = _rpythonic_function_(		"PFNGLFLUSHPIXELDATARANGENVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLPRIMITIVERESTARTNVPROC = _rpythonic_function_(		"PFNGLPRIMITIVERESTARTNVPROC", ctypes.c_void_p, [] )

PFNGLPRIMITIVERESTARTINDEXNVPROC = _rpythonic_function_(		"PFNGLPRIMITIVERESTARTINDEXNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),] )

PFNGLMAPOBJECTBUFFERATIPROC = _rpythonic_function_(		"PFNGLMAPOBJECTBUFFERATIPROC", ctypes.POINTER(ctypes.c_void_p), [
	("buffer",		ctypes.c_uint),] )

PFNGLUNMAPOBJECTBUFFERATIPROC = _rpythonic_function_(		"PFNGLUNMAPOBJECTBUFFERATIPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),] )

PFNGLSTENCILOPSEPARATEATIPROC = _rpythonic_function_(		"PFNGLSTENCILOPSEPARATEATIPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("sfail",		ctypes.c_uint),
	("dpfail",		ctypes.c_uint),
	("dppass",		ctypes.c_uint),] )

PFNGLSTENCILFUNCSEPARATEATIPROC = _rpythonic_function_(		"PFNGLSTENCILFUNCSEPARATEATIPROC", ctypes.c_void_p, [
	("frontfunc",		ctypes.c_uint),
	("backfunc",		ctypes.c_uint),
	("ref",		ctypes.c_int),
	("mask",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBARRAYOBJECTATIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBARRAYOBJECTATIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("stride",		ctypes.c_int),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_uint),] )

PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLDEPTHBOUNDSEXTPROC = _rpythonic_function_(		"PFNGLDEPTHBOUNDSEXTPROC", ctypes.c_void_p, [
	("zmin",		ctypes.c_double),
	("zmax",		ctypes.c_double),] )

PFNGLBLENDEQUATIONSEPARATEEXTPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONSEPARATEEXTPROC", ctypes.c_void_p, [
	("modeRGB",		ctypes.c_uint),
	("modeAlpha",		ctypes.c_uint),] )

PFNGLISRENDERBUFFEREXTPROC = _rpythonic_function_(		"PFNGLISRENDERBUFFEREXTPROC", ctypes.c_ubyte, [
	("renderbuffer",		ctypes.c_uint),] )

PFNGLBINDRENDERBUFFEREXTPROC = _rpythonic_function_(		"PFNGLBINDRENDERBUFFEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLDELETERENDERBUFFERSEXTPROC = _rpythonic_function_(		"PFNGLDELETERENDERBUFFERSEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("renderbuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENRENDERBUFFERSEXTPROC = _rpythonic_function_(		"PFNGLGENRENDERBUFFERSEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("renderbuffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLRENDERBUFFERSTORAGEEXTPROC = _rpythonic_function_(		"PFNGLRENDERBUFFERSTORAGEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLISFRAMEBUFFEREXTPROC = _rpythonic_function_(		"PFNGLISFRAMEBUFFEREXTPROC", ctypes.c_ubyte, [
	("framebuffer",		ctypes.c_uint),] )

PFNGLFOGCOORDDVEXTPROC = _rpythonic_function_(		"PFNGLFOGCOORDDVEXTPROC", ctypes.c_void_p, [
	("coord",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLFOGCOORDPOINTEREXTPROC = _rpythonic_function_(		"PFNGLFOGCOORDPOINTEREXTPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTANGENT3BEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3BEXTPROC", ctypes.c_void_p, [
	("tx",		ctypes.c_char),
	("ty",		ctypes.c_char),
	("tz",		ctypes.c_char),] )

PFNGLTANGENT3BVEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3BVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLTANGENT3DEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3DEXTPROC", ctypes.c_void_p, [
	("tx",		ctypes.c_double),
	("ty",		ctypes.c_double),
	("tz",		ctypes.c_double),] )

PFNGLTANGENT3DVEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3DVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLTANGENT3FEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3FEXTPROC", ctypes.c_void_p, [
	("tx",		ctypes.c_float),
	("ty",		ctypes.c_float),
	("tz",		ctypes.c_float),] )

PFNGLTANGENT3FVEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3FVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTANGENT3IEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3IEXTPROC", ctypes.c_void_p, [
	("tx",		ctypes.c_int),
	("ty",		ctypes.c_int),
	("tz",		ctypes.c_int),] )

PFNGLTANGENT3IVEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3IVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTANGENT3SEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3SEXTPROC", ctypes.c_void_p, [
	("tx",		ctypes.c_short),
	("ty",		ctypes.c_short),
	("tz",		ctypes.c_short),] )

PFNGLTANGENT3SVEXTPROC = _rpythonic_function_(		"PFNGLTANGENT3SVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLBINORMAL3BEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3BEXTPROC", ctypes.c_void_p, [
	("bx",		ctypes.c_char),
	("by",		ctypes.c_char),
	("bz",		ctypes.c_char),] )

PFNGLBINORMAL3BVEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3BVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLBINORMAL3DEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3DEXTPROC", ctypes.c_void_p, [
	("bx",		ctypes.c_double),
	("by",		ctypes.c_double),
	("bz",		ctypes.c_double),] )

PFNGLBINORMAL3DVEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3DVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLBINORMAL3FEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3FEXTPROC", ctypes.c_void_p, [
	("bx",		ctypes.c_float),
	("by",		ctypes.c_float),
	("bz",		ctypes.c_float),] )

PFNGLBINORMAL3FVEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3FVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLBINORMAL3IEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3IEXTPROC", ctypes.c_void_p, [
	("bx",		ctypes.c_int),
	("by",		ctypes.c_int),
	("bz",		ctypes.c_int),] )

PFNGLBINORMAL3IVEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3IVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLBINORMAL3SEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3SEXTPROC", ctypes.c_void_p, [
	("bx",		ctypes.c_short),
	("by",		ctypes.c_short),
	("bz",		ctypes.c_short),] )

PFNGLBINORMAL3SVEXTPROC = _rpythonic_function_(		"PFNGLBINORMAL3SVEXTPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLTANGENTPOINTEREXTPROC = _rpythonic_function_(		"PFNGLTANGENTPOINTEREXTPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLBINORMALPOINTEREXTPROC = _rpythonic_function_(		"PFNGLBINORMALPOINTEREXTPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLFINISHTEXTURESUNXPROC = _rpythonic_function_(		"PFNGLFINISHTEXTURESUNXPROC", ctypes.c_void_p, [] )

PFNGLGLOBALALPHAFACTORBSUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORBSUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_char),] )

PFNGLGLOBALALPHAFACTORSSUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORSSUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_short),] )

PFNGLGLOBALALPHAFACTORISUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORISUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_int),] )

PFNGLGLOBALALPHAFACTORFSUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORFSUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_float),] )

PFNGLGLOBALALPHAFACTORDSUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORDSUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_double),] )

PFNGLGLOBALALPHAFACTORUBSUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORUBSUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_ubyte),] )

PFNGLGLOBALALPHAFACTORUSSUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORUSSUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_ushort),] )

PFNGLGLOBALALPHAFACTORUISUNPROC = _rpythonic_function_(		"PFNGLGLOBALALPHAFACTORUISUNPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_uint),] )

PFNGLREPLACEMENTCODEUISUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUISUNPROC", ctypes.c_void_p, [
	("code",		ctypes.c_uint),] )

PFNGLREPLACEMENTCODEUSSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUSSUNPROC", ctypes.c_void_p, [
	("code",		ctypes.c_ushort),] )

PFNGLREPLACEMENTCODEUBSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUBSUNPROC", ctypes.c_void_p, [
	("code",		ctypes.c_ubyte),] )

PFNGLREPLACEMENTCODEUIVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUIVSUNPROC", ctypes.c_void_p, [
	("code",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLREPLACEMENTCODEUSVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUSVSUNPROC", ctypes.c_void_p, [
	("code",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLREPLACEMENTCODEUBVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUBVSUNPROC", ctypes.c_void_p, [
	("code",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLREPLACEMENTCODEPOINTERSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEPOINTERSUNPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLCOLOR4UBVERTEX2FSUNPROC = _rpythonic_function_(		"PFNGLCOLOR4UBVERTEX2FSUNPROC", ctypes.c_void_p, [
	("r",		ctypes.c_ubyte),
	("g",		ctypes.c_ubyte),
	("b",		ctypes.c_ubyte),
	("a",		ctypes.c_ubyte),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLCOLOR4UBVERTEX2FVSUNPROC = _rpythonic_function_(		"PFNGLCOLOR4UBVERTEX2FVSUNPROC", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLOR4UBVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLCOLOR4UBVERTEX3FSUNPROC", ctypes.c_void_p, [
	("r",		ctypes.c_ubyte),
	("g",		ctypes.c_ubyte),
	("b",		ctypes.c_ubyte),
	("a",		ctypes.c_ubyte),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLCOLOR4UBVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLCOLOR4UBVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLOR3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLCOLOR3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLCOLOR3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLCOLOR3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("a",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("c",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD2FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLTEXCOORD2FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD4FVERTEX4FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD4FVERTEX4FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("p",		ctypes.c_float),
	("q",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLTEXCOORD4FVERTEX4FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD4FVERTEX4FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_ubyte),
	("g",		ctypes.c_ubyte),
	("b",		ctypes.c_ubyte),
	("a",		ctypes.c_ubyte),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("c",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("c",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("a",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("c",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC", ctypes.c_void_p, [
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("p",		ctypes.c_float),
	("q",		ctypes.c_float),
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("a",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC = _rpythonic_function_(		"PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC", ctypes.c_void_p, [
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("c",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("r",		ctypes.c_ubyte),
	("g",		ctypes.c_ubyte),
	("b",		ctypes.c_ubyte),
	("a",		ctypes.c_ubyte),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("c",		ctypes.POINTER(ctypes.c_ubyte)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("c",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("a",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("c",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.c_uint),
	("s",		ctypes.c_float),
	("t",		ctypes.c_float),
	("r",		ctypes.c_float),
	("g",		ctypes.c_float),
	("b",		ctypes.c_float),
	("a",		ctypes.c_float),
	("nx",		ctypes.c_float),
	("ny",		ctypes.c_float),
	("nz",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC = _rpythonic_function_(		"PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC", ctypes.c_void_p, [
	("rc",		ctypes.POINTER(ctypes.c_uint)),
	("tc",		ctypes.POINTER(ctypes.c_float)),
	("c",		ctypes.POINTER(ctypes.c_float)),
	("n",		ctypes.POINTER(ctypes.c_float)),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLBLENDFUNCSEPARATEEXTPROC = _rpythonic_function_(		"PFNGLBLENDFUNCSEPARATEEXTPROC", ctypes.c_void_p, [
	("sfactorRGB",		ctypes.c_uint),
	("dfactorRGB",		ctypes.c_uint),
	("sfactorAlpha",		ctypes.c_uint),
	("dfactorAlpha",		ctypes.c_uint),] )

PFNGLBLENDFUNCSEPARATEINGRPROC = _rpythonic_function_(		"PFNGLBLENDFUNCSEPARATEINGRPROC", ctypes.c_void_p, [
	("sfactorRGB",		ctypes.c_uint),
	("dfactorRGB",		ctypes.c_uint),
	("sfactorAlpha",		ctypes.c_uint),
	("dfactorAlpha",		ctypes.c_uint),] )

PFNGLVERTEXWEIGHTFEXTPROC = _rpythonic_function_(		"PFNGLVERTEXWEIGHTFEXTPROC", ctypes.c_void_p, [
	("weight",		ctypes.c_float),] )

PFNGLCOPYTEXIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXIMAGE2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),] )

PFNGLCOPYTEXSUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXSUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLCOPYTEXSUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXSUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLCOPYTEXSUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXSUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETHISTOGRAMEXTPROC = _rpythonic_function_(		"PFNGLGETHISTOGRAMEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETHISTOGRAMPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETHISTOGRAMPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETHISTOGRAMPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETHISTOGRAMPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMINMAXEXTPROC = _rpythonic_function_(		"PFNGLGETMINMAXEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("reset",		ctypes.c_ubyte),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("values",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETMINMAXPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETMINMAXPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMINMAXPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETMINMAXPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLHISTOGRAMEXTPROC = _rpythonic_function_(		"PFNGLHISTOGRAMEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("sink",		ctypes.c_ubyte),] )

PFNGLMINMAXEXTPROC = _rpythonic_function_(		"PFNGLMINMAXEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("sink",		ctypes.c_ubyte),] )

PFNGLRESETHISTOGRAMEXTPROC = _rpythonic_function_(		"PFNGLRESETHISTOGRAMEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLRESETMINMAXEXTPROC = _rpythonic_function_(		"PFNGLRESETMINMAXEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLCONVOLUTIONFILTER1DEXTPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONFILTER1DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCONVOLUTIONFILTER2DEXTPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONFILTER2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCONVOLUTIONPARAMETERFEXTPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERFEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.c_float),] )

PFNGLCONVOLUTIONPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCONVOLUTIONPARAMETERIEXTPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERIEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.c_int),] )

PFNGLCONVOLUTIONPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLCONVOLUTIONPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETCONVOLUTIONFILTEREXTPROC = _rpythonic_function_(		"PFNGLGETCONVOLUTIONFILTEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("image",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETSEPARABLEFILTEREXTPROC = _rpythonic_function_(		"PFNGLGETSEPARABLEFILTEREXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("column",		ctypes.POINTER(ctypes.c_void_p)),
	("span",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLSEPARABLEFILTER2DEXTPROC = _rpythonic_function_(		"PFNGLSEPARABLEFILTER2DEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("row",		ctypes.POINTER(ctypes.c_void_p)),
	("column",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOLORTABLESGIPROC = _rpythonic_function_(		"PFNGLCOLORTABLESGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOLORTABLEPARAMETERFVSGIPROC = _rpythonic_function_(		"PFNGLCOLORTABLEPARAMETERFVSGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLCOLORTABLEPARAMETERIVSGIPROC = _rpythonic_function_(		"PFNGLCOLORTABLEPARAMETERIVSGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOPYCOLORTABLESGIPROC = _rpythonic_function_(		"PFNGLCOPYCOLORTABLESGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLGETCOLORTABLESGIPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLESGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("table",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOLORTABLEPARAMETERFVSGIPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPARAMETERFVSGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETCOLORTABLEPARAMETERIVSGIPROC = _rpythonic_function_(		"PFNGLGETCOLORTABLEPARAMETERIVSGIPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPIXELTEXGENSGIXPROC = _rpythonic_function_(		"PFNGLPIXELTEXGENSGIXPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLPIXELTEXGENPARAMETERISGISPROC = _rpythonic_function_(		"PFNGLPIXELTEXGENPARAMETERISGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLPIXELTEXGENPARAMETERIVSGISPROC = _rpythonic_function_(		"PFNGLPIXELTEXGENPARAMETERIVSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPIXELTEXGENPARAMETERFSGISPROC = _rpythonic_function_(		"PFNGLPIXELTEXGENPARAMETERFSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLPIXELTEXGENPARAMETERFVSGISPROC = _rpythonic_function_(		"PFNGLPIXELTEXGENPARAMETERFVSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC = _rpythonic_function_(		"PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC = _rpythonic_function_(		"PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXIMAGE4DSGISPROC = _rpythonic_function_(		"PFNGLTEXIMAGE4DSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("size4d",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXSUBIMAGE4DSGISPROC = _rpythonic_function_(		"PFNGLTEXSUBIMAGE4DSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("woffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("size4d",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLARETEXTURESRESIDENTEXTPROC = _rpythonic_function_(		"PFNGLARETEXTURESRESIDENTEXTPROC", ctypes.c_ubyte, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),
	("residences",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLBINDTEXTUREEXTPROC = _rpythonic_function_(		"PFNGLBINDTEXTUREEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("texture",		ctypes.c_uint),] )

PFNGLDELETETEXTURESEXTPROC = _rpythonic_function_(		"PFNGLDELETETEXTURESEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENTEXTURESEXTPROC = _rpythonic_function_(		"PFNGLGENTEXTURESEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISTEXTUREEXTPROC = _rpythonic_function_(		"PFNGLISTEXTUREEXTPROC", ctypes.c_ubyte, [
	("texture",		ctypes.c_uint),] )

PFNGLPRIORITIZETEXTURESEXTPROC = _rpythonic_function_(		"PFNGLPRIORITIZETEXTURESEXTPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("textures",		ctypes.POINTER(ctypes.c_uint)),
	("priorities",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLDETAILTEXFUNCSGISPROC = _rpythonic_function_(		"PFNGLDETAILTEXFUNCSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETDETAILTEXFUNCSGISPROC = _rpythonic_function_(		"PFNGLGETDETAILTEXFUNCSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSHARPENTEXFUNCSGISPROC = _rpythonic_function_(		"PFNGLSHARPENTEXFUNCSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETSHARPENTEXFUNCSGISPROC = _rpythonic_function_(		"PFNGLGETSHARPENTEXFUNCSGISPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("points",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSAMPLEMASKSGISPROC = _rpythonic_function_(		"PFNGLSAMPLEMASKSGISPROC", ctypes.c_void_p, [
	("value",		ctypes.c_float),
	("invert",		ctypes.c_ubyte),] )

PFNGLSAMPLEPATTERNSGISPROC = _rpythonic_function_(		"PFNGLSAMPLEPATTERNSGISPROC", ctypes.c_void_p, [
	("pattern",		ctypes.c_uint),] )

PFNGLARRAYELEMENTEXTPROC = _rpythonic_function_(		"PFNGLARRAYELEMENTEXTPROC", ctypes.c_void_p, [
	("i",		ctypes.c_int),] )

PFNGLCOLORPOINTEREXTPROC = _rpythonic_function_(		"PFNGLCOLORPOINTEREXTPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("count",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLDRAWARRAYSEXTPROC = _rpythonic_function_(		"PFNGLDRAWARRAYSEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.c_int),
	("count",		ctypes.c_int),] )

PFNGLEDGEFLAGPOINTEREXTPROC = _rpythonic_function_(		"PFNGLEDGEFLAGPOINTEREXTPROC", ctypes.c_void_p, [
	("stride",		ctypes.c_int),
	("count",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETPOINTERVEXTPROC = _rpythonic_function_(		"PFNGLGETPOINTERVEXTPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLINDEXPOINTEREXTPROC = _rpythonic_function_(		"PFNGLINDEXPOINTEREXTPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("count",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLNORMALPOINTEREXTPROC = _rpythonic_function_(		"PFNGLNORMALPOINTEREXTPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("count",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXCOORDPOINTEREXTPROC = _rpythonic_function_(		"PFNGLTEXCOORDPOINTEREXTPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("count",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLVERTEXPOINTEREXTPROC = _rpythonic_function_(		"PFNGLVERTEXPOINTEREXTPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("count",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLBLENDEQUATIONEXTPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLSPRITEPARAMETERFSGIXPROC = _rpythonic_function_(		"PFNGLSPRITEPARAMETERFSGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLSPRITEPARAMETERFVSGIXPROC = _rpythonic_function_(		"PFNGLSPRITEPARAMETERFVSGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSPRITEPARAMETERISGIXPROC = _rpythonic_function_(		"PFNGLSPRITEPARAMETERISGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLSPRITEPARAMETERIVSGIXPROC = _rpythonic_function_(		"PFNGLSPRITEPARAMETERIVSGIXPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPOINTPARAMETERFEXTPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFEXTPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLPOINTPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPOINTPARAMETERFSGISPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLPOINTPARAMETERFVSGISPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFVSGISPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETINSTRUMENTSSGIXPROC = _rpythonic_function_(		"PFNGLGETINSTRUMENTSSGIXPROC", ctypes.c_int, [] )

PFNGLINSTRUMENTSBUFFERSGIXPROC = _rpythonic_function_(		"PFNGLINSTRUMENTSBUFFERSGIXPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("buffer",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPOLLINSTRUMENTSSGIXPROC = _rpythonic_function_(		"PFNGLPOLLINSTRUMENTSSGIXPROC", ctypes.c_int, [
	("marker_p",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLREADINSTRUMENTSSGIXPROC = _rpythonic_function_(		"PFNGLREADINSTRUMENTSSGIXPROC", ctypes.c_void_p, [
	("marker",		ctypes.c_int),] )

PFNGLSTARTINSTRUMENTSSGIXPROC = _rpythonic_function_(		"PFNGLSTARTINSTRUMENTSSGIXPROC", ctypes.c_void_p, [] )

PFNGLSTOPINSTRUMENTSSGIXPROC = _rpythonic_function_(		"PFNGLSTOPINSTRUMENTSSGIXPROC", ctypes.c_void_p, [
	("marker",		ctypes.c_int),] )

PFNGLFRAMEZOOMSGIXPROC = _rpythonic_function_(		"PFNGLFRAMEZOOMSGIXPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_int),] )

PFNGLTAGSAMPLEBUFFERSGIXPROC = _rpythonic_function_(		"PFNGLTAGSAMPLEBUFFERSGIXPROC", ctypes.c_void_p, [] )

PFNGLDEFORMATIONMAP3DSGIXPROC = _rpythonic_function_(		"PFNGLDEFORMATIONMAP3DSGIXPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("u1",		ctypes.c_double),
	("u2",		ctypes.c_double),
	("ustride",		ctypes.c_int),
	("uorder",		ctypes.c_int),
	("v1",		ctypes.c_double),
	("v2",		ctypes.c_double),
	("vstride",		ctypes.c_int),
	("vorder",		ctypes.c_int),
	("w1",		ctypes.c_double),
	("w2",		ctypes.c_double),
	("wstride",		ctypes.c_int),
	("worder",		ctypes.c_int),
	("points",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETTEXTUREIMAGEEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTUREIMAGEEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETTEXTUREPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTUREPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETTEXTUREPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTUREPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXTUREIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXTURESUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLTEXTURESUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLMULTITEXPARAMETERFEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXPARAMETERFEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLMULTITEXPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXPARAMETERIEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXPARAMETERIEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLMULTITEXPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMULTITEXIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMULTITEXSUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXSUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMULTITEXSUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXSUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYMULTITEXIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYMULTITEXIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),] )

PFNGLCOPYMULTITEXIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYMULTITEXIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),] )

PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),] )

PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETMULTITEXIMAGEEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXIMAGEEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETMULTITEXPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMULTITEXPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMULTITEXSUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXSUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLBINDMULTITEXTUREEXTPROC = _rpythonic_function_(		"PFNGLBINDMULTITEXTUREEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("texture",		ctypes.c_uint),] )

PFNGLENABLECLIENTSTATEINDEXEDEXTPROC = _rpythonic_function_(		"PFNGLENABLECLIENTSTATEINDEXEDEXTPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC = _rpythonic_function_(		"PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC", ctypes.c_void_p, [
	("array",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLMULTITEXCOORDPOINTEREXTPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDPOINTEREXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMULTITEXENVFEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXENVFEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLMULTITEXENVFVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXENVFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXENVIEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXENVIEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLMULTITEXENVIVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXENVIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXGENDEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXGENDEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_double),] )

PFNGLMULTITEXGENDVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXGENDVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMULTITEXGENFEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXGENFEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLMULTITEXGENFVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXGENFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTITEXGENIEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXGENIEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLMULTITEXGENIVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXGENIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMULTITEXENVFVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXENVFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMULTITEXENVIVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXENVIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMULTITEXGENDVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXGENDVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETMULTITEXGENFVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXGENFVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETMULTITEXGENIVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXGENIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("coord",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETFLOATINDEXEDVEXTPROC = _rpythonic_function_(		"PFNGLGETFLOATINDEXEDVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETDOUBLEINDEXEDVEXTPROC = _rpythonic_function_(		"PFNGLGETDOUBLEINDEXEDVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETPOINTERINDEXEDVEXTPROC = _rpythonic_function_(		"PFNGLGETPOINTERINDEXEDVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC = _rpythonic_function_(		"PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCOLORMASKINDEXEDEXTPROC = _rpythonic_function_(		"PFNGLCOLORMASKINDEXEDEXTPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("r",		ctypes.c_ubyte),
	("g",		ctypes.c_ubyte),
	("b",		ctypes.c_ubyte),
	("a",		ctypes.c_ubyte),] )

PFNGLGETBOOLEANINDEXEDVEXTPROC = _rpythonic_function_(		"PFNGLGETBOOLEANINDEXEDVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLGETINTEGERINDEXEDVEXTPROC = _rpythonic_function_(		"PFNGLGETINTEGERINDEXEDVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLENABLEINDEXEDEXTPROC = _rpythonic_function_(		"PFNGLENABLEINDEXEDEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLDISABLEINDEXEDEXTPROC = _rpythonic_function_(		"PFNGLDISABLEINDEXEDEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLISENABLEDINDEXEDEXTPROC = _rpythonic_function_(		"PFNGLISENABLEDINDEXEDEXTPROC", ctypes.c_ubyte, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),] )

PFNGLBEGINTRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLBEGINTRANSFORMFEEDBACKNVPROC", ctypes.c_void_p, [
	("primitiveMode",		ctypes.c_uint),] )

PFNGLENDTRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLENDTRANSFORMFEEDBACKNVPROC", ctypes.c_void_p, [] )

PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC = _rpythonic_function_(		"PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC", ctypes.c_void_p, [
	("count",		ctypes.c_uint),
	("attribs",		ctypes.POINTER(ctypes.c_int)),
	("bufferMode",		ctypes.c_uint),] )

PFNGLBINDBUFFERRANGENVPROC = _rpythonic_function_(		"PFNGLBINDBUFFERRANGENVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),] )

PFNGLBINDBUFFEROFFSETNVPROC = _rpythonic_function_(		"PFNGLBINDBUFFEROFFSETNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),] )

PFNGLBINDBUFFERBASENVPROC = _rpythonic_function_(		"PFNGLBINDBUFFERBASENVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC = _rpythonic_function_(		"PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("locations",		ctypes.POINTER(ctypes.c_int)),
	("bufferMode",		ctypes.c_uint),] )

PFNGLACTIVEVARYINGNVPROC = _rpythonic_function_(		"PFNGLACTIVEVARYINGNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETVARYINGLOCATIONNVPROC = _rpythonic_function_(		"PFNGLGETVARYINGLOCATIONNVPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVEVARYINGNVPROC = _rpythonic_function_(		"PFNGLGETACTIVEVARYINGNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC = _rpythonic_function_(		"PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("location",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC = _rpythonic_function_(		"PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC", ctypes.c_void_p, [
	("count",		ctypes.c_int),
	("attribs",		ctypes.POINTER(ctypes.c_int)),
	("nbuffers",		ctypes.c_int),
	("bufstreams",		ctypes.POINTER(ctypes.c_int)),
	("bufferMode",		ctypes.c_uint),] )

PFNGLUNIFORMBUFFEREXTPROC = _rpythonic_function_(		"PFNGLUNIFORMBUFFEREXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("buffer",		ctypes.c_uint),] )

PFNGLGETUNIFORMBUFFERSIZEEXTPROC = _rpythonic_function_(		"PFNGLGETUNIFORMBUFFERSIZEEXTPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),] )

PFNGLGETUNIFORMOFFSETEXTPROC = _rpythonic_function_(		"PFNGLGETUNIFORMOFFSETEXTPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),] )

PFNGLTEXPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLTEXPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLTEXPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETTEXPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETTEXPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCLEARCOLORIIEXTPROC = _rpythonic_function_(		"PFNGLCLEARCOLORIIEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_int),
	("green",		ctypes.c_int),
	("blue",		ctypes.c_int),
	("alpha",		ctypes.c_int),] )

PFNGLCLEARCOLORIUIEXTPROC = _rpythonic_function_(		"PFNGLCLEARCOLORIUIEXTPROC", ctypes.c_void_p, [
	("red",		ctypes.c_uint),
	("green",		ctypes.c_uint),
	("blue",		ctypes.c_uint),
	("alpha",		ctypes.c_uint),] )

PFNGLFRAMETERMINATORGREMEDYPROC = _rpythonic_function_(		"PFNGLFRAMETERMINATORGREMEDYPROC", ctypes.c_void_p, [] )

PFNGLBEGINCONDITIONALRENDERNVPROC = _rpythonic_function_(		"PFNGLBEGINCONDITIONALRENDERNVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLENDCONDITIONALRENDERNVPROC = _rpythonic_function_(		"PFNGLENDCONDITIONALRENDERNVPROC", ctypes.c_void_p, [] )

PFNGLPRESENTFRAMEKEYEDNVPROC = _rpythonic_function_(		"PFNGLPRESENTFRAMEKEYEDNVPROC", ctypes.c_void_p, [
	("video_slot",		ctypes.c_uint),
	("minPresentTime",		ctypes.c_uint64),
	("beginPresentTimeId",		ctypes.c_uint),
	("presentDurationId",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("target0",		ctypes.c_uint),
	("fill0",		ctypes.c_uint),
	("key0",		ctypes.c_uint),
	("target1",		ctypes.c_uint),
	("fill1",		ctypes.c_uint),
	("key1",		ctypes.c_uint),] )

PFNGLPRESENTFRAMEDUALFILLNVPROC = _rpythonic_function_(		"PFNGLPRESENTFRAMEDUALFILLNVPROC", ctypes.c_void_p, [
	("video_slot",		ctypes.c_uint),
	("minPresentTime",		ctypes.c_uint64),
	("beginPresentTimeId",		ctypes.c_uint),
	("presentDurationId",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("target0",		ctypes.c_uint),
	("fill0",		ctypes.c_uint),
	("target1",		ctypes.c_uint),
	("fill1",		ctypes.c_uint),
	("target2",		ctypes.c_uint),
	("fill2",		ctypes.c_uint),
	("target3",		ctypes.c_uint),
	("fill3",		ctypes.c_uint),] )

PFNGLGETVIDEOIVNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOIVNVPROC", ctypes.c_void_p, [
	("video_slot",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVIDEOUIVNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOUIVNVPROC", ctypes.c_void_p, [
	("video_slot",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETVIDEOI64VNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOI64VNVPROC", ctypes.c_void_p, [
	("video_slot",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLGETVIDEOUI64VNVPROC = _rpythonic_function_(		"PFNGLGETVIDEOUI64VNVPROC", ctypes.c_void_p, [
	("video_slot",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLBEGINTRANSFORMFEEDBACKEXTPROC = _rpythonic_function_(		"PFNGLBEGINTRANSFORMFEEDBACKEXTPROC", ctypes.c_void_p, [
	("primitiveMode",		ctypes.c_uint),] )

PFNGLENDTRANSFORMFEEDBACKEXTPROC = _rpythonic_function_(		"PFNGLENDTRANSFORMFEEDBACKEXTPROC", ctypes.c_void_p, [] )

PFNGLBINDBUFFERRANGEEXTPROC = _rpythonic_function_(		"PFNGLBINDBUFFERRANGEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),] )

PFNGLBINDBUFFEROFFSETEXTPROC = _rpythonic_function_(		"PFNGLBINDBUFFEROFFSETEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),] )

PFNGLBINDBUFFERBASEEXTPROC = _rpythonic_function_(		"PFNGLBINDBUFFERBASEEXTPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC = _rpythonic_function_(		"PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("varyings",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("bufferMode",		ctypes.c_uint),] )

PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC = _rpythonic_function_(		"PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLCLIENTATTRIBDEFAULTEXTPROC = _rpythonic_function_(		"PFNGLCLIENTATTRIBDEFAULTEXTPROC", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC = _rpythonic_function_(		"PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC", ctypes.c_void_p, [
	("mask",		ctypes.c_uint),] )

PFNGLMATRIXLOADFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXLOADFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMATRIXLOADDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXLOADDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMATRIXMULTFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXMULTFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMATRIXMULTDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXMULTDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMATRIXLOADIDENTITYEXTPROC = _rpythonic_function_(		"PFNGLMATRIXLOADIDENTITYEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLMATRIXROTATEFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXROTATEFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("angle",		ctypes.c_float),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLMATRIXROTATEDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXROTATEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("angle",		ctypes.c_double),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLMATRIXSCALEFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXSCALEFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLMATRIXSCALEDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXSCALEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLMATRIXTRANSLATEFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXTRANSLATEFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLMATRIXTRANSLATEDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXTRANSLATEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLMATRIXFRUSTUMEXTPROC = _rpythonic_function_(		"PFNGLMATRIXFRUSTUMEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("left",		ctypes.c_double),
	("right",		ctypes.c_double),
	("bottom",		ctypes.c_double),
	("top",		ctypes.c_double),
	("zNear",		ctypes.c_double),
	("zFar",		ctypes.c_double),] )

PFNGLMATRIXORTHOEXTPROC = _rpythonic_function_(		"PFNGLMATRIXORTHOEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("left",		ctypes.c_double),
	("right",		ctypes.c_double),
	("bottom",		ctypes.c_double),
	("top",		ctypes.c_double),
	("zNear",		ctypes.c_double),
	("zFar",		ctypes.c_double),] )

PFNGLMATRIXPOPEXTPROC = _rpythonic_function_(		"PFNGLMATRIXPOPEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLMATRIXPUSHEXTPROC = _rpythonic_function_(		"PFNGLMATRIXPUSHEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLMATRIXLOADTRANSPOSEFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXLOADTRANSPOSEFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMATRIXLOADTRANSPOSEDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXLOADTRANSPOSEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLMATRIXMULTTRANSPOSEFEXTPROC = _rpythonic_function_(		"PFNGLMATRIXMULTTRANSPOSEFEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMATRIXMULTTRANSPOSEDEXTPROC = _rpythonic_function_(		"PFNGLMATRIXMULTTRANSPOSEDEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLTEXTUREPARAMETERFEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREPARAMETERFEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLTEXTUREPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLTEXTUREPARAMETERIEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREPARAMETERIEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLTEXTUREPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXTUREIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXTUREIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXTURESUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLTEXTURESUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXTURESUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLTEXTURESUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("pixels",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOPYTEXTUREIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXTUREIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),] )

PFNGLCOPYTEXTUREIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOPYTEXTUREIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),] )

PFNGLMULTTRANSPOSEMATRIXFPROC = _rpythonic_function_(		"PFNGLMULTTRANSPOSEMATRIXFPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLMULTTRANSPOSEMATRIXDPROC = _rpythonic_function_(		"PFNGLMULTTRANSPOSEMATRIXDPROC", ctypes.c_void_p, [
	("m",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLBLENDFUNCSEPARATEPROC = _rpythonic_function_(		"PFNGLBLENDFUNCSEPARATEPROC", ctypes.c_void_p, [
	("sfactorRGB",		ctypes.c_uint),
	("dfactorRGB",		ctypes.c_uint),
	("sfactorAlpha",		ctypes.c_uint),
	("dfactorAlpha",		ctypes.c_uint),] )

PFNGLMULTIDRAWARRAYSPROC = _rpythonic_function_(		"PFNGLMULTIDRAWARRAYSPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("first",		ctypes.POINTER(ctypes.c_int)),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("primcount",		ctypes.c_int),] )

PFNGLMULTIDRAWELEMENTSPROC = _rpythonic_function_(		"PFNGLMULTIDRAWELEMENTSPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.c_uint),
	("indices",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),
	("primcount",		ctypes.c_int),] )

PFNGLPOINTPARAMETERFPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLPOINTPARAMETERFVPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERFVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPOINTPARAMETERIPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERIPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLPOINTPARAMETERIVPROC = _rpythonic_function_(		"PFNGLPOINTPARAMETERIVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLFOGCOORDFPROC = _rpythonic_function_(		"PFNGLFOGCOORDFPROC", ctypes.c_void_p, [
	("coord",		ctypes.c_float),] )

PFNGLFOGCOORDFVPROC = _rpythonic_function_(		"PFNGLFOGCOORDFVPROC", ctypes.c_void_p, [
	("coord",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLFOGCOORDDPROC = _rpythonic_function_(		"PFNGLFOGCOORDDPROC", ctypes.c_void_p, [
	("coord",		ctypes.c_double),] )

PFNGLFOGCOORDDVPROC = _rpythonic_function_(		"PFNGLFOGCOORDDVPROC", ctypes.c_void_p, [
	("coord",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLFOGCOORDPOINTERPROC = _rpythonic_function_(		"PFNGLFOGCOORDPOINTERPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLSECONDARYCOLOR3BPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3BPROC", ctypes.c_void_p, [
	("red",		ctypes.c_char),
	("green",		ctypes.c_char),
	("blue",		ctypes.c_char),] )

PFNGLSECONDARYCOLOR3BVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3BVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLSECONDARYCOLOR3DPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3DPROC", ctypes.c_void_p, [
	("red",		ctypes.c_double),
	("green",		ctypes.c_double),
	("blue",		ctypes.c_double),] )

PFNGLSECONDARYCOLOR3DVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3DVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLSECONDARYCOLOR3FPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3FPROC", ctypes.c_void_p, [
	("red",		ctypes.c_float),
	("green",		ctypes.c_float),
	("blue",		ctypes.c_float),] )

PFNGLSECONDARYCOLOR3FVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3FVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSECONDARYCOLOR3IPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3IPROC", ctypes.c_void_p, [
	("red",		ctypes.c_int),
	("green",		ctypes.c_int),
	("blue",		ctypes.c_int),] )

PFNGLSECONDARYCOLOR3IVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3IVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLSECONDARYCOLOR3SPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3SPROC", ctypes.c_void_p, [
	("red",		ctypes.c_short),
	("green",		ctypes.c_short),
	("blue",		ctypes.c_short),] )

PFNGLSECONDARYCOLOR3SVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3SVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLSECONDARYCOLOR3UBPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UBPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ubyte),
	("green",		ctypes.c_ubyte),
	("blue",		ctypes.c_ubyte),] )

PFNGLSECONDARYCOLOR3UBVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UBVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLSECONDARYCOLOR3UIPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UIPROC", ctypes.c_void_p, [
	("red",		ctypes.c_uint),
	("green",		ctypes.c_uint),
	("blue",		ctypes.c_uint),] )

PFNGLSECONDARYCOLOR3UIVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3UIVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLSECONDARYCOLOR3USPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3USPROC", ctypes.c_void_p, [
	("red",		ctypes.c_ushort),
	("green",		ctypes.c_ushort),
	("blue",		ctypes.c_ushort),] )

PFNGLSECONDARYCOLOR3USVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLOR3USVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLSECONDARYCOLORPOINTERPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLORPOINTERPROC", ctypes.c_void_p, [
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLWINDOWPOS2DPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2DPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLWINDOWPOS2DVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2DVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS2FPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2FPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLWINDOWPOS2FVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2FVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS2IPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2IPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

PFNGLWINDOWPOS2IVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2IVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS2SPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2SPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLWINDOWPOS2SVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS2SVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLWINDOWPOS3DPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3DPROC", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLWINDOWPOS3DVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3DVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLWINDOWPOS3FPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3FPROC", ctypes.c_void_p, [
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLWINDOWPOS3FVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3FVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLWINDOWPOS3IPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3IPROC", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),] )

PFNGLWINDOWPOS3IVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3IVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLWINDOWPOS3SPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3SPROC", ctypes.c_void_p, [
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLWINDOWPOS3SVPROC = _rpythonic_function_(		"PFNGLWINDOWPOS3SVPROC", ctypes.c_void_p, [
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLGENQUERIESPROC = _rpythonic_function_(		"PFNGLGENQUERIESPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETEQUERIESPROC = _rpythonic_function_(		"PFNGLDELETEQUERIESPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISQUERYPROC = _rpythonic_function_(		"PFNGLISQUERYPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),] )

PFNGLBEGINQUERYPROC = _rpythonic_function_(		"PFNGLBEGINQUERYPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLENDQUERYPROC = _rpythonic_function_(		"PFNGLENDQUERYPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLGETQUERYIVPROC = _rpythonic_function_(		"PFNGLGETQUERYIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETQUERYOBJECTIVPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTIVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETQUERYOBJECTUIVPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTUIVPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLBINDBUFFERPROC = _rpythonic_function_(		"PFNGLBINDBUFFERPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLDELETEBUFFERSPROC = _rpythonic_function_(		"PFNGLDELETEBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("buffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENBUFFERSPROC = _rpythonic_function_(		"PFNGLGENBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("buffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISBUFFERPROC = _rpythonic_function_(		"PFNGLISBUFFERPROC", ctypes.c_ubyte, [
	("buffer",		ctypes.c_uint),] )

PFNGLBUFFERDATAPROC = _rpythonic_function_(		"PFNGLBUFFERDATAPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),
	("usage",		ctypes.c_uint),] )

PFNGLBUFFERSUBDATAPROC = _rpythonic_function_(		"PFNGLBUFFERSUBDATAPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETBUFFERSUBDATAPROC = _rpythonic_function_(		"PFNGLGETBUFFERSUBDATAPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMAPBUFFERPROC = _rpythonic_function_(		"PFNGLMAPBUFFERPROC", ctypes.POINTER(ctypes.c_void_p), [
	("target",		ctypes.c_uint),
	("access",		ctypes.c_uint),] )

PFNGLUNMAPBUFFERPROC = _rpythonic_function_(		"PFNGLUNMAPBUFFERPROC", ctypes.c_ubyte, [
	("target",		ctypes.c_uint),] )

PFNGLGETBUFFERPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETBUFFERPARAMETERIVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETBUFFERPOINTERVPROC = _rpythonic_function_(		"PFNGLGETBUFFERPOINTERVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLBLENDEQUATIONSEPARATEPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONSEPARATEPROC", ctypes.c_void_p, [
	("modeRGB",		ctypes.c_uint),
	("modeAlpha",		ctypes.c_uint),] )

PFNGLDRAWBUFFERSPROC = _rpythonic_function_(		"PFNGLDRAWBUFFERSPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("bufs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLSTENCILOPSEPARATEPROC = _rpythonic_function_(		"PFNGLSTENCILOPSEPARATEPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("sfail",		ctypes.c_uint),
	("dpfail",		ctypes.c_uint),
	("dppass",		ctypes.c_uint),] )

PFNGLSTENCILFUNCSEPARATEPROC = _rpythonic_function_(		"PFNGLSTENCILFUNCSEPARATEPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("func",		ctypes.c_uint),
	("ref",		ctypes.c_int),
	("mask",		ctypes.c_uint),] )

PFNGLSTENCILMASKSEPARATEPROC = _rpythonic_function_(		"PFNGLSTENCILMASKSEPARATEPROC", ctypes.c_void_p, [
	("face",		ctypes.c_uint),
	("mask",		ctypes.c_uint),] )

PFNGLATTACHSHADERPROC = _rpythonic_function_(		"PFNGLATTACHSHADERPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("shader",		ctypes.c_uint),] )

PFNGLBINDATTRIBLOCATIONPROC = _rpythonic_function_(		"PFNGLBINDATTRIBLOCATIONPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLCOMPILESHADERPROC = _rpythonic_function_(		"PFNGLCOMPILESHADERPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),] )

PFNGLCREATEPROGRAMPROC = _rpythonic_function_(		"PFNGLCREATEPROGRAMPROC", ctypes.c_uint, [] )

PFNGLCREATESHADERPROC = _rpythonic_function_(		"PFNGLCREATESHADERPROC", ctypes.c_uint, [
	("C_type",		ctypes.c_uint),] )

PFNGLDELETEPROGRAMPROC = _rpythonic_function_(		"PFNGLDELETEPROGRAMPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),] )

PFNGLDELETESHADERPROC = _rpythonic_function_(		"PFNGLDELETESHADERPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),] )

PFNGLDETACHSHADERPROC = _rpythonic_function_(		"PFNGLDETACHSHADERPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("shader",		ctypes.c_uint),] )

PFNGLDISABLEVERTEXATTRIBARRAYPROC = _rpythonic_function_(		"PFNGLDISABLEVERTEXATTRIBARRAYPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),] )

PFNGLENABLEVERTEXATTRIBARRAYPROC = _rpythonic_function_(		"PFNGLENABLEVERTEXATTRIBARRAYPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),] )

PFNGLGETACTIVEATTRIBPROC = _rpythonic_function_(		"PFNGLGETACTIVEATTRIBPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETACTIVEUNIFORMPROC = _rpythonic_function_(		"PFNGLGETACTIVEUNIFORMPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("size",		ctypes.POINTER(ctypes.c_int)),
	("C_type",		ctypes.POINTER(ctypes.c_uint)),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETATTACHEDSHADERSPROC = _rpythonic_function_(		"PFNGLGETATTACHEDSHADERSPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("maxCount",		ctypes.c_int),
	("count",		ctypes.POINTER(ctypes.c_int)),
	("obj",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETATTRIBLOCATIONPROC = _rpythonic_function_(		"PFNGLGETATTRIBLOCATIONPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETPROGRAMIVPROC = _rpythonic_function_(		"PFNGLGETPROGRAMIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETPROGRAMINFOLOGPROC = _rpythonic_function_(		"PFNGLGETPROGRAMINFOLOGPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("infoLog",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETSHADERIVPROC = _rpythonic_function_(		"PFNGLGETSHADERIVPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETSHADERINFOLOGPROC = _rpythonic_function_(		"PFNGLGETSHADERINFOLOGPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("infoLog",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETSHADERSOURCEPROC = _rpythonic_function_(		"PFNGLGETSHADERSOURCEPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("source",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETUNIFORMLOCATIONPROC = _rpythonic_function_(		"PFNGLGETUNIFORMLOCATIONPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETUNIFORMFVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMFVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETUNIFORMIVPROC = _rpythonic_function_(		"PFNGLGETUNIFORMIVPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBDVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBDVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETVERTEXATTRIBFVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBFVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVERTEXATTRIBIVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBPOINTERVPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBPOINTERVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

gluDeleteTess = _rpythonic_function_(		"gluDeleteTess", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),] )

gluDisk = _rpythonic_function_(		"gluDisk", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("inner",		ctypes.c_double),
	("outer",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("loops",		ctypes.c_int),] )

gluEndCurve = _rpythonic_function_(		"gluEndCurve", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluEndPolygon = _rpythonic_function_(		"gluEndPolygon", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),] )

gluEndSurface = _rpythonic_function_(		"gluEndSurface", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluEndTrim = _rpythonic_function_(		"gluEndTrim", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),] )

gluErrorString = _rpythonic_function_(		"gluErrorString", ctypes.POINTER(ctypes.c_ubyte), [
	("error",		ctypes.c_uint),] )

gluGetNurbsProperty = _rpythonic_function_(		"gluGetNurbsProperty", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("property",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_float)),] )

gluGetString = _rpythonic_function_(		"gluGetString", ctypes.POINTER(ctypes.c_ubyte), [
	("name",		ctypes.c_uint),] )

gluGetTessProperty = _rpythonic_function_(		"gluGetTessProperty", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("which",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_double)),] )

gluLoadSamplingMatrices = _rpythonic_function_(		"gluLoadSamplingMatrices", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("model",		ctypes.POINTER(ctypes.c_float)),
	("perspective",		ctypes.POINTER(ctypes.c_float)),
	("view",		ctypes.POINTER(ctypes.c_int)),] )

gluLookAt = _rpythonic_function_(		"gluLookAt", ctypes.c_void_p, [
	("eyeX",		ctypes.c_double),
	("eyeY",		ctypes.c_double),
	("eyeZ",		ctypes.c_double),
	("centerX",		ctypes.c_double),
	("centerY",		ctypes.c_double),
	("centerZ",		ctypes.c_double),
	("upX",		ctypes.c_double),
	("upY",		ctypes.c_double),
	("upZ",		ctypes.c_double),] )

gluNewNurbsRenderer = _rpythonic_function_(		"gluNewNurbsRenderer", ctypes.POINTER(GLUnurbs), [] )

gluNewQuadric = _rpythonic_function_(		"gluNewQuadric", ctypes.POINTER(GLUquadric), [] )

gluNewTess = _rpythonic_function_(		"gluNewTess", ctypes.POINTER(GLUtesselator), [] )

gluNextContour = _rpythonic_function_(		"gluNextContour", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("C_type",		ctypes.c_uint),] )

gluNurbsCallback = _rpythonic_function_(		"gluNurbsCallback", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("which",		ctypes.c_uint),
	("CallBackFunc",		ctypes.CFUNCTYPE(ctypes.c_void_p, )),] )

gluNurbsCallbackData = _rpythonic_function_(		"gluNurbsCallbackData", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("userData",		ctypes.POINTER(ctypes.c_void_p)),] )

gluNurbsCallbackDataEXT = _rpythonic_function_(		"gluNurbsCallbackDataEXT", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("userData",		ctypes.POINTER(ctypes.c_void_p)),] )

gluNurbsCurve = _rpythonic_function_(		"gluNurbsCurve", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("knotCount",		ctypes.c_int),
	("knots",		ctypes.POINTER(ctypes.c_float)),
	("stride",		ctypes.c_int),
	("control",		ctypes.POINTER(ctypes.c_float)),
	("order",		ctypes.c_int),
	("C_type",		ctypes.c_uint),] )

gluNurbsProperty = _rpythonic_function_(		"gluNurbsProperty", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("property",		ctypes.c_uint),
	("value",		ctypes.c_float),] )

gluNurbsSurface = _rpythonic_function_(		"gluNurbsSurface", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("sKnotCount",		ctypes.c_int),
	("sKnots",		ctypes.POINTER(ctypes.c_float)),
	("tKnotCount",		ctypes.c_int),
	("tKnots",		ctypes.POINTER(ctypes.c_float)),
	("sStride",		ctypes.c_int),
	("tStride",		ctypes.c_int),
	("control",		ctypes.POINTER(ctypes.c_float)),
	("sOrder",		ctypes.c_int),
	("tOrder",		ctypes.c_int),
	("C_type",		ctypes.c_uint),] )

gluOrtho2D = _rpythonic_function_(		"gluOrtho2D", ctypes.c_void_p, [
	("left",		ctypes.c_double),
	("right",		ctypes.c_double),
	("bottom",		ctypes.c_double),
	("top",		ctypes.c_double),] )

gluPartialDisk = _rpythonic_function_(		"gluPartialDisk", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("inner",		ctypes.c_double),
	("outer",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("loops",		ctypes.c_int),
	("start",		ctypes.c_double),
	("sweep",		ctypes.c_double),] )

gluPerspective = _rpythonic_function_(		"gluPerspective", ctypes.c_void_p, [
	("fovy",		ctypes.c_double),
	("aspect",		ctypes.c_double),
	("zNear",		ctypes.c_double),
	("zFar",		ctypes.c_double),] )

gluPickMatrix = _rpythonic_function_(		"gluPickMatrix", ctypes.c_void_p, [
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("delX",		ctypes.c_double),
	("delY",		ctypes.c_double),
	("viewport",		ctypes.POINTER(ctypes.c_int)),] )

gluProject = _rpythonic_function_(		"gluProject", ctypes.c_int, [
	("objX",		ctypes.c_double),
	("objY",		ctypes.c_double),
	("objZ",		ctypes.c_double),
	("model",		ctypes.POINTER(ctypes.c_double)),
	("proj",		ctypes.POINTER(ctypes.c_double)),
	("view",		ctypes.POINTER(ctypes.c_int)),
	("winX",		ctypes.POINTER(ctypes.c_double)),
	("winY",		ctypes.POINTER(ctypes.c_double)),
	("winZ",		ctypes.POINTER(ctypes.c_double)),] )

gluPwlCurve = _rpythonic_function_(		"gluPwlCurve", ctypes.c_void_p, [
	("nurb",		ctypes.POINTER(GLUnurbs)),
	("count",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_float)),
	("stride",		ctypes.c_int),
	("C_type",		ctypes.c_uint),] )

gluQuadricCallback = _rpythonic_function_(		"gluQuadricCallback", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("which",		ctypes.c_uint),
	("CallBackFunc",		ctypes.CFUNCTYPE(ctypes.c_void_p, )),] )

gluQuadricDrawStyle = _rpythonic_function_(		"gluQuadricDrawStyle", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("draw",		ctypes.c_uint),] )

gluQuadricNormals = _rpythonic_function_(		"gluQuadricNormals", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("normal",		ctypes.c_uint),] )

gluQuadricOrientation = _rpythonic_function_(		"gluQuadricOrientation", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("orientation",		ctypes.c_uint),] )

gluQuadricTexture = _rpythonic_function_(		"gluQuadricTexture", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("texture",		ctypes.c_ubyte),] )

gluScaleImage = _rpythonic_function_(		"gluScaleImage", ctypes.c_int, [
	("format",		ctypes.c_uint),
	("wIn",		ctypes.c_int),
	("hIn",		ctypes.c_int),
	("typeIn",		ctypes.c_uint),
	("dataIn",		ctypes.POINTER(ctypes.c_void_p)),
	("wOut",		ctypes.c_int),
	("hOut",		ctypes.c_int),
	("typeOut",		ctypes.c_uint),
	("dataOut",		ctypes.POINTER(ctypes.c_void_p)),] )

gluSphere = _rpythonic_function_(		"gluSphere", ctypes.c_void_p, [
	("quad",		ctypes.POINTER(GLUquadric)),
	("radius",		ctypes.c_double),
	("slices",		ctypes.c_int),
	("stacks",		ctypes.c_int),] )

gluTessBeginContour = _rpythonic_function_(		"gluTessBeginContour", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),] )

gluTessBeginPolygon = _rpythonic_function_(		"gluTessBeginPolygon", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluTessCallback = _rpythonic_function_(		"gluTessCallback", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("which",		ctypes.c_uint),
	("CallBackFunc",		ctypes.CFUNCTYPE(ctypes.c_void_p, )),] )

gluTessEndContour = _rpythonic_function_(		"gluTessEndContour", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),] )

gluTessEndPolygon = _rpythonic_function_(		"gluTessEndPolygon", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),] )

gluTessNormal = _rpythonic_function_(		"gluTessNormal", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("valueX",		ctypes.c_double),
	("valueY",		ctypes.c_double),
	("valueZ",		ctypes.c_double),] )

gluTessProperty = _rpythonic_function_(		"gluTessProperty", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("which",		ctypes.c_uint),
	("data",		ctypes.c_double),] )

gluTessVertex = _rpythonic_function_(		"gluTessVertex", ctypes.c_void_p, [
	("tess",		ctypes.POINTER(GLUtesselator)),
	("location",		ctypes.POINTER(ctypes.c_double)),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

gluUnProject = _rpythonic_function_(		"gluUnProject", ctypes.c_int, [
	("winX",		ctypes.c_double),
	("winY",		ctypes.c_double),
	("winZ",		ctypes.c_double),
	("model",		ctypes.POINTER(ctypes.c_double)),
	("proj",		ctypes.POINTER(ctypes.c_double)),
	("view",		ctypes.POINTER(ctypes.c_int)),
	("objX",		ctypes.POINTER(ctypes.c_double)),
	("objY",		ctypes.POINTER(ctypes.c_double)),
	("objZ",		ctypes.POINTER(ctypes.c_double)),] )

gluUnProject4 = _rpythonic_function_(		"gluUnProject4", ctypes.c_int, [
	("winX",		ctypes.c_double),
	("winY",		ctypes.c_double),
	("winZ",		ctypes.c_double),
	("clipW",		ctypes.c_double),
	("model",		ctypes.POINTER(ctypes.c_double)),
	("proj",		ctypes.POINTER(ctypes.c_double)),
	("view",		ctypes.POINTER(ctypes.c_int)),
	("nearVal",		ctypes.c_double),
	("farVal",		ctypes.c_double),
	("objX",		ctypes.POINTER(ctypes.c_double)),
	("objY",		ctypes.POINTER(ctypes.c_double)),
	("objZ",		ctypes.POINTER(ctypes.c_double)),
	("objW",		ctypes.POINTER(ctypes.c_double)),] )

glutInit = _rpythonic_function_(		"glutInit", ctypes.c_void_p, [
	("pargc",		ctypes.POINTER(ctypes.c_int)),
	("argv",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),] )

glutInitWindowPosition = _rpythonic_function_(		"glutInitWindowPosition", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

glutInitWindowSize = _rpythonic_function_(		"glutInitWindowSize", ctypes.c_void_p, [
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glutInitDisplayMode = _rpythonic_function_(		"glutInitDisplayMode", ctypes.c_void_p, [
	("displayMode",		ctypes.c_uint),] )

glutInitDisplayString = _rpythonic_function_(		"glutInitDisplayString", ctypes.c_void_p, [
	("displayMode",		ctypes.POINTER(ctypes.c_char)),] )

glutMainLoop = _rpythonic_function_(		"glutMainLoop", ctypes.c_void_p, [] )

glutCreateWindow = _rpythonic_function_(		"glutCreateWindow", ctypes.c_int, [
	("title",		ctypes.POINTER(ctypes.c_char)),] )

glutCreateSubWindow = _rpythonic_function_(		"glutCreateSubWindow", ctypes.c_int, [
	("window",		ctypes.c_int),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glutDestroyWindow = _rpythonic_function_(		"glutDestroyWindow", ctypes.c_void_p, [
	("window",		ctypes.c_int),] )

glutSetWindow = _rpythonic_function_(		"glutSetWindow", ctypes.c_void_p, [
	("window",		ctypes.c_int),] )

glutGetWindow = _rpythonic_function_(		"glutGetWindow", ctypes.c_int, [] )

glutSetWindowTitle = _rpythonic_function_(		"glutSetWindowTitle", ctypes.c_void_p, [
	("title",		ctypes.POINTER(ctypes.c_char)),] )

glutSetIconTitle = _rpythonic_function_(		"glutSetIconTitle", ctypes.c_void_p, [
	("title",		ctypes.POINTER(ctypes.c_char)),] )

glutReshapeWindow = _rpythonic_function_(		"glutReshapeWindow", ctypes.c_void_p, [
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

glutPositionWindow = _rpythonic_function_(		"glutPositionWindow", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

glutShowWindow = _rpythonic_function_(		"glutShowWindow", ctypes.c_void_p, [] )

glutHideWindow = _rpythonic_function_(		"glutHideWindow", ctypes.c_void_p, [] )

glutIconifyWindow = _rpythonic_function_(		"glutIconifyWindow", ctypes.c_void_p, [] )

glutPushWindow = _rpythonic_function_(		"glutPushWindow", ctypes.c_void_p, [] )

glutPopWindow = _rpythonic_function_(		"glutPopWindow", ctypes.c_void_p, [] )

glutFullScreen = _rpythonic_function_(		"glutFullScreen", ctypes.c_void_p, [] )

glutPostWindowRedisplay = _rpythonic_function_(		"glutPostWindowRedisplay", ctypes.c_void_p, [
	("window",		ctypes.c_int),] )

glutPostRedisplay = _rpythonic_function_(		"glutPostRedisplay", ctypes.c_void_p, [] )

glutSwapBuffers = _rpythonic_function_(		"glutSwapBuffers", ctypes.c_void_p, [] )

glutWarpPointer = _rpythonic_function_(		"glutWarpPointer", ctypes.c_void_p, [
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),] )

glutSetCursor = _rpythonic_function_(		"glutSetCursor", ctypes.c_void_p, [
	("cursor",		ctypes.c_int),] )

glutEstablishOverlay = _rpythonic_function_(		"glutEstablishOverlay", ctypes.c_void_p, [] )

glutRemoveOverlay = _rpythonic_function_(		"glutRemoveOverlay", ctypes.c_void_p, [] )

glutUseLayer = _rpythonic_function_(		"glutUseLayer", ctypes.c_void_p, [
	("layer",		ctypes.c_uint),] )

glutPostOverlayRedisplay = _rpythonic_function_(		"glutPostOverlayRedisplay", ctypes.c_void_p, [] )

glutPostWindowOverlayRedisplay = _rpythonic_function_(		"glutPostWindowOverlayRedisplay", ctypes.c_void_p, [
	("window",		ctypes.c_int),] )

glutShowOverlay = _rpythonic_function_(		"glutShowOverlay", ctypes.c_void_p, [] )

glutHideOverlay = _rpythonic_function_(		"glutHideOverlay", ctypes.c_void_p, [] )

glutCreateMenu = _rpythonic_function_(		"glutCreateMenu", ctypes.c_int, [
	("callback",		ctypes.c_void_p),] )

callback = _rpythonic_function_(		"callback", ctypes.c_void_p, [
	("menu",		ctypes.c_int),] )

glutDestroyMenu = _rpythonic_function_(		"glutDestroyMenu", ctypes.c_void_p, [
	("menu",		ctypes.c_int),] )

glutGetMenu = _rpythonic_function_(		"glutGetMenu", ctypes.c_int, [] )

glutSetMenu = _rpythonic_function_(		"glutSetMenu", ctypes.c_void_p, [
	("menu",		ctypes.c_int),] )

glutAddMenuEntry = _rpythonic_function_(		"glutAddMenuEntry", ctypes.c_void_p, [
	("label",		ctypes.POINTER(ctypes.c_char)),
	("value",		ctypes.c_int),] )

glutAddSubMenu = _rpythonic_function_(		"glutAddSubMenu", ctypes.c_void_p, [
	("label",		ctypes.POINTER(ctypes.c_char)),
	("subMenu",		ctypes.c_int),] )

glutChangeToMenuEntry = _rpythonic_function_(		"glutChangeToMenuEntry", ctypes.c_void_p, [
	("item",		ctypes.c_int),
	("label",		ctypes.POINTER(ctypes.c_char)),
	("value",		ctypes.c_int),] )

glutChangeToSubMenu = _rpythonic_function_(		"glutChangeToSubMenu", ctypes.c_void_p, [
	("item",		ctypes.c_int),
	("label",		ctypes.POINTER(ctypes.c_char)),
	("value",		ctypes.c_int),] )

glutRemoveMenuItem = _rpythonic_function_(		"glutRemoveMenuItem", ctypes.c_void_p, [
	("item",		ctypes.c_int),] )

glutAttachMenu = _rpythonic_function_(		"glutAttachMenu", ctypes.c_void_p, [
	("button",		ctypes.c_int),] )

glutDetachMenu = _rpythonic_function_(		"glutDetachMenu", ctypes.c_void_p, [
	("button",		ctypes.c_int),] )

glutTimerFunc = _rpythonic_function_(		"glutTimerFunc", ctypes.c_void_p, [
	("time",		ctypes.c_uint),
	("callback",		ctypes.c_void_p),
	("value",		ctypes.c_int),] )

glutIdleFunc = _rpythonic_function_(		"glutIdleFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutKeyboardFunc = _rpythonic_function_(		"glutKeyboardFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutSpecialFunc = _rpythonic_function_(		"glutSpecialFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutReshapeFunc = _rpythonic_function_(		"glutReshapeFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutVisibilityFunc = _rpythonic_function_(		"glutVisibilityFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutDisplayFunc = _rpythonic_function_(		"glutDisplayFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutMouseFunc = _rpythonic_function_(		"glutMouseFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutMotionFunc = _rpythonic_function_(		"glutMotionFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

glutPassiveMotionFunc = _rpythonic_function_(		"glutPassiveMotionFunc", ctypes.c_void_p, [
	("callback",		ctypes.c_void_p),] )

PFNGLPROVOKINGVERTEXPROC = _rpythonic_function_(		"PFNGLPROVOKINGVERTEXPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLFENCESYNCPROC = _rpythonic_function_(		"PFNGLFENCESYNCPROC", ctypes.POINTER(__GLsync), [
	("condition",		ctypes.c_uint),
	("flags",		ctypes.c_uint),] )

PFNGLISSYNCPROC = _rpythonic_function_(		"PFNGLISSYNCPROC", ctypes.c_ubyte, [
	("sync",		ctypes.POINTER(__GLsync)),] )

PFNGLDELETESYNCPROC = _rpythonic_function_(		"PFNGLDELETESYNCPROC", ctypes.c_void_p, [
	("sync",		ctypes.POINTER(__GLsync)),] )

PFNGLCLIENTWAITSYNCPROC = _rpythonic_function_(		"PFNGLCLIENTWAITSYNCPROC", ctypes.c_uint, [
	("sync",		ctypes.POINTER(__GLsync)),
	("flags",		ctypes.c_uint),
	("timeout",		ctypes.c_uint64),] )

PFNGLWAITSYNCPROC = _rpythonic_function_(		"PFNGLWAITSYNCPROC", ctypes.c_void_p, [
	("sync",		ctypes.POINTER(__GLsync)),
	("flags",		ctypes.c_uint),
	("timeout",		ctypes.c_uint64),] )

PFNGLGETINTEGER64VPROC = _rpythonic_function_(		"PFNGLGETINTEGER64VPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLGETSYNCIVPROC = _rpythonic_function_(		"PFNGLGETSYNCIVPROC", ctypes.c_void_p, [
	("sync",		ctypes.POINTER(__GLsync)),
	("pname",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("values",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXIMAGE2DMULTISAMPLEPROC = _rpythonic_function_(		"PFNGLTEXIMAGE2DMULTISAMPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("samples",		ctypes.c_int),
	("internalformat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("fixedsamplelocations",		ctypes.c_ubyte),] )

PFNGLTEXIMAGE3DMULTISAMPLEPROC = _rpythonic_function_(		"PFNGLTEXIMAGE3DMULTISAMPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("samples",		ctypes.c_int),
	("internalformat",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("fixedsamplelocations",		ctypes.c_ubyte),] )

PFNGLGETMULTISAMPLEFVPROC = _rpythonic_function_(		"PFNGLGETMULTISAMPLEFVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("val",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSAMPLEMASKIPROC = _rpythonic_function_(		"PFNGLSAMPLEMASKIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("mask",		ctypes.c_uint),] )

PFNGLBLENDEQUATIONIARBPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONIARBPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLBLENDEQUATIONSEPARATEIARBPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONSEPARATEIARBPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("modeRGB",		ctypes.c_uint),
	("modeAlpha",		ctypes.c_uint),] )

PFNGLBLENDFUNCIARBPROC = _rpythonic_function_(		"PFNGLBLENDFUNCIARBPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("src",		ctypes.c_uint),
	("dst",		ctypes.c_uint),] )

PFNGLBLENDFUNCSEPARATEIARBPROC = _rpythonic_function_(		"PFNGLBLENDFUNCSEPARATEIARBPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("srcRGB",		ctypes.c_uint),
	("dstRGB",		ctypes.c_uint),
	("srcAlpha",		ctypes.c_uint),
	("dstAlpha",		ctypes.c_uint),] )

PFNGLMINSAMPLESHADINGARBPROC = _rpythonic_function_(		"PFNGLMINSAMPLESHADINGARBPROC", ctypes.c_void_p, [
	("value",		ctypes.c_float),] )

PFNGLNAMEDSTRINGARBPROC = _rpythonic_function_(		"PFNGLNAMEDSTRINGARBPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("namelen",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_char)),
	("stringlen",		ctypes.c_int),
	("string",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLDELETENAMEDSTRINGARBPROC = _rpythonic_function_(		"PFNGLDELETENAMEDSTRINGARBPROC", ctypes.c_void_p, [
	("namelen",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLCOMPILESHADERINCLUDEARBPROC = _rpythonic_function_(		"PFNGLCOMPILESHADERINCLUDEARBPROC", ctypes.c_void_p, [
	("shader",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("path",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("length",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLISNAMEDSTRINGARBPROC = _rpythonic_function_(		"PFNGLISNAMEDSTRINGARBPROC", ctypes.c_ubyte, [
	("namelen",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETNAMEDSTRINGARBPROC = _rpythonic_function_(		"PFNGLGETNAMEDSTRINGARBPROC", ctypes.c_void_p, [
	("namelen",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_char)),
	("bufSize",		ctypes.c_int),
	("stringlen",		ctypes.POINTER(ctypes.c_int)),
	("string",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETNAMEDSTRINGIVARBPROC = _rpythonic_function_(		"PFNGLGETNAMEDSTRINGIVARBPROC", ctypes.c_void_p, [
	("namelen",		ctypes.c_int),
	("name",		ctypes.POINTER(ctypes.c_char)),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLBINDFRAGDATALOCATIONINDEXEDPROC = _rpythonic_function_(		"PFNGLBINDFRAGDATALOCATIONINDEXEDPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("colorNumber",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETFRAGDATAINDEXPROC = _rpythonic_function_(		"PFNGLGETFRAGDATAINDEXPROC", ctypes.c_int, [
	("program",		ctypes.c_uint),
	("name",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGENSAMPLERSPROC = _rpythonic_function_(		"PFNGLGENSAMPLERSPROC", ctypes.c_void_p, [
	("count",		ctypes.c_int),
	("samplers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETESAMPLERSPROC = _rpythonic_function_(		"PFNGLDELETESAMPLERSPROC", ctypes.c_void_p, [
	("count",		ctypes.c_int),
	("samplers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISSAMPLERPROC = _rpythonic_function_(		"PFNGLISSAMPLERPROC", ctypes.c_ubyte, [
	("sampler",		ctypes.c_uint),] )

PFNGLBINDSAMPLERPROC = _rpythonic_function_(		"PFNGLBINDSAMPLERPROC", ctypes.c_void_p, [
	("unit",		ctypes.c_uint),
	("sampler",		ctypes.c_uint),] )

PFNGLSAMPLERPARAMETERIPROC = _rpythonic_function_(		"PFNGLSAMPLERPARAMETERIPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_int),] )

PFNGLSAMPLERPARAMETERIVPROC = _rpythonic_function_(		"PFNGLSAMPLERPARAMETERIVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLSAMPLERPARAMETERFPROC = _rpythonic_function_(		"PFNGLSAMPLERPARAMETERFPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.c_float),] )

PFNGLSAMPLERPARAMETERFVPROC = _rpythonic_function_(		"PFNGLSAMPLERPARAMETERFVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSAMPLERPARAMETERIIVPROC = _rpythonic_function_(		"PFNGLSAMPLERPARAMETERIIVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLSAMPLERPARAMETERIUIVPROC = _rpythonic_function_(		"PFNGLSAMPLERPARAMETERIUIVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("param",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETSAMPLERPARAMETERIVPROC = _rpythonic_function_(		"PFNGLGETSAMPLERPARAMETERIVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETSAMPLERPARAMETERIIVPROC = _rpythonic_function_(		"PFNGLGETSAMPLERPARAMETERIIVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETSAMPLERPARAMETERFVPROC = _rpythonic_function_(		"PFNGLGETSAMPLERPARAMETERFVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETSAMPLERPARAMETERIUIVPROC = _rpythonic_function_(		"PFNGLGETSAMPLERPARAMETERIUIVPROC", ctypes.c_void_p, [
	("sampler",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLQUERYCOUNTERPROC = _rpythonic_function_(		"PFNGLQUERYCOUNTERPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("target",		ctypes.c_uint),] )

PFNGLGETQUERYOBJECTI64VPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTI64VPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int64)),] )

PFNGLGETQUERYOBJECTUI64VPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTUI64VPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint64)),] )

PFNGLVERTEXP2UIPROC = _rpythonic_function_(		"PFNGLVERTEXP2UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXP2UIVPROC = _rpythonic_function_(		"PFNGLVERTEXP2UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXP3UIPROC = _rpythonic_function_(		"PFNGLVERTEXP3UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXP3UIVPROC = _rpythonic_function_(		"PFNGLVERTEXP3UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXP4UIPROC = _rpythonic_function_(		"PFNGLVERTEXP4UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXP4UIVPROC = _rpythonic_function_(		"PFNGLVERTEXP4UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTEXCOORDP1UIPROC = _rpythonic_function_(		"PFNGLTEXCOORDP1UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLTEXCOORDP1UIVPROC = _rpythonic_function_(		"PFNGLTEXCOORDP1UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTEXCOORDP2UIPROC = _rpythonic_function_(		"PFNGLTEXCOORDP2UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLTEXCOORDP2UIVPROC = _rpythonic_function_(		"PFNGLTEXCOORDP2UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTEXCOORDP3UIPROC = _rpythonic_function_(		"PFNGLTEXCOORDP3UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLTEXCOORDP3UIVPROC = _rpythonic_function_(		"PFNGLTEXCOORDP3UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTEXCOORDP4UIPROC = _rpythonic_function_(		"PFNGLTEXCOORDP4UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLTEXCOORDP4UIVPROC = _rpythonic_function_(		"PFNGLTEXCOORDP4UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLMULTITEXCOORDP1UIPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP1UIPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLMULTITEXCOORDP1UIVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP1UIVPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLMULTITEXCOORDP2UIPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP2UIPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLMULTITEXCOORDP2UIVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP2UIVPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLMULTITEXCOORDP3UIPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP3UIPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLMULTITEXCOORDP3UIVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP3UIVPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLMULTITEXCOORDP4UIPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP4UIPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLMULTITEXCOORDP4UIVPROC = _rpythonic_function_(		"PFNGLMULTITEXCOORDP4UIVPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLNORMALP3UIPROC = _rpythonic_function_(		"PFNGLNORMALP3UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.c_uint),] )

PFNGLNORMALP3UIVPROC = _rpythonic_function_(		"PFNGLNORMALP3UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("coords",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCOLORP3UIPROC = _rpythonic_function_(		"PFNGLCOLORP3UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("color",		ctypes.c_uint),] )

PFNGLCOLORP3UIVPROC = _rpythonic_function_(		"PFNGLCOLORP3UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("color",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLCOLORP4UIPROC = _rpythonic_function_(		"PFNGLCOLORP4UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("color",		ctypes.c_uint),] )

PFNGLCOLORP4UIVPROC = _rpythonic_function_(		"PFNGLCOLORP4UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("color",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLSECONDARYCOLORP3UIPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLORP3UIPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("color",		ctypes.c_uint),] )

PFNGLSECONDARYCOLORP3UIVPROC = _rpythonic_function_(		"PFNGLSECONDARYCOLORP3UIVPROC", ctypes.c_void_p, [
	("C_type",		ctypes.c_uint),
	("color",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBP1UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP1UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBP1UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP1UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBP2UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP2UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBP2UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP2UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBP3UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP3UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBP3UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP3UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIBP4UIPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP4UIPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.c_uint),] )

PFNGLVERTEXATTRIBP4UIVPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBP4UIVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDRAWARRAYSINDIRECTPROC = _rpythonic_function_(		"PFNGLDRAWARRAYSINDIRECTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("indirect",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLDRAWELEMENTSINDIRECTPROC = _rpythonic_function_(		"PFNGLDRAWELEMENTSINDIRECTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("C_type",		ctypes.c_uint),
	("indirect",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLUNIFORM1DPROC = _rpythonic_function_(		"PFNGLUNIFORM1DPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),] )

PFNGLUNIFORM2DPROC = _rpythonic_function_(		"PFNGLUNIFORM2DPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLUNIFORM3DPROC = _rpythonic_function_(		"PFNGLUNIFORM3DPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLUNIFORM4DPROC = _rpythonic_function_(		"PFNGLUNIFORM4DPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLUNIFORM1DVPROC = _rpythonic_function_(		"PFNGLUNIFORM1DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORM2DVPROC = _rpythonic_function_(		"PFNGLUNIFORM2DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLUNIFORM3DVPROC = _rpythonic_function_(		"PFNGLUNIFORM3DVPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC = _rpythonic_function_(		"PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("lod",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("border",		ctypes.c_int),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("zoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("depth",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("yoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC = _rpythonic_function_(		"PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("xoffset",		ctypes.c_int),
	("width",		ctypes.c_int),
	("format",		ctypes.c_uint),
	("imageSize",		ctypes.c_int),
	("bits",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC = _rpythonic_function_(		"PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("lod",		ctypes.c_int),
	("img",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLNAMEDPROGRAMSTRINGEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMSTRINGEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("string",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETNAMEDPROGRAMIVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDPROGRAMIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETNAMEDPROGRAMSTRINGEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDPROGRAMSTRINGEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("string",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_int),
	("y",		ctypes.c_int),
	("z",		ctypes.c_int),
	("w",		ctypes.c_int),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_uint),
	("y",		ctypes.c_uint),
	("z",		ctypes.c_uint),
	("w",		ctypes.c_uint),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC = _rpythonic_function_(		"PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLTEXTUREPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTEXTUREPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLTEXTUREPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETTEXTUREPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTUREPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETTEXTUREPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLGETTEXTUREPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLMULTITEXPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLMULTITEXPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLMULTITEXPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETMULTITEXPARAMETERIIVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXPARAMETERIIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETMULTITEXPARAMETERIUIVEXTPROC = _rpythonic_function_(		"PFNGLGETMULTITEXPARAMETERIUIVEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM1FEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1FEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM2FEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2FEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM3FEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3FEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM4FEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4FEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),
	("v1",		ctypes.c_float),
	("v2",		ctypes.c_float),
	("v3",		ctypes.c_float),] )

PFNGLPROGRAMUNIFORM1IEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1IEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM2IEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2IEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM3IEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3IEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM4IEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4IEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_int),
	("v1",		ctypes.c_int),
	("v2",		ctypes.c_int),
	("v3",		ctypes.c_int),] )

PFNGLPROGRAMUNIFORM1FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM2FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM3FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM4FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM1IVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1IVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM2IVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2IVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM3IVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3IVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORM4IVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4IVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMUNIFORM1UIEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1UIEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM2UIEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2UIEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM3UIEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3UIEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM4UIEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4UIEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("v0",		ctypes.c_uint),
	("v1",		ctypes.c_uint),
	("v2",		ctypes.c_uint),
	("v3",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM1UIVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1UIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM2UIVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2UIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM3UIVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3UIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMUNIFORM4UIVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4UIVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLNAMEDBUFFERDATAEXTPROC = _rpythonic_function_(		"PFNGLNAMEDBUFFERDATAEXTPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),
	("usage",		ctypes.c_uint),] )

PFNGLNAMEDBUFFERSUBDATAEXTPROC = _rpythonic_function_(		"PFNGLNAMEDBUFFERSUBDATAEXTPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMAPNAMEDBUFFEREXTPROC = _rpythonic_function_(		"PFNGLMAPNAMEDBUFFEREXTPROC", ctypes.POINTER(ctypes.c_void_p), [
	("buffer",		ctypes.c_uint),
	("access",		ctypes.c_uint),] )

PFNGLUNMAPNAMEDBUFFEREXTPROC = _rpythonic_function_(		"PFNGLUNMAPNAMEDBUFFEREXTPROC", ctypes.c_ubyte, [
	("buffer",		ctypes.c_uint),] )

PFNGLMAPNAMEDBUFFERRANGEEXTPROC = _rpythonic_function_(		"PFNGLMAPNAMEDBUFFERRANGEEXTPROC", ctypes.POINTER(ctypes.c_void_p), [
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("length",		ctypes.c_int),
	("access",		ctypes.c_uint),] )

PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC = _rpythonic_function_(		"PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("length",		ctypes.c_int),] )

PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC = _rpythonic_function_(		"PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC", ctypes.c_void_p, [
	("readBuffer",		ctypes.c_uint),
	("writeBuffer",		ctypes.c_uint),
	("readOffset",		ctypes.c_int),
	("writeOffset",		ctypes.c_int),
	("size",		ctypes.c_int),] )

PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETNAMEDBUFFERPOINTERVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDBUFFERPOINTERVEXTPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLGETNAMEDBUFFERSUBDATAEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDBUFFERSUBDATAEXTPROC", ctypes.c_void_p, [
	("buffer",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLTEXTUREBUFFEREXTPROC = _rpythonic_function_(		"PFNGLTEXTUREBUFFEREXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLMULTITEXBUFFEREXTPROC = _rpythonic_function_(		"PFNGLMULTITEXBUFFEREXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC = _rpythonic_function_(		"PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC", ctypes.c_void_p, [
	("renderbuffer",		ctypes.c_uint),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("renderbuffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC = _rpythonic_function_(		"PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC", ctypes.c_uint, [
	("framebuffer",		ctypes.c_uint),
	("target",		ctypes.c_uint),] )

PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("textarget",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("zoffset",		ctypes.c_int),] )

PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("renderbuffertarget",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGENERATETEXTUREMIPMAPEXTPROC = _rpythonic_function_(		"PFNGLGENERATETEXTUREMIPMAPEXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),] )

PFNGLGENERATEMULTITEXMIPMAPEXTPROC = _rpythonic_function_(		"PFNGLGENERATEMULTITEXMIPMAPEXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),] )

PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("n",		ctypes.c_int),
	("bufs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLFRAMEBUFFERREADBUFFEREXTPROC = _rpythonic_function_(		"PFNGLFRAMEBUFFERREADBUFFEREXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC = _rpythonic_function_(		"PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = _rpythonic_function_(		"PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC", ctypes.c_void_p, [
	("renderbuffer",		ctypes.c_uint),
	("samples",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC = _rpythonic_function_(		"PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC", ctypes.c_void_p, [
	("renderbuffer",		ctypes.c_uint),
	("coverageSamples",		ctypes.c_int),
	("colorSamples",		ctypes.c_int),
	("internalformat",		ctypes.c_uint),
	("width",		ctypes.c_int),
	("height",		ctypes.c_int),] )

PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),] )

PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("layer",		ctypes.c_int),] )

PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC = _rpythonic_function_(		"PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC", ctypes.c_void_p, [
	("framebuffer",		ctypes.c_uint),
	("attachment",		ctypes.c_uint),
	("texture",		ctypes.c_uint),
	("level",		ctypes.c_int),
	("face",		ctypes.c_uint),] )

PFNGLTEXTURERENDERBUFFEREXTPROC = _rpythonic_function_(		"PFNGLTEXTURERENDERBUFFEREXTPROC", ctypes.c_void_p, [
	("texture",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLMULTITEXRENDERBUFFEREXTPROC = _rpythonic_function_(		"PFNGLMULTITEXRENDERBUFFEREXTPROC", ctypes.c_void_p, [
	("texunit",		ctypes.c_uint),
	("target",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLPROGRAMUNIFORM1DEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1DEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM2DEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2DEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM3DEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3DEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM4DEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4DEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLPROGRAMUNIFORM1DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM1DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM2DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM2DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM3DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM3DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORM4DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORM4DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC = _rpythonic_function_(		"PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC", ctypes.c_void_p, [
	("program",		ctypes.c_uint),
	("location",		ctypes.c_int),
	("count",		ctypes.c_int),
	("transpose",		ctypes.c_ubyte),
	("value",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETMULTISAMPLEFVNVPROC = _rpythonic_function_(		"PFNGLGETMULTISAMPLEFVNVPROC", ctypes.c_void_p, [
	("pname",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("val",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLSAMPLEMASKINDEXEDNVPROC = _rpythonic_function_(		"PFNGLSAMPLEMASKINDEXEDNVPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("mask",		ctypes.c_uint),] )

PFNGLTEXRENDERBUFFERNVPROC = _rpythonic_function_(		"PFNGLTEXRENDERBUFFERNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("renderbuffer",		ctypes.c_uint),] )

PFNGLBINDTRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLBINDTRANSFORMFEEDBACKNVPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLDELETETRANSFORMFEEDBACKSNVPROC = _rpythonic_function_(		"PFNGLDELETETRANSFORMFEEDBACKSNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENTRANSFORMFEEDBACKSNVPROC = _rpythonic_function_(		"PFNGLGENTRANSFORMFEEDBACKSNVPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISTRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLISTRANSFORMFEEDBACKNVPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),] )

PFNGLPAUSETRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLPAUSETRANSFORMFEEDBACKNVPROC", ctypes.c_void_p, [] )

PFNGLRESUMETRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLRESUMETRANSFORMFEEDBACKNVPROC", ctypes.c_void_p, [] )

PFNGLDRAWTRANSFORMFEEDBACKNVPROC = _rpythonic_function_(		"PFNGLDRAWTRANSFORMFEEDBACKNVPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLGETPERFMONITORGROUPSAMDPROC = _rpythonic_function_(		"PFNGLGETPERFMONITORGROUPSAMDPROC", ctypes.c_void_p, [
	("numGroups",		ctypes.POINTER(ctypes.c_int)),
	("groupsSize",		ctypes.c_int),
	("groups",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPERFMONITORCOUNTERSAMDPROC = _rpythonic_function_(		"PFNGLGETPERFMONITORCOUNTERSAMDPROC", ctypes.c_void_p, [
	("group",		ctypes.c_uint),
	("numCounters",		ctypes.POINTER(ctypes.c_int)),
	("maxActiveCounters",		ctypes.POINTER(ctypes.c_int)),
	("counterSize",		ctypes.c_int),
	("counters",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGETPERFMONITORGROUPSTRINGAMDPROC = _rpythonic_function_(		"PFNGLGETPERFMONITORGROUPSTRINGAMDPROC", ctypes.c_void_p, [
	("group",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("groupString",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC = _rpythonic_function_(		"PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC", ctypes.c_void_p, [
	("group",		ctypes.c_uint),
	("counter",		ctypes.c_uint),
	("bufSize",		ctypes.c_int),
	("length",		ctypes.POINTER(ctypes.c_int)),
	("counterString",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLGETPERFMONITORCOUNTERINFOAMDPROC = _rpythonic_function_(		"PFNGLGETPERFMONITORCOUNTERINFOAMDPROC", ctypes.c_void_p, [
	("group",		ctypes.c_uint),
	("counter",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGENPERFMONITORSAMDPROC = _rpythonic_function_(		"PFNGLGENPERFMONITORSAMDPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("monitors",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETEPERFMONITORSAMDPROC = _rpythonic_function_(		"PFNGLDELETEPERFMONITORSAMDPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("monitors",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLSELECTPERFMONITORCOUNTERSAMDPROC = _rpythonic_function_(		"PFNGLSELECTPERFMONITORCOUNTERSAMDPROC", ctypes.c_void_p, [
	("monitor",		ctypes.c_uint),
	("enable",		ctypes.c_ubyte),
	("group",		ctypes.c_uint),
	("numCounters",		ctypes.c_int),
	("counterList",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLBEGINPERFMONITORAMDPROC = _rpythonic_function_(		"PFNGLBEGINPERFMONITORAMDPROC", ctypes.c_void_p, [
	("monitor",		ctypes.c_uint),] )

PFNGLENDPERFMONITORAMDPROC = _rpythonic_function_(		"PFNGLENDPERFMONITORAMDPROC", ctypes.c_void_p, [
	("monitor",		ctypes.c_uint),] )

PFNGLGETPERFMONITORCOUNTERDATAAMDPROC = _rpythonic_function_(		"PFNGLGETPERFMONITORCOUNTERDATAAMDPROC", ctypes.c_void_p, [
	("monitor",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("dataSize",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_uint)),
	("bytesWritten",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLTESSELLATIONFACTORAMDPROC = _rpythonic_function_(		"PFNGLTESSELLATIONFACTORAMDPROC", ctypes.c_void_p, [
	("factor",		ctypes.c_float),] )

PFNGLTESSELLATIONMODEAMDPROC = _rpythonic_function_(		"PFNGLTESSELLATIONMODEAMDPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLPROVOKINGVERTEXEXTPROC = _rpythonic_function_(		"PFNGLPROVOKINGVERTEXEXTPROC", ctypes.c_void_p, [
	("mode",		ctypes.c_uint),] )

PFNGLBLENDFUNCINDEXEDAMDPROC = _rpythonic_function_(		"PFNGLBLENDFUNCINDEXEDAMDPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("src",		ctypes.c_uint),
	("dst",		ctypes.c_uint),] )

PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC = _rpythonic_function_(		"PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("srcRGB",		ctypes.c_uint),
	("dstRGB",		ctypes.c_uint),
	("srcAlpha",		ctypes.c_uint),
	("dstAlpha",		ctypes.c_uint),] )

PFNGLBLENDEQUATIONINDEXEDAMDPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONINDEXEDAMDPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("mode",		ctypes.c_uint),] )

PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC = _rpythonic_function_(		"PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC", ctypes.c_void_p, [
	("buf",		ctypes.c_uint),
	("modeRGB",		ctypes.c_uint),
	("modeAlpha",		ctypes.c_uint),] )

PFNGLTEXTURERANGEAPPLEPROC = _rpythonic_function_(		"PFNGLTEXTURERANGEAPPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("length",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC = _rpythonic_function_(		"PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLENABLEVERTEXATTRIBAPPLEPROC = _rpythonic_function_(		"PFNGLENABLEVERTEXATTRIBAPPLEPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),] )

PFNGLVERTEXATTRIB1DARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1DARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),] )

PFNGLVERTEXATTRIB1DVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1DVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB1FARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1FARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),] )

PFNGLVERTEXATTRIB1FVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1FVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB1SARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1SARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),] )

PFNGLVERTEXATTRIB1SVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB1SVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB2DARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2DARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),] )

PFNGLVERTEXATTRIB2DVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2DVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB2FARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2FARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),] )

PFNGLVERTEXATTRIB2FVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2FVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB2SARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2SARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),] )

PFNGLVERTEXATTRIB2SVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB2SVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB3DARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3DARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),] )

PFNGLVERTEXATTRIB3DVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3DVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB3FARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3FARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),] )

PFNGLVERTEXATTRIB3FVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3FVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB3SARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3SARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),] )

PFNGLVERTEXATTRIB3SVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB3SVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4NBVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NBVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIB4NIVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NIVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIB4NSVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NSVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4NUBARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUBARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_ubyte),
	("y",		ctypes.c_ubyte),
	("z",		ctypes.c_ubyte),
	("w",		ctypes.c_ubyte),] )

PFNGLVERTEXATTRIB4NUBVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUBVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIB4NUIVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUIVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIB4NUSVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4NUSVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIB4BVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4BVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_char)),] )

PFNGLVERTEXATTRIB4DARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4DARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLVERTEXATTRIB4DVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4DVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLVERTEXATTRIB4FARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4FARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLVERTEXATTRIB4FVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4FVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLVERTEXATTRIB4IVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4IVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLVERTEXATTRIB4SARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4SARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("x",		ctypes.c_short),
	("y",		ctypes.c_short),
	("z",		ctypes.c_short),
	("w",		ctypes.c_short),] )

PFNGLVERTEXATTRIB4SVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4SVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_short)),] )

PFNGLVERTEXATTRIB4UBVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4UBVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ubyte)),] )

PFNGLVERTEXATTRIB4UIVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4UIVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLVERTEXATTRIB4USVARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIB4USVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("v",		ctypes.POINTER(ctypes.c_ushort)),] )

PFNGLVERTEXATTRIBPOINTERARBPROC = _rpythonic_function_(		"PFNGLVERTEXATTRIBPOINTERARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("C_type",		ctypes.c_uint),
	("normalized",		ctypes.c_ubyte),
	("stride",		ctypes.c_int),
	("pointer",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLENABLEVERTEXATTRIBARRAYARBPROC = _rpythonic_function_(		"PFNGLENABLEVERTEXATTRIBARRAYARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),] )

PFNGLDISABLEVERTEXATTRIBARRAYARBPROC = _rpythonic_function_(		"PFNGLDISABLEVERTEXATTRIBARRAYARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),] )

PFNGLPROGRAMSTRINGARBPROC = _rpythonic_function_(		"PFNGLPROGRAMSTRINGARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("format",		ctypes.c_uint),
	("C_len",		ctypes.c_int),
	("string",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLBINDPROGRAMARBPROC = _rpythonic_function_(		"PFNGLBINDPROGRAMARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("program",		ctypes.c_uint),] )

PFNGLDELETEPROGRAMSARBPROC = _rpythonic_function_(		"PFNGLDELETEPROGRAMSARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("programs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENPROGRAMSARBPROC = _rpythonic_function_(		"PFNGLGENPROGRAMSARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("programs",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLPROGRAMENVPARAMETER4DARBPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETER4DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLPROGRAMENVPARAMETER4DVARBPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETER4DVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMENVPARAMETER4FARBPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETER4FARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLPROGRAMENVPARAMETER4FVARBPROC = _rpythonic_function_(		"PFNGLPROGRAMENVPARAMETER4FVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLPROGRAMLOCALPARAMETER4DARBPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETER4DARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_double),
	("y",		ctypes.c_double),
	("z",		ctypes.c_double),
	("w",		ctypes.c_double),] )

PFNGLPROGRAMLOCALPARAMETER4DVARBPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETER4DVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLPROGRAMLOCALPARAMETER4FARBPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETER4FARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("x",		ctypes.c_float),
	("y",		ctypes.c_float),
	("z",		ctypes.c_float),
	("w",		ctypes.c_float),] )

PFNGLPROGRAMLOCALPARAMETER4FVARBPROC = _rpythonic_function_(		"PFNGLPROGRAMLOCALPARAMETER4FVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETPROGRAMENVPARAMETERDVARBPROC = _rpythonic_function_(		"PFNGLGETPROGRAMENVPARAMETERDVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETPROGRAMENVPARAMETERFVARBPROC = _rpythonic_function_(		"PFNGLGETPROGRAMENVPARAMETERFVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC = _rpythonic_function_(		"PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC = _rpythonic_function_(		"PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("index",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETPROGRAMIVARBPROC = _rpythonic_function_(		"PFNGLGETPROGRAMIVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETPROGRAMSTRINGARBPROC = _rpythonic_function_(		"PFNGLGETPROGRAMSTRINGARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("string",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETVERTEXATTRIBDVARBPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBDVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_double)),] )

PFNGLGETVERTEXATTRIBFVARBPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBFVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_float)),] )

PFNGLGETVERTEXATTRIBIVARBPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBIVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETVERTEXATTRIBPOINTERVARBPROC = _rpythonic_function_(		"PFNGLGETVERTEXATTRIBPOINTERVARBPROC", ctypes.c_void_p, [
	("index",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("pointer",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLISPROGRAMARBPROC = _rpythonic_function_(		"PFNGLISPROGRAMARBPROC", ctypes.c_ubyte, [
	("program",		ctypes.c_uint),] )

PFNGLBINDBUFFERARBPROC = _rpythonic_function_(		"PFNGLBINDBUFFERARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("buffer",		ctypes.c_uint),] )

PFNGLDELETEBUFFERSARBPROC = _rpythonic_function_(		"PFNGLDELETEBUFFERSARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("buffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLGENBUFFERSARBPROC = _rpythonic_function_(		"PFNGLGENBUFFERSARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("buffers",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISBUFFERARBPROC = _rpythonic_function_(		"PFNGLISBUFFERARBPROC", ctypes.c_ubyte, [
	("buffer",		ctypes.c_uint),] )

PFNGLBUFFERDATAARBPROC = _rpythonic_function_(		"PFNGLBUFFERDATAARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),
	("usage",		ctypes.c_uint),] )

PFNGLBUFFERSUBDATAARBPROC = _rpythonic_function_(		"PFNGLBUFFERSUBDATAARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLGETBUFFERSUBDATAARBPROC = _rpythonic_function_(		"PFNGLGETBUFFERSUBDATAARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("offset",		ctypes.c_int),
	("size",		ctypes.c_int),
	("data",		ctypes.POINTER(ctypes.c_void_p)),] )

PFNGLMAPBUFFERARBPROC = _rpythonic_function_(		"PFNGLMAPBUFFERARBPROC", ctypes.POINTER(ctypes.c_void_p), [
	("target",		ctypes.c_uint),
	("access",		ctypes.c_uint),] )

PFNGLUNMAPBUFFERARBPROC = _rpythonic_function_(		"PFNGLUNMAPBUFFERARBPROC", ctypes.c_ubyte, [
	("target",		ctypes.c_uint),] )

PFNGLGETBUFFERPARAMETERIVARBPROC = _rpythonic_function_(		"PFNGLGETBUFFERPARAMETERIVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETBUFFERPOINTERVARBPROC = _rpythonic_function_(		"PFNGLGETBUFFERPOINTERVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.POINTER(ctypes.c_void_p))),] )

PFNGLGENQUERIESARBPROC = _rpythonic_function_(		"PFNGLGENQUERIESARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETEQUERIESARBPROC = _rpythonic_function_(		"PFNGLDELETEQUERIESARBPROC", ctypes.c_void_p, [
	("n",		ctypes.c_int),
	("ids",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLISQUERYARBPROC = _rpythonic_function_(		"PFNGLISQUERYARBPROC", ctypes.c_ubyte, [
	("C_id",		ctypes.c_uint),] )

PFNGLBEGINQUERYARBPROC = _rpythonic_function_(		"PFNGLBEGINQUERYARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("C_id",		ctypes.c_uint),] )

PFNGLENDQUERYARBPROC = _rpythonic_function_(		"PFNGLENDQUERYARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),] )

PFNGLGETQUERYIVARBPROC = _rpythonic_function_(		"PFNGLGETQUERYIVARBPROC", ctypes.c_void_p, [
	("target",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETQUERYOBJECTIVARBPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTIVARBPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLGETQUERYOBJECTUIVARBPROC = _rpythonic_function_(		"PFNGLGETQUERYOBJECTUIVARBPROC", ctypes.c_void_p, [
	("C_id",		ctypes.c_uint),
	("pname",		ctypes.c_uint),
	("params",		ctypes.POINTER(ctypes.c_uint)),] )

PFNGLDELETEOBJECTARBPROC = _rpythonic_function_(		"PFNGLDELETEOBJECTARBPROC", ctypes.c_void_p, [
	("obj",		ctypes.c_uint),] )

PFNGLGETHANDLEARBPROC = _rpythonic_function_(		"PFNGLGETHANDLEARBPROC", ctypes.c_uint, [
	("pname",		ctypes.c_uint),] )

PFNGLDETACHOBJECTARBPROC = _rpythonic_function_(		"PFNGLDETACHOBJECTARBPROC", ctypes.c_void_p, [
	("containerObj",		ctypes.c_uint),
	("attachedObj",		ctypes.c_uint),] )

PFNGLCREATESHADEROBJECTARBPROC = _rpythonic_function_(		"PFNGLCREATESHADEROBJECTARBPROC", ctypes.c_uint, [
	("shaderType",		ctypes.c_uint),] )

PFNGLSHADERSOURCEARBPROC = _rpythonic_function_(		"PFNGLSHADERSOURCEARBPROC", ctypes.c_void_p, [
	("shaderObj",		ctypes.c_uint),
	("count",		ctypes.c_int),
	("string",		ctypes.POINTER(ctypes.POINTER(ctypes.c_char))),
	("length",		ctypes.POINTER(ctypes.c_int)),] )

PFNGLCOMPILESHADERARBPROC = _rpythonic_function_(		"PFNGLCOMPILESHADERARBPROC", ctypes.c_void_p, [
	("shaderObj",		ctypes.c_uint),] )

PFNGLCREATEPROGRAMOBJECTARBPROC = _rpythonic_function_(		"PFNGLCREATEPROGRAMOBJECTARBPROC", ctypes.c_uint, [] )

PFNGLATTACHOBJECTARBPROC = _rpythonic_function_(		"PFNGLATTACHOBJECTARBPROC", ctypes.c_void_p, [
	("containerObj",		ctypes.c_uint),
	("obj",		ctypes.c_uint),] )

PFNGLLINKPROGRAMARBPROC = _rpythonic_function_(		"PFNGLLINKPROGRAMARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),] )

PFNGLUSEPROGRAMOBJECTARBPROC = _rpythonic_function_(		"PFNGLUSEPROGRAMOBJECTARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),] )

PFNGLVALIDATEPROGRAMARBPROC = _rpythonic_function_(		"PFNGLVALIDATEPROGRAMARBPROC", ctypes.c_void_p, [
	("programObj",		ctypes.c_uint),] )

PFNGLUNIFORM1FARBPROC = _rpythonic_function_(		"PFNGLUNIFORM1FARBPROC", ctypes.c_void_p, [
	("location",		ctypes.c_int),
	("v0",		ctypes.c_float),] )


_rpythonic_convert_structs_to_objects()

_rpythonic_setup_return_wrappers()
_rpythonic_make_nice_global_enums_()
_rpythonic_clean_up_missing_functions_()

################### Raymond Hettinger's Constant Folding ##################
# Decorator for BindingConstants at compile time
# A recipe by Raymond Hettinger, from Python Cookbook:
# http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/277940
# updated for Python3 and still compatible with Python2 - by Hart, May17th 2011

try: _BUILTINS_DICT_ = vars(__builtins__)
except: _BUILTINS_DICT_ = __builtins__
ISPYTHON2 = sys.version_info[0] == 2
_HETTINGER_FOLDS_ = 0

def _hettinger_make_constants(f, builtin_only=False, stoplist=[], verbose=0):
    from opcode import opmap, HAVE_ARGUMENT, EXTENDED_ARG
    global _HETTINGER_FOLDS_
    try:
        if ISPYTHON2: co = f.func_code; fname = f.func_name
        else: co = f.__code__; fname = f.__name__
    except AttributeError: return f        # Jython doesn't have a func_code attribute.
    if ISPYTHON2: newcode = map(ord, co.co_code)
    else: newcode = list( co.co_code )
    newconsts = list(co.co_consts)
    names = co.co_names
    codelen = len(newcode)
    if ISPYTHON2:
        if verbose >= 2: print( f.func_name )
        func_globals = f.func_globals
    else:
        if verbose >= 2: print( f.__name__ )
        func_globals = f.__globals__

    env = _BUILTINS_DICT_.copy()
    if builtin_only:
        stoplist = dict.fromkeys(stoplist)
        stoplist.update(func_globals)
    else:
        env.update(func_globals)

    # First pass converts global lookups into constants
    i = 0
    while i < codelen:
        opcode = newcode[i]
        if opcode in (EXTENDED_ARG, opmap['STORE_GLOBAL']):
            if verbose >= 1: print('skipping function', fname)
            return f    # for simplicity, only optimize common cases
        if opcode == opmap['LOAD_GLOBAL']:
            oparg = newcode[i+1] + (newcode[i+2] << 8)
            name = co.co_names[oparg]
            if name in env and name not in stoplist:
                value = env[name]
                for pos, v in enumerate(newconsts):
                    if v is value:
                        break
                else:
                    pos = len(newconsts)
                    newconsts.append(value)
                newcode[i] = opmap['LOAD_CONST']
                newcode[i+1] = pos & 0xFF
                newcode[i+2] = pos >> 8
                _HETTINGER_FOLDS_ += 1
                if verbose >= 2:
                    print( "    global constant fold:", name )
        i += 1
        if opcode >= HAVE_ARGUMENT:
            i += 2

    # Second pass folds tuples of constants and constant attribute lookups
    i = 0
    while i < codelen:

        newtuple = []
        while newcode[i] == opmap['LOAD_CONST']:
            oparg = newcode[i+1] + (newcode[i+2] << 8)
            newtuple.append(newconsts[oparg])
            i += 3

        opcode = newcode[i]
        if not newtuple:
            i += 1
            if opcode >= HAVE_ARGUMENT:
                i += 2
            continue

        if opcode == opmap['LOAD_ATTR']:
            obj = newtuple[-1]
            oparg = newcode[i+1] + (newcode[i+2] << 8)
            name = names[oparg]
            try:
                value = getattr(obj, name)
                if verbose >= 2: print( '    folding attribute', name )
            except AttributeError:
                continue
            deletions = 1

        elif opcode == opmap['BUILD_TUPLE']:
            oparg = newcode[i+1] + (newcode[i+2] << 8)
            if oparg != len(newtuple): continue
            deletions = len(newtuple)
            value = tuple(newtuple)

        else: continue

        reljump = deletions * 3
        newcode[i-reljump] = opmap['JUMP_FORWARD']
        newcode[i-reljump+1] = (reljump-3) & 0xFF
        newcode[i-reljump+2] = (reljump-3) >> 8

        n = len(newconsts)
        newconsts.append(value)
        newcode[i] = opmap['LOAD_CONST']
        newcode[i+1] = n & 0xFF
        newcode[i+2] = n >> 8
        i += 3
        _HETTINGER_FOLDS_ += 1
        if verbose >= 2:
            print( "    folded constant:",value )

    if ISPYTHON2:
        codestr = ''.join(map(chr, newcode))
        codeobj = type(co)(co.co_argcount, co.co_nlocals, co.co_stacksize,
                        co.co_flags, codestr, tuple(newconsts), co.co_names,
                        co.co_varnames, co.co_filename, co.co_name,
                        co.co_firstlineno, co.co_lnotab, co.co_freevars,
                        co.co_cellvars)
        return type(f)(codeobj, f.func_globals, f.func_name, f.func_defaults, f.func_closure)
    else:
        codestr = b''
        for s in newcode: codestr += s.to_bytes(1,'little')
        codeobj = type(co)(co.co_argcount, co.co_kwonlyargcount, co.co_nlocals, co.co_stacksize,
                        co.co_flags, codestr, tuple(newconsts), co.co_names,
                        co.co_varnames, co.co_filename, co.co_name,
                        co.co_firstlineno, co.co_lnotab, co.co_freevars,
                        co.co_cellvars)
        return type(f)(codeobj, f.__globals__, f.__name__, f.__defaults__, f.__closure__)


def hettinger_bind_recursive(mc, builtin_only=False, stoplist=[],  verbose=0):
    """Recursively apply constant binding to functions in a module or class.

    Use as the last line of the module (after everything is defined, but
    before test code).  In modules that need modifiable globals, set
    builtin_only to True.

    """
    import types
    try: d = vars(mc)
    except TypeError: return
    if ISPYTHON2: recursivetypes = (type, types.ClassType)
    else: recursivetypes = (type,)
    for k, v in d.items():
        if type(v) is types.FunctionType:
            newv = _hettinger_make_constants(v, builtin_only, stoplist,  verbose)
            setattr(mc, k, newv)
        elif type(v) in recursivetypes:
            hettinger_bind_recursive(v, builtin_only, stoplist, verbose)

def hettinger_transform( module=None ):
    global _HETTINGER_FOLDS_
    _HETTINGER_FOLDS_ = 0
    if not module: module = sys.modules[__name__]
    hettinger_bind_recursive( module, verbose=1 )
    print( 'HETTINGER: constants folded', _HETTINGER_FOLDS_ )
